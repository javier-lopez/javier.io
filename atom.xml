<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Javier L√≥pez</title>
 <link href="http://javier.io/atom.xml" rel="self"/>
 <link href="http://javier.io/"/>
 <updated>2025-09-20T15:18:02+00:00</updated>
 <id>http://javier.io/</id>

 
 <entry>
   <title>hack the planet</title>
   <link href="http://javier.io/blog/en/2025/06/07/hack-the-planet.html"/>
   <updated>2025-06-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2025/06/07/hack-the-planet</id>
   <content type="html">&lt;h2 id=&quot;hack-the-planet&quot;&gt;hack the planet&lt;/h2&gt;

&lt;h6 id=&quot;07-jun-2025&quot;&gt;07 Jun 2025&lt;/h6&gt;

&lt;p&gt;Try n credential attemps in single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc&lt;/code&gt; connections:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for i in $(seq -s &quot; &quot; -f %04g 0 10000);do echo password attempt $i; done | nc localhost 30002
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Escape &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;more&lt;/code&gt; pager:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;resize terminal window until &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;more&lt;/code&gt; pauses due to non sufficient space to show text #tested in git4win/powershell&lt;/li&gt;
  &lt;li&gt;press ‚Äòv‚Äô to launch a vim readonly instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Escape &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:set shell=/bin/bash
:shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Abuse &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sh|bash&lt;/code&gt; extrapolations, C sample:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;while(true) {
  print(&quot;&amp;gt;&amp;gt; &quot;);
  cmd = makeUppercase(readInput());
  print(execute(&quot;sh&quot;, &quot;-c&quot;, cmd)); #security issue here
} #execute launches 'sh -c cmd' which on this case init the variable $0 to the name of the program 'sh'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Therefore if we type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$0&lt;/code&gt;, it would execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sh -c sh&lt;/code&gt;, giving away a shell!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$0
# bash #now we move to a more confortable shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy hacking! üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>nvim migration</title>
   <link href="http://javier.io/blog/en/2025/01/30/nvim-migration.html"/>
   <updated>2025-01-30T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2025/01/30/nvim-migration</id>
   <content type="html">&lt;h2 id=&quot;nvim-migration&quot;&gt;nvim migration&lt;/h2&gt;

&lt;h6 id=&quot;30-jan-2025&quot;&gt;30 Jan 2025&lt;/h6&gt;

&lt;p&gt;I avoided &lt;a href=&quot;https://neovim.io/&quot;&gt;Neovim&lt;/a&gt; for a long time because of backwards
compatibility fear, even from Vim 7x to 8x compatibility is an issue, however
this was unfunded, NeoVim could be more compatible with Vim than Vim itself, no
need to learn Lua  (at the beginning), took a day (a long one) to convert my 10
years old vim configuration to an almost identical setup in NeoVim with
increased performance and better functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fully compatible with Vimscripting, 90% vim plugins just works&lt;/li&gt;
  &lt;li&gt;Faster than Vim and much faster than Studio Code, or any other graphical editor&lt;/li&gt;
  &lt;li&gt;Integrated with latest plugin developments, eg: Github Copilot / Github
 Copilot Chat, matched only by Visual Studio Code and Jetbrains IDEs&lt;/li&gt;
  &lt;li&gt;Thriving community, advanced users / developers, chance to choose from
 several implementations, all equality good and feature complete: eg, as for
 plugin manager: lazy.nvim, vim-plug, rocks.vim, etc.&lt;/li&gt;
  &lt;li&gt;Multi OS support, a single configuration file can be used in Windows / OSX / Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Medium / Hard to setup in comparition with vim which is available in most
 Unix systems by default&lt;/li&gt;
  &lt;li&gt;Medium / Hard to master if you‚Äôre not used to vim&lt;/li&gt;
  &lt;li&gt;Step curve if you‚Äôre only used to vimscripting and want to extend
 functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windows-1011&quot;&gt;Windows 10/11&lt;/h2&gt;

&lt;p&gt;Neovim on Windows doesn‚Äôt require WSL, it works great if the proper environment
is set, a good terminal emulator, fonts, and a gcc compiler to run the heavier
plugins at the speed of though.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;, a package manager that allows to
install the other dependencies in a single command line, from an Admistrator
PowerShell prompt:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Latest version of Powershell to have a better experience within the CLI in general:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco install -y powershell-core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A better Terminal emulator:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco install -y microsoft-windows-terminal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fonts, go to &lt;a href=&quot;https://www.nerdfonts.com/font-downloads&quot;&gt;Nerd Fonts&lt;/a&gt; and
     download your favorite, Caskaydia Cove  is a good one, this would allow to
     have emojics in the terminal, once downloaded the archive unzip it and
     install the OTF files to &lt;strong&gt;‚Äúall users‚Äù&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/nerd-fonts-caskaydia.png&quot;&gt;&lt;img src=&quot;/assets/img/nerd-fonts-caskaydia.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; to compile plugins and supercharge Nvim (optional):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco install -y make
choco install -y mingw
choco install -y git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nodejs&lt;/code&gt; to setup Github Copilot integration (optional):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download and run &lt;a href=&quot;https://github.com/coreybutler/nvm-windows/releases/download/1.2.2/nvm-setup.exe&quot;&gt;https://github.com/coreybutler/nvm-windows/releases/download/1.2.2/nvm-setup.exe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Install latest &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nodejs&lt;/code&gt; from an Administration powershell prompt: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm install latest&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Configure latest version to provide nodejs: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm use 23.6.1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dependencies configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Configure the new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; to use the latest &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Powershell&lt;/code&gt; and the downloaded fonts:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/terminal-powershell-nerd-fonts-startup.png&quot;&gt;&lt;img src=&quot;/assets/img/terminal-powershell-nerd-fonts-startup.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/terminal-powershell-nerd-fonts-powershell.png&quot;&gt;&lt;img src=&quot;/assets/img/terminal-powershell-nerd-fonts-powershell.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/terminal-powershell-nerd-fonts-text.png&quot;&gt;&lt;img src=&quot;/assets/img/terminal-powershell-nerd-fonts-text.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/terminal-powershell-nerd-fonts-caskaydia.png&quot;&gt;&lt;img src=&quot;/assets/img/terminal-powershell-nerd-fonts-caskaydia.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://github.com/neovim/neovim/releases&quot;&gt;neovim/neovim&lt;/a&gt; and install the latest version for windows: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvim-win64.msi&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;neovim-configuration&quot;&gt;NeoVim configuration&lt;/h2&gt;

&lt;p&gt;Due to Lua support Neovim &lt;em&gt;init.lua&lt;/em&gt; configuration is cross platform
compatible, you can set / unset preference based on the environment, it can
also read vanilla vimscript therefore you could use your same vimrc settings,
however unless you‚Äôre in a hurry, it‚Äôs recommended to migrate to lua at the
earneast opportunity.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nvim .\AppData\Local\nvim\init.lua
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nvim and Vim support distributions, bundles that provide an advanced and
uniformed experience, in terms of programming languages it would be comparable
to Ruby on Rails, Django, CakePhp, etc, these distributions are ok if you‚Äôre
looking for a battery included experience or if you‚Äôve previous experience with
Nvim, however as a learning exercise it‚Äôs a better to use a minimalist approach
and enable only the interested features, this also allows you to customize your
usage cases. Some good distribution examples are:
&lt;a href=&quot;https://www.lazyvim.org/&quot;&gt;lazyvim&lt;/a&gt;, &lt;a href=&quot;https://nvchad.com/&quot;&gt;nvchad&lt;/a&gt;,
&lt;a href=&quot;https://github.com/AstroNvim/AstroNvim&quot;&gt;astronvim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On this article, the focus would be in starting from a minimalist, single page,
documentated approach. Good configurations are personal, built over time with a
lot of polish. Get the content of &lt;a href=&quot;https://github.com/nvim-lua/kickstart.nvim/blob/master/init.lua&quot;&gt;kickstart.nvim/init.lua&lt;/a&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.\AppData\Local\nvim\init.lua&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boostrapping&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The 1st step is to create a mechanism to download a Nvim plugin manager in case
none is locally installed and retrieve the configured plugins with their
dependencies, NOTE: This code is already included in the &lt;em&gt;kickstart.nvim&lt;/em&gt; file
referenced above, it‚Äôs shown here only for analysis / understanding. There are
several plugins manager but on this article we would refer to &lt;a href=&quot;https://github.com/folke/lazy.nvim&quot;&gt;lazy.nvim&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local lazypath = vim.fn.stdpath 'data' .. '/lazy/lazy.nvim'
if not (vim.uv or vim.loop).fs_stat(lazypath) then
    local lazyrepo = 'https://github.com/folke/lazy.nvim.git'
    local out = vim.fn.system { 'git', 'clone', '--filter=blob:none', '--branch=stable', lazyrepo, lazypath }
    if vim.v.shell_error ~= 0 then
        error('Error cloning lazy.nvim:\n' .. out)
    end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Vim traditional configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vim settings are available via lua:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim.g.mapleader = &quot;,&quot;
vim.g.maplocalleader = &quot;,&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or they can be read as vimscripting files:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim.cmd('source my_vim_script.vim')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Plugin installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/folke/lazy.nvim&quot;&gt;Lazy.nvim&lt;/a&gt; support from simple to quite complex escenarios, eg:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require(&quot;lazy&quot;).setup({
    &quot;javier-lopez/my-autoloads.vim&quot;, -- the most simple case, plugins hosted in https://github.com/javier-lopez/my-autoloads.vim
    &quot;javier-lopez/my-mappings.vim&quot;,
    { &quot;javier-lopez/my-sensible.vim&quot;, -- plugins with dependencies
        dependencies = {
            &quot;javier-lopez/cutils.vim&quot;,
        },
    },
    { &quot;javier-lopez/colors.vim&quot;, -- plugins with priorization + initial customization
        priority = 1000, -- Make sure to load this before all the other start plugins.
        init = function()
            vim.cmd.colorscheme(&quot;hemisu&quot;)
        end,
    },
    -- Highlight todo, notes, etc in comments
    { &quot;folke/todo-comments.nvim&quot;, -- plugins with lazy loading, plugin would wait until UI is drawn to load
        event = &quot;VimEnter&quot;,
        dependencies = { &quot;nvim-lua/plenary.nvim&quot; },
        opts = { signs = false },
    },
)}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Github Copilot integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hrsh7th/nvim-cmp&lt;/code&gt; depency section add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zbirenbaum/copilot-cmp&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zbirenbaum/copilot.lua&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hrsh7th/nvim-cmp&quot;&gt;nvim-cmp&lt;/a&gt; is an auto completion
 framework for nvim, sources are programmable, on this case we‚Äôre adding
 &lt;a href=&quot;https://github.com/zbirenbaum/copilot-cmp&quot;&gt;copilot-cmp&lt;/a&gt; to have Copilot
 suggestions as part of our editing experience, other cmp plugins are:&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hrsh7th/cmp-path&quot;&gt;hrsh7th/cmp-path&lt;/a&gt; #autocompletes file / directory paths&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hrsh7th/cmp-buffer&quot;&gt;hrsh7th/cmp-buffer&lt;/a&gt; #autocompletes buffer words&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hrsh7th/cmp-calc&quot;&gt;hrsh7th/cmp-calc&lt;/a&gt; #complete math operations&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hrsh7th/vim-vsnip&quot;&gt;hrsh7th/vim-vsnip&lt;/a&gt; #autocompletes snippets&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/zbirenbaum/copilot.lua&quot;&gt;zbirenbaum/copilot.lua&lt;/a&gt; is a pure Lua implementation of the official &lt;a href=&quot;https://github.com/github/copilot.vim&quot;&gt;github/copilot.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once installed run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:Copilot auth&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ &quot;hrsh7th/nvim-cmp&quot;, -- Autocompletion plugin
    event = &quot;InsertEnter&quot;, -- Lazy load until user enters Insert mode
    dependencies = {
        { &quot;zbirenbaum/copilot-cmp&quot;,
            event = &quot;InsertEnter&quot;,
            config = function () require(&quot;copilot_cmp&quot;).setup() end,
            dependencies = { &quot;zbirenbaum/copilot.lua&quot;, -- core package that interacts with gh copilot api
                cmd = &quot;Copilot&quot;,
                config = function()
                require(&quot;copilot&quot;).setup({
                    -- It is recommended to disable copilot.lua's suggestion and panel modules, as they can interfere with completions properly appearing in copilot-cmp.
                    suggestion = { enabled = false },
                    panel = { enabled = false },
                    copilot_node_command = vim.fn.expand(&quot;$HOME&quot;) .. &quot;/AppData/Local/nvm/v23.6.1/node.exe&quot;,
                })
                end,
            },
        },
    },
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvim-cmp&lt;/code&gt; configuration set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Tabs&amp;gt;&lt;/code&gt; keys as suggestion selectors and include the copilot source:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cmp.setup({
    mapping = cmp.mapping.preset.insert({
    --[&quot;&amp;lt;C-y&amp;gt;&quot;] = cmp.mapping.confirm({ select = true }),
    ['&amp;lt;CR&amp;gt;'] = cmp.mapping.confirm { select = true }, -- &amp;lt;Enter&amp;gt; accepts the suggestion
    ['&amp;lt;Tab&amp;gt;'] = cmp.mapping.select_next_item(), -- Iterate over suggestions
    ['&amp;lt;S-Tab&amp;gt;'] = cmp.mapping.select_prev_item(), -- &amp;lt;Shift&amp;gt;&amp;lt;Tab&amp;gt; Iterate backwards
    ...
    }),
    sources = {
        { name = &quot;path&quot; },
        { name = &quot;calc&quot; },
        { name = &quot;copilot&quot; },
    }
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CopilotC-Nvim/CopilotChat.nvim&quot;&gt;CopilotC-Nvim/CopilotChat.nvim&lt;/a&gt; integrates Copilot Chat:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ &quot;CopilotC-Nvim/CopilotChat.nvim&quot;,
    -- press &amp;lt;Ctrl-s&amp;gt; to apply instructions
    dependencies = {
        { &quot;zbirenbaum/copilot.lua&quot; },
        { &quot;nvim-lua/plenary.nvim&quot;, branch = &quot;master&quot; }, -- for curl, log and async functions
    },
    -- build = &quot;make tiktoken&quot;, -- Only on MacOS or Linux
    keys = {
        {
            &quot;&amp;lt;leader&amp;gt;h&quot;,
            function()
                return require(&quot;CopilotChat&quot;).toggle()
            end,
            desc = &quot;CopilotChat - Toggle Main Window&quot;,
            mode = { &quot;n&quot;, &quot;v&quot; },
        },
        {
            &quot;&amp;lt;leader&amp;gt;oo&quot;,
            function()
                return require(&quot;CopilotChat&quot;).toggle()
            end,
            desc = &quot;CopilotChat - Toggle Main Window&quot;,
            mode = { &quot;n&quot;, &quot;v&quot; },
        },
        {
            &quot;&amp;lt;leader&amp;gt;ol&quot;,
            function()
                return require(&quot;CopilotChat&quot;).reset()
            end,
            desc = &quot;CopilotChat - Clear Main Window&quot;,
            mode = { &quot;n&quot;, &quot;v&quot; },
        },
        {
            &quot;&amp;lt;leader&amp;gt;oa&quot;,
            function()
                local input = vim.fn.input(&quot;Action Over File: &quot;)
                if input ~= &quot;&quot; then
                    require(&quot;CopilotChat&quot;).ask(input, { selection = require(&quot;CopilotChat.select&quot;).buffer })
                end
            end,
            desc = &quot;CopilotChat - Action Over File&quot;,
        },
    },
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/dotfiles/blob/master/init.lua&quot;&gt;javier-lopez/dotfiles/nvim/init.lua&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nithinbekal.com/posts/copilot-neovim/&quot;&gt;Copilot and Neovim&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.nikfp.com/how-to-install-and-set-up-neovim-on-windows&quot;&gt;How to install and set up Neovim on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>router with integrated vpn support</title>
   <link href="http://javier.io/blog/en/2024/06/25/router-with-vpn-support.html"/>
   <updated>2024-06-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2024/06/25/router-with-vpn-support</id>
   <content type="html">&lt;h2 id=&quot;router-with-integrated-vpn-support&quot;&gt;router with integrated vpn support&lt;/h2&gt;

&lt;h6 id=&quot;25-jun-2024&quot;&gt;25 Jun 2024&lt;/h6&gt;

&lt;p&gt;I needed a way to provide VPN coverage transparently to a local network‚Ä¶&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ISP router (TpLink WR820N on this case)&lt;/li&gt;
  &lt;li&gt;TpLink ER605 Switch (only available vpn switch/router around) - no wifi&lt;/li&gt;
  &lt;li&gt;TpLink WR820N (low cost wifi router)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wireguard.com/&quot;&gt;Wireguard&lt;/a&gt; (because of its performance and low resource usage)&lt;/li&gt;
  &lt;li&gt;VPN provider https://surfshark.com (provide required technical details)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;isp-router-tplink-wr820n-on-this-case&quot;&gt;ISP router (TpLink WR820N on this case)&lt;/h2&gt;

&lt;p&gt;Reconfigure LAN to use 10.9.8.1 so it doesn‚Äôt conflict with default networking settings in the following section.&lt;/p&gt;

&lt;h2 id=&quot;tplink-er605-firmware-upgrade-to-er605un_v2_222-build-20231017&quot;&gt;TpLink ER605 firmware upgrade to ER605(UN)_V2_2.2.2 Build 20231017&lt;/h2&gt;

&lt;p&gt;In order to use Wireguard a firware upgrade is required (only OpenVPN by default). Download and unzip https://static.tp-link.com/upload/firmware/2023/202310/20231018/ER605(UN)_v2_2.2.2%20Build%2020231017.zip&lt;/p&gt;

&lt;p&gt;Go to http://192.168.0.1/webpages/index.html and then to &lt;strong&gt;Firmware Upgrade&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Upload: &lt;strong&gt;ER605v2_un_2.2.2_20231017-rel68869_up_2023-10-17_19.23.22.bin&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;configure-wireguard&quot;&gt;Configure Wireguard&lt;/h2&gt;

&lt;p&gt;After reboot / upgrade go to &lt;strong&gt;VPN -&amp;gt; Wireguard&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name: surfshark
MTU: 1420
Listen Port: 51820
Private Key: will be generated automatically
Public Key: will be generated automatically #copy this somewhere
Local IP Address: 10.14.0.2 #this field will be edited later
Status: Enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save changes.&lt;/p&gt;

&lt;p&gt;Go to https://my.surfshark.com/vpn/manual-setup/router/wireguard/own-key:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name: er605
Public Key: input the key generated from the above step
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Go to the &lt;strong&gt;Locations&lt;/strong&gt; submenu and select the desired area, on this case I choose USA/Boston:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/surfshark-wireguard.png&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download the Wireguard configuration file&lt;/p&gt;

&lt;p&gt;Go to http://192.168.0.1/webpages/index.html and then to &lt;strong&gt;VPN -&amp;gt; Wireguard -&amp;gt; Peers&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Interface: Select surfshark
Public Key: Copy the string from the Server public key field from previous step
Endpoint: Copy the Server Ip from previous step
Endpoint Port: 51820
Allowed Address: 0.0.0.0/0
Preshared Key: leave empty
Persistent Keepalive: 25
Comment: leave empty
Status: Enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save changes.&lt;/p&gt;

&lt;p&gt;Go back to &lt;strong&gt;VPN -&amp;gt; Wireguard&lt;/strong&gt; and modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Local IP Address: 10.14.0.2&lt;/code&gt; field with the value extracted from the Wireguard configuration file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Interface]
Address = 10.14.0.2/16
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save changes.&lt;/p&gt;

&lt;h2 id=&quot;wifi-router&quot;&gt;Wifi router&lt;/h2&gt;

&lt;p&gt;Go to http://192.168.1.1/ and configure Wifi settings.&lt;/p&gt;

&lt;h2 id=&quot;final-comments&quot;&gt;Final comments&lt;/h2&gt;

&lt;p&gt;As the date of this entry the following vendors doesn‚Äôt support enough technical information to complete this setup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.ipvanish.com/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy tunneling üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>shrink root volumes in AWS</title>
   <link href="http://javier.io/blog/en/2024/03/01/shrink-root-volumes-aws.html"/>
   <updated>2024-03-01T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2024/03/01/shrink-root-volumes-aws</id>
   <content type="html">&lt;h2 id=&quot;shrink-root-volumes-in-aws&quot;&gt;shrink root volumes in AWS&lt;/h2&gt;

&lt;h6 id=&quot;01-mar-2024&quot;&gt;01 Mar 2024&lt;/h6&gt;

&lt;h2 id=&quot;volumes&quot;&gt;Volumes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;/dev/&lt;strong&gt;nvme1n1&lt;/strong&gt; ‚Üí Old volume ‚Üí &lt;strong&gt;/old&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;/dev/&lt;strong&gt;nvme2n1&lt;/strong&gt; ‚Üí New volume ‚Üí &lt;strong&gt;/new&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;/dev/&lt;strong&gt;nvme3n1&lt;/strong&gt; ‚Üí Backup Old volume (only applicable for XFS root volumes) ‚Üí &lt;strong&gt;/old-backup&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;general-instructions&quot;&gt;General instructions&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Create a snapshot of the root volume&lt;/li&gt;
  &lt;li&gt;Stop the target instance&lt;/li&gt;
  &lt;li&gt;Create a new volume with the desired size, ensure iops and speed are equal to the old volume&lt;/li&gt;
  &lt;li&gt;Create a tmp ec2 instance, this is what would be used to copy data between the old / new volumes&lt;/li&gt;
  &lt;li&gt;Detach the root volume from the old instance and attach it to the tmp one&lt;/li&gt;
  &lt;li&gt;Attach the new volume to the tmp instance and ssh into it&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir -p /old /new&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd bs=16M if=/dev/nvme1n1 of=/dev/nvme2n1 count=100&lt;/code&gt; #copy bootloader from old to the new volume&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fdisk /dev/nvme2n1&lt;/code&gt; #format new volume
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;press 'p' take note on the start section, eg: 2048
delete the current partition with 'd'
create a new partition 'n' and use the previous start section
press 'a' to make the partition bootable
press 'w' to save changes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fdisk -l&lt;/code&gt; #review than old and new volumes looks similar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;########## ext2/3/4 ##########&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;e2fsck -f /dev/nvme1n1p1&lt;/code&gt; #check for errors in old volume&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resize2fs -M -p /dev/nvme1n1p1&lt;/code&gt; #move the data to the beginning of the partition&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the previous command‚Äôs output, the last line tells you the number of blocks.  Each block is sized 4K but when we clone the partition, we are going to do it in 16 MB blocks.  So, in order to compute the number of 16 MB, blocks, multiply the number in the last line by 4 / (16 * 1024).&lt;/p&gt;

&lt;p&gt;Round this number UP (not down) to the nearest integer. Example: 1252939 (number in last line) * 4 / (16 * 1024) = 305.893310546875 ‚Ä¶ But round this UP to 306 or even 310 (it doesn‚Äôt matter as long as you don‚Äôt go below).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd bs=16M if=/dev/nvme1n1p1 of=/dev/nvme2n1p1 count=310&lt;/code&gt; #copy data from old to new volume&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resize2fs -p /dev/nvme2n1p1&lt;/code&gt; #new volume, expand fs&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;e2fsck -f /dev/nvme2n1p1&lt;/code&gt; #fix possible errors in the new volume&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;########## xfs ##########&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an additional volume same size as old volume and attached to the tmp instance. Will be use it to host a backup of the original fs, this is a workaround to xfs lack of shrinking capacity&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkfs.xfs /dev/nvme2n1 /dev/nvme3n1&lt;/code&gt; #format the new and the additional volume&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mount /dev/nvme1n1 /old; mount /dev/nvme2n1 /new&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir /old-backup; mount /dev/nvme3n1 /old-backup&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfsdump -L data -f /old-backup/old.xfsdump /old&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfsrestore -f /old-backup/old.xfsdump /new/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blkid /dev/nvme1n1p1&lt;/code&gt; #get old uuid&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfs_admin -U &amp;lt;UUID from step above&amp;gt; /dev/nvme2n1p1&lt;/code&gt; #apply old uuid to new volume&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfs_admin -L / /dev/nvme2n1p1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;final-step&quot;&gt;Final step&lt;/h2&gt;

&lt;p&gt;Dettach the new volume, attach it to the target instance as &lt;strong&gt;/dev/sda1&lt;/strong&gt; and start the instance&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@ztobscieng/shrink-an-amazon-aws-ebs-root-volume-2020-update-8db834265c3e&quot;&gt;https://medium.com/@ztobscieng/shrink-an-amazon-aws-ebs-root-volume-2020-update-8db834265c3e&lt;/a&gt; &lt;strong&gt;ext2/3/4&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@benedikt.langens/how-to-shrink-an-ebs-root-volume-xfs-on-amazon-linux-2-2023-a7705c16e839&quot;&gt;https://medium.com/@benedikt.langens/how-to-shrink-an-ebs-root-volume-xfs-on-amazon-linux-2-2023-a7705c16e839&lt;/a&gt; &lt;strong&gt;xfs&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>transfer files to ec2 instances via SSM and netcat</title>
   <link href="http://javier.io/blog/en/2024/02/06/aws-cli-transfer-files-to-ec2-via-ssm.html"/>
   <updated>2024-02-06T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2024/02/06/aws-cli-transfer-files-to-ec2-via-ssm</id>
   <content type="html">&lt;h2 id=&quot;transfer-files-to-ec2-instances-via-ssm-and-netcat&quot;&gt;transfer files to ec2 instances via SSM and netcat&lt;/h2&gt;

&lt;h6 id=&quot;06-feb-2024&quot;&gt;06 Feb 2024&lt;/h6&gt;

&lt;h2 id=&quot;step-1-run-netcat-on-the-target-ec2-machine-via-ssm&quot;&gt;Step 1. Run netcat on the target EC2 machine via SSM&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws ssm start-session --target $INSTANCE_ID --document-name
ssm $ nc -l -p 9999 &amp;gt; $FILE_NAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-in-another-shell-open-a-port-forwarding-session&quot;&gt;Step 2. In another shell open a port-forwarding session:&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws ssm start-session --target $INSTANCE_ID --document-name AWS-StartPortForwardingSession --parameters '{&quot;portNumber&quot;:[&quot;9999&quot;],&quot;localPortNumber&quot;:[&quot;9999&quot;]}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-in-a-3rd-shell-transfer-the-file-via-netcat&quot;&gt;Step 3. In a 3rd shell transfer the file via netcat:&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nc -w 3 127.0.0.1 9999 &amp;lt; $FILE_NAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit!&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://gist.github.com/lukeplausin/4b412d83fb1246b0bed6507b5083b3a7&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>aws-cli ssm by ip</title>
   <link href="http://javier.io/blog/en/2024/01/11/aws-cli-ssm-by-ip.html"/>
   <updated>2024-01-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2024/01/11/aws-cli-ssm-by-ip</id>
   <content type="html">&lt;h2 id=&quot;aws-cli-ssm-by-ip&quot;&gt;aws-cli ssm by ip&lt;/h2&gt;

&lt;h6 id=&quot;11-jan-2024&quot;&gt;11 Jan 2024&lt;/h6&gt;

&lt;h2 id=&quot;configure-ssm-in-aws&quot;&gt;Configure SSM in AWS&lt;/h2&gt;

&lt;p&gt;Before you start, make sure that your Amazon EC2 instances are configured correctly. This involves setting up an IAM role &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AmazonSSMManagedInstanceCore&lt;/code&gt; for Systems Manager and attaching it to your instances. You also need to ensure that the Systems Manager Agent (SSM Agent) is installed on your nodes.&lt;/p&gt;

&lt;p&gt;The SSM Agent is preinstalled by default on Amazon Linux base AMIs dated 2017.09 and later and on Amazon Linux 2, Windows Server 2008-2012 R2 AMIs, and others. If your distribution is not included use &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html&quot;&gt;userdata&lt;/a&gt; to install it on first boot:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash
curl &quot;https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb&quot; -o &quot;session-manager-plugin.deb&quot;
curl &quot;https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_32bit/session-manager-plugin.deb&quot; -o &quot;session-manager-plugin.deb&quot;
curl &quot;https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_arm64/session-manager-plugin.deb&quot; -o &quot;session-manager-plugin.deb&quot;
dpkg -i session-manager-plugin.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;private-vpc&quot;&gt;Private VPC&lt;/h2&gt;

&lt;p&gt;If your EC2 instance is in a private network (without an Internet Gateway) you will need to set up 3 VPC Endpoints for AWS Systems Manager.&lt;/p&gt;

&lt;p&gt;Go to &lt;strong&gt;VPC&lt;/strong&gt; &amp;gt; &lt;strong&gt;Endpoints&lt;/strong&gt; &amp;gt; &lt;strong&gt;Create Endpoint&lt;/strong&gt; &amp;gt; &lt;strong&gt;Service category&lt;/strong&gt; &amp;gt; &lt;strong&gt;AWS services&lt;/strong&gt; &amp;gt; &lt;strong&gt;Service Name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;com.amazonaws.us-west-2.ssm (or the region where your vpc is hosted)&lt;/li&gt;
  &lt;li&gt;com.amazonaws.us-west-2.ec2messages&lt;/li&gt;
  &lt;li&gt;com.amazonaws.us-west-2.ssmmessages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;strong&gt;VPC&lt;/strong&gt; section, select the VPC of your EC2 instances. In the &lt;strong&gt;Security Group&lt;/strong&gt; section, select a security group that allows HTTPS traffic (port 443) from and to your EC2 instances. In &lt;strong&gt;Policy&lt;/strong&gt;, select &lt;strong&gt;Full Access&lt;/strong&gt; if you want all instances in your VPC to be able to use SSM.&lt;/p&gt;

&lt;h2 id=&quot;configure-aws-cli-using-sso&quot;&gt;Configure aws-cli using sso&lt;/h2&gt;

&lt;p&gt;Install &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html&quot;&gt;aws-cli&lt;/a&gt; and the &lt;a href=&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/install-plugin-windows.html&quot;&gt;windows plugin&lt;/a&gt; if required.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws configure sso
SSO session name (Recommended): org-name
SSO start URL [None]: https://org-name.awsapps.com/start#/SSO
region [None]: us-west-2
SSO registration scopes [sso:account:access]:
There are 10 AWS accounts available to you. #select one option
Using the account ID 523868776147
There are 4 roles available to you.
Using the role name &quot;PowerUserAccess&quot;
CLI default client Region [None]: us-west-2
CLI profile name [PowerUserAccess-523868776147]: DevOps-PowerUser

To use this profile, specify the profile name using --profile, as shown:

aws s3 ls --profile DevOps-PowerUser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;connect-by-instance-id&quot;&gt;Connect by instance-id&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws sso login --sso-session org-name; aws ssm start-session --target &amp;lt;instance-id&amp;gt; --profile DevOps-PowerUser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;connect-by-ip&quot;&gt;Connect by ip&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aws sso login --sso-session org-name; aws ssm start-session --target &quot;$(aws ec2 describe-instances --filter Name=private-ip-address,Values=&amp;lt;private-ip&amp;gt; --query 'Reservations[].Instances[].InstanceId' --output text --region us-west-2 --profile DevOps-PowerUser)&quot; --profile DevOps-PowerUser --region us-west-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>windows installers non interactive</title>
   <link href="http://javier.io/blog/en/2024/01/05/windows-installers-non-interactive.html"/>
   <updated>2024-01-05T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2024/01/05/windows-installers-non-interactive</id>
   <content type="html">&lt;h2 id=&quot;windows-installers-non-interactive&quot;&gt;windows installers non interactive&lt;/h2&gt;

&lt;h6 id=&quot;05-jan-2024&quot;&gt;05 Jan 2024&lt;/h6&gt;

&lt;h2 id=&quot;iis-85--windows-server-2012&quot;&gt;IIS 8.5 / Windows Server 2012&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; import-module servermanager
pshell&amp;gt; add-windowsfeature Web-Server, Web-WebServer, Web-Security, Web-Filtering, Web-Cert-Auth, Web-IP-Security, Web-Url-Auth, Web-Windows-Auth, Web-Basic-Auth, Web-Client-Auth, Web-Digest-Auth, Web-CertProvider, Web-Common-Http, Web-Http-Errors, Web-Dir-Browsing, Web-Static-Content, Web-Default-Doc, Web-Http-Redirect, Web-DAV-Publishing, Web-Performance, Web-Stat-Compression, Web-Dyn-Compression, Web-Health, Web-Http-Logging, Web-ODBC-Logging, Web-Log-Libraries, Web-Custom-Logging, Web-Request-Monitor, Web-Http-Tracing, Web-App-Dev, Web-Net-Ext45, Web-ASP, Web-Asp-Net45, Web-CGI, Web-ISAPI-Ext, Web-ISAPI-Filter, Web-WebSockets, Web-AppInit, Web-Includes, Web-Ftp-Server, Web-Ftp-Service, Web-Ftp-Ext, Web-Mgmt-Tools, Web-Mgmt-Console, Web-Mgmt-Compat, Web-Metabase, Web-WMI, Web-Lgcy-Mgmt-Console, Web-Lgcy-Scripting, Web-Scripting-Tools, Web-Mgmt-Service ‚ÄìIncludeManagementTools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;iis-100--windows-server-2016&quot;&gt;IIS 10.0 / Windows Server 2016&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; Install-WindowsFeature -name Web-Server -IncludeManagementTools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Confirm version installed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; get-itemproperty HKLM:\SOFTWARE\Microsoft\InetStp\ | select setupstring,versionstring #show iis version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;iss-urlrewrite-module&quot;&gt;ISS urlrewrite module&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; choco install -y urlrewrite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;chocolatey&quot;&gt;Chocolatey&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
pshell&amp;gt; choco install wget -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; mkdir C:\bin
pshell&amp;gt; wget.exe https://downloads.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.4.24-signed.msi
pshell&amp;gt; msiexec.exe /quiet /i mongodb-win32-x86_64-2008plus-ssl-3.4.24-signed.msi INSTALLLOCATION=&quot;C:\bin\mongodb-win32-x86_64-2008plus-ssl-3.4.24\&quot; ADDLOCAL=&quot;all&quot;
pshell&amp;gt; While(Get-Process msiexec -ea si|?{$_.SI -ne 0}){} #wait until msiexec completes
pshell&amp;gt; mkdir D:\mongodb
pshell&amp;gt; C:\bin\mongodb-win32-x86_64-2008plus-ssl-3.4.24\bin\mongod --dbpath=D:\mongodb --logpath=D:\mongodb\log.txt --install --serviceName MongoDB
pshell&amp;gt; net start MongoDB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nodejs&quot;&gt;NodeJS&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; wget.exe --no-check-certificate https://nodejs.org/dist/v8.5.0/node-v8.5.0-x64.msi
pshell&amp;gt; msiexec.exe /quiet /i node-v8.5.0-x64.msi INSTALLDIR=&quot;C:\bin\nodejs-v8.5.0\&quot; ADDLOCAL=&quot;all&quot;
pshell&amp;gt; While(Get-Process msiexec -ea si|?{$_.SI -ne 0}){} #wait until msiexec completes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;iisnode&quot;&gt;IISNode&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; wget.exe https://github.com/Azure/iisnode/releases/download/v0.2.26/iisnode-full-v0.2.26-x64.msi
pshell&amp;gt; #installs to C:\Program Files\iisnode
pshell&amp;gt; msiexec.exe /quiet /i iisnode-full-v0.2.26-x64.msi #do not allow to custom TARGETDIR=&quot;C:\bin\iisnode-full-v0.2.26\&quot;
pshell&amp;gt; While(Get-Process msiexec -ea si|?{$_.SI -ne 0}){} #wait until msiexec completes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; wget.exe --no-check-certificate https://www.python.org/ftp/python/3.6.5/python-3.6.5-amd64.exe
pshell&amp;gt; .\python-3.6.5-amd64.exe /quiet /i InstallAllUsers=0 TargetDir=&quot;C:\bin\python-3.6.5\&quot;
pshell&amp;gt; While(Get-Process msiexec -ea si|?{$_.SI -ne 0}){} #wait until msiexec completes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;robo3t&quot;&gt;Robo3t&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pshell&amp;gt; wget.exe https://github.com/Studio3T/robomongo/releases/download/v1.1.1/robo3t-1.1.1-windows-x86_64-c93c6b0.exe
pshell&amp;gt; .\robo3t-1.1.1-windows-x86_64-c93c6b0.exe /S /D=C:\bin\robo3t-1.1.1\
pshell&amp;gt; While(Get-Process robo3t -ea si|?{$_.SI -ne 0}){} #wait until msiexec completes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>launch and suscribe RHEL 8/9 instances in AWS</title>
   <link href="http://javier.io/blog/en/2023/10/15/launch-rhel-instances-in-aws.html"/>
   <updated>2023-10-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2023/10/15/launch-rhel-instances-in-aws</id>
   <content type="html">&lt;h2 id=&quot;launch-and-suscribe-rhel-89-instances-in-aws&quot;&gt;launch and suscribe RHEL 8/9 instances in AWS&lt;/h2&gt;

&lt;h6 id=&quot;15-oct-2023&quot;&gt;15 Oct 2023&lt;/h6&gt;

&lt;h2 id=&quot;simple-no-redhat-cloud-integration&quot;&gt;Simple, no RedHat Cloud integration&lt;/h2&gt;

&lt;p&gt;Go to EC2 and launch either RHEL8 or RHEL9 instances:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RHEL8&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-kv5mi3ksb2mma&quot;&gt;AWS Marketplace: Red Hat Enterprise Linux 8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ami Id: &lt;strong&gt;ami-0b324207d4bcaec61&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RHEL9&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-b5psjqk4f5f3k&quot;&gt;AWS Marketplace: Red Hat Enterprise Linux 9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ami Id: &lt;strong&gt;ami-026ebd4cfe2c043b2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ensure the AWS instance includes a RHEL suscription&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://169.254.169.254/latest/dynamic/instance-identity/document 2&amp;gt;/dev/null | grep billingProducts
&quot;billingProducts&quot; : [ &quot;bp-6fa54006&quot; ] #ID will change depending the RHEL version and must be != NULL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the above command success, execute:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi  /etc/yum/pluginconf.d/subscription-manager.conf
enabled=0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;enable-additional-repositories&quot;&gt;Enable additional repositories&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;RHEL8&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo yum repolist all
$ sudo dnf config-manager --set-enabled codeready-builder-for-rhel-8-rhui-rpms rhel-8-supplementary-rhui-rpms 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;RHEL9&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo yum repolist all
$ sudo dnf config-manager --set-enabled codeready-builder-for-rhel-9-rhui-rpms rhel-9-supplementary-rhui-rpms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit!&lt;/p&gt;

&lt;h2 id=&quot;with-redhat-cloud-and-insights-integration&quot;&gt;With Redhat Cloud and Insights integration&lt;/h2&gt;

&lt;h3 id=&quot;redhat&quot;&gt;RedHat&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redhat.com/wapps/ugc/register.html?_flowId=register-flow&amp;amp;_flowExecutionKey=e1s1&quot;&gt;Create a RHEL account&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux/try-it?intcmp=701f20000012m1qAAA&quot;&gt;Request a RHEL trial&lt;/a&gt;, this step could be removed in the future, however for new accounts as Oct 12th 2023, it‚Äôs a requirement for registering RHEL aws instances.&lt;/li&gt;
  &lt;li&gt;Go to Red Hat and Enable the Simple Content Access Enablement (should be on by default for new accounts)
&lt;img src=&quot;https://github.com/javier-lopez/javier.io/assets/75626/abc8f9bc-9fce-496e-9cec-ca5d865cf943&quot; alt=&quot;rhel-simple-content-access&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;aws&quot;&gt;AWS&lt;/h3&gt;

&lt;p&gt;Go to EC2 and launch either RHEL8 or RHEL9 instances:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RHEL8&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-kv5mi3ksb2mma&quot;&gt;AWS Marketplace: Red Hat Enterprise Linux 8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ami Id: &lt;strong&gt;ami-0b324207d4bcaec61&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RHEL9&lt;/strong&gt;: &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/prodview-b5psjqk4f5f3k&quot;&gt;AWS Marketplace: Red Hat Enterprise Linux 9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ami Id: &lt;strong&gt;ami-026ebd4cfe2c043b2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once setup, login and suscribe using the RedHat Credentials&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo subscription-manager register --username &amp;lt;username&amp;gt;
$ sudo insights-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;enable-additional-repositories-1&quot;&gt;Enable additional repositories&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;RHEL8&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo yum repolist all
$ sudo dnf config-manager --set-enabled codeready-builder-for-rhel-8-rhui-rpms rhel-8-supplementary-rhui-rpms 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;RHEL9&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo yum repolist all
$ sudo dnf config-manager --set-enabled codeready-builder-for-rhel-9-rhui-rpms rhel-9-supplementary-rhui-rpms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Profit!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://access.redhat.com/articles/6538061&quot;&gt;How to register a Red Hat Enterprise Linux system running on AWS to&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://repost.aws/knowledge-center/ec2-yum-rhel-errors&quot;&gt;Troubleshoot errors that are thrown when you use yum on an EC2 instance with RHEL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>using colima to run docker on a mac</title>
   <link href="http://javier.io/blog/en/2023/10/10/docker-osx.html"/>
   <updated>2023-10-10T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2023/10/10/docker-osx</id>
   <content type="html">&lt;h2 id=&quot;using-colima-to-run-docker-on-a-mac&quot;&gt;using colima to run docker on a mac&lt;/h2&gt;

&lt;h6 id=&quot;10-oct-2023&quot;&gt;10 Oct 2023&lt;/h6&gt;

&lt;h2 id=&quot;install-docker--docker-compose&quot;&gt;Install docker / docker-compose&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install docker
$ brew install docker-compose
$ docker run hello-world
docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-colima&quot;&gt;Install colima&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install colima
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configure-colima&quot;&gt;Configure colima&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/abiosoft/colima/issues/83#issuecomment-1339269542&quot;&gt;Cannot chown or chmod bind mounted files/dirs&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat $HOME/.colima/_lima/_config/override.yaml
mountType: 9p
mounts:
  - location: &quot;/Users/jlopez&quot;
    writable: true
    9p:
      securityModel: mapped-xattr
      cache: mmap
  - location: &quot;~&quot;
    writable: true
    9p:
      securityModel: mapped-xattr
      cache: mmap
  - location: /tmp/colima
    writable: true
    9p:
      securityModel: mapped-xattr
      cache: mmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;use-colima&quot;&gt;Use colima&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ colima start --mount-type 9p --vm-type qemu #or colima start --cpu 4 --memory 8 --mount-type 9p --vm-type qemu
$ docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
70f5ac315c5a: Pull complete
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/abiosoft/colima&quot;&gt;https://github.com/abiosoft/colima&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy hacking! üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>leetcode</title>
   <link href="http://javier.io/blog/en/2023/01/22/leetcode.html"/>
   <updated>2023-01-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2023/01/22/leetcode</id>
   <content type="html">&lt;h2 id=&quot;leetcode&quot;&gt;leetcode&lt;/h2&gt;

&lt;h6 id=&quot;22-jan-2023&quot;&gt;22 Jan 2023&lt;/h6&gt;

&lt;h3 id=&quot;easy&quot;&gt;Easy&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/two-sum/solutions/3087960/hash-table-cache-python/&quot;&gt;1. Two Sum&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/roman-to-integer/solutions/2960085/solved-in-a-similar-way-as-the-text-describes-the-problem-python/&quot;&gt;13. Roman to Integer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/longest-common-prefix/solutions/2965450/user-friendly-solution-python/&quot;&gt;14. Longest Common Prefix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/valid-parentheses/solutions/2967816/dictionary-solution-easy-to-understand-python/&quot;&gt;20. Valid Parentheses&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/merge-two-sorted-lists/solutions/2972798/dummy-variable-explained-python/&quot;&gt;21. Merge Two Sorted Lists&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2973934/two-pointers-solution-slow-fast-python/&quot;&gt;26. Remove Duplicates from Sorted Array&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/plus-one/solutions/2976291/inverse-array-verification-python/&quot;&gt;66. Plus One&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/sqrtx/solutions/2981409/binary-search-finding-first-true-statement-in-false-true-list-python/&quot;&gt;69. Sqrt(x)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/climbing-stairs/solutions/2996123/bottom-up-dp-python/&quot;&gt;70. Climbing Stairs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/merge-sorted-array/solutions/2999149/two-pointers-python/&quot;&gt;88. Merge Sorted Array&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/binary-tree-inorder-traversal/solutions/3005027/all-dfs-traversals-preorder-inorder-postorder-python/&quot;&gt;94. Binary Tree Inorder Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/symmetric-tree/solutions/3012562/recursive-iterative-solution-python/&quot;&gt;101. Symmetric Tree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/maximum-depth-of-binary-tree/solutions/3021923/max-depth-based-in-all-traversals-preorder-inorder-postorder-python/&quot;&gt;104. Maximum Depth of Binary Tree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/solutions/3032703/recursion-and-iterative-python/&quot;&gt;108. Convert Sorted Array to Binary Search Tree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/pascals-triangle/solutions/3033373/initialize-pascal-array-with-1s-and-fill-efficiently-python/&quot;&gt;118. Pascal‚Äôs Triangle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/solutions/3047530/two-pointers-python/&quot;&gt;121. Best Time to Buy and Sell Stock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/valid-palindrome/solutions/3056331/two-pointers-python/&quot;&gt;125. Valid Palindrome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/single-number/solutions/3056816/dictionary-and-xor-python/&quot;&gt;136. Single Number&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/linked-list-cycle/solutions/3067337/slow-fast-pointers-python/&quot;&gt;141. Linked List Cycle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/intersection-of-two-linked-lists/solutions/3069994/two-pointers-python/&quot;&gt;160. Intersection of Two Linked Lists&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/majority-element/solutions/3093065/boyer-moore-voting-algorithm-python/&quot;&gt;169. Majority Element&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/excel-sheet-column-number/solutions/3093166/base-26-conversion-python/&quot;&gt;171. Excel Sheet Column Number&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/reverse-bits/solutions/3118596/bit-manipulation-shifting-to-left-right-python/&quot;&gt;190. Reverse Bits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;medium&quot;&gt;Medium&lt;/h3&gt;

&lt;h3 id=&quot;hard&quot;&gt;Hard&lt;/h3&gt;

&lt;p&gt;Happy interviewing!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>install tmux on windows 10</title>
   <link href="http://javier.io/blog/en/2022/11/15/install-tmux-on-windows-10.html"/>
   <updated>2022-11-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2022/11/15/install-tmux-on-windows-10</id>
   <content type="html">&lt;h2 id=&quot;install-tmux-on-windows-10&quot;&gt;install tmux on windows 10&lt;/h2&gt;

&lt;h6 id=&quot;15-nov-2022&quot;&gt;15 Nov 2022&lt;/h6&gt;

&lt;p&gt;Download and install &lt;a href=&quot;https://www.msys2.org/#installation&quot;&gt;https://www.msys2.org/#installation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If behind a firewall, compress as gz or bz2, upload a custom server and download from it, eg:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/public/bin/msys2-x86_64-20221028.exe.gz&quot;&gt;http://f.javier.io/public/bin/msys2-x86_64-20221028.exe.gz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/public/bin/msys2-x86_64-20221028.exe.bz2&quot;&gt;http://f.javier.io/public/bin/msys2-x86_64-20221028.exe.bz2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-tmux&quot;&gt;Install tmux&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pacman -S tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If behinf a firewall (SSL issue), modify &lt;strong&gt;/etc/pacman.conf&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; XferCommand = /usr/bin/curl --insecure -L -C - -f -o %o %u
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And Git:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git config --global http.sslVerify false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy tmux and dependencies to Git for Windows path:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp C:\msys64\usr\bin\tmux C:\msys64\usr\bin\msys-event* C:\Program Files\Git\usr\bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Restart Git for Windows&lt;/p&gt;

&lt;h2 id=&quot;extra&quot;&gt;Extra&lt;/h2&gt;

&lt;p&gt;If you want to keep msys2 you may want to change the &lt;strong&gt;$HOME&lt;/strong&gt; directory so it points to the same place as Git for Windows, modify &lt;strong&gt;/etc/nsswitch.conf&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db_home: windows
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>install 7zip with choco without admin permissions</title>
   <link href="http://javier.io/blog/en/2022/11/15/install-7zip-choco-non-admin.html"/>
   <updated>2022-11-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2022/11/15/install-7zip-choco-non-admin</id>
   <content type="html">&lt;h2 id=&quot;install-7zip-with-choco-without-admin-permissions&quot;&gt;install 7zip with choco without admin permissions&lt;/h2&gt;

&lt;h6 id=&quot;15-nov-2022&quot;&gt;15 Nov 2022&lt;/h6&gt;

&lt;p&gt;Install choco, from a powershell:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ notepad choco-non-admin.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then paste the following instructions:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Set directory for installation - Chocolatey does not lock
# down the directory if not the default
$InstallDir='C:\ProgramData\chocoportable'
$env:ChocolateyInstall=&quot;$InstallDir&quot;

# If your PowerShell Execution policy is restrictive, you may
# not be able to get around that. Try setting your session to
# Bypass.
Set-ExecutionPolicy Bypass -Scope Process -Force;

# All install options - offline, proxy, etc at
# https://chocolatey.org/install
iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Execute the resulting script and install the portable 7zip version:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./choco-non-admin.ps1
$ choco install 7zip.portable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open &lt;strong&gt;C:\ProgramData\chocoportable\lib\7zip.portable\tools\7zFM&lt;/strong&gt; to compress / uncompress stuff.&lt;/p&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>restart firefox</title>
   <link href="http://javier.io/blog/en/2021/09/27/restart-linux.html"/>
   <updated>2021-09-27T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2021/09/27/restart-linux</id>
   <content type="html">&lt;h2 id=&quot;restart-firefox&quot;&gt;restart firefox&lt;/h2&gt;

&lt;h6 id=&quot;27-sep-2021&quot;&gt;27 Sep 2021&lt;/h6&gt;

&lt;h3 id=&quot;issue&quot;&gt;Issue&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Firefox behaves weird, eg: session issues
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;fix&quot;&gt;Fix&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
about:restartrequired
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy browsing, üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>citrix on linux</title>
   <link href="http://javier.io/blog/en/2021/07/12/citrix-on-linux.html"/>
   <updated>2021-07-12T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2021/07/12/citrix-on-linux</id>
   <content type="html">&lt;h2 id=&quot;citrix-on-linux&quot;&gt;citrix on linux&lt;/h2&gt;

&lt;h6 id=&quot;12-jul-2021&quot;&gt;12 Jul 2021&lt;/h6&gt;

&lt;h3 id=&quot;issue&quot;&gt;Issue&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: &quot;SSL Error 61: You have not chosen to trust 'Certificate Authority'...&quot; on Receiver for Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;fix&quot;&gt;Fix&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo mv /opt/Citrix/ICAClient/keystore/cacerts   /opt/Citrix/ICAClient/keystore/cacerts.bk
$ sudo ln -s /etc/ssl/certs/   /opt/Citrix/ICAClient/keystore/cacerts
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy coworking, üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>transfer files with netcat</title>
   <link href="http://javier.io/blog/en/2021/01/17/transfer-files-with-netcat.html"/>
   <updated>2021-01-17T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2021/01/17/transfer-files-with-netcat</id>
   <content type="html">&lt;h2 id=&quot;transfer-files-with-netcat&quot;&gt;transfer files with netcat&lt;/h2&gt;

&lt;h6 id=&quot;17-jan-2021&quot;&gt;17 Jan 2021&lt;/h6&gt;

&lt;p&gt;Here goes a quick note about how to transfer files in a LAN between computers
using &lt;strong&gt;netcat&lt;/strong&gt; which is available in a wide range of platforms because of its
simplicity.&lt;/p&gt;

&lt;h3 id=&quot;receiving-node-192168174&quot;&gt;Receiving node (192.168.1.74)&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ mkdir backup/ &amp;amp;&amp;amp; cd backup/
$ nc -l -p 7000 | pv (optional, pretty ETA visualizator) | tar x
&lt;/pre&gt;

&lt;h3 id=&quot;sending-node&quot;&gt;Sending node&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ tar cf - * | nc 192.168.1.74 7000
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy sharing, üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>host several sites in a single box with docker and traefik v2, https</title>
   <link href="http://javier.io/blog/en/2020/12/03/host-several-sites-in-a-single-box-with-docker-and-traefik-https.html"/>
   <updated>2020-12-03T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2020/12/03/host-several-sites-in-a-single-box-with-docker-and-traefik-https</id>
   <content type="html">&lt;h2 id=&quot;host-several-sites-in-a-single-box-with-docker-and-traefik-v2-https&quot;&gt;host several sites in a single box with docker and traefik v2, https&lt;/h2&gt;

&lt;h6 id=&quot;03-dec-2020&quot;&gt;03 Dec 2020&lt;/h6&gt;

&lt;p&gt;Last time I wrote about how simple is to &lt;a href=&quot;http://javier.io/blog/en/2020/12/01/host-several-sites-in-a-single-box-with-docker-and-traefik-http.html&quot;&gt;host several sites with docker +
traefik on a single node&lt;/a&gt;,
on this article I‚Äôll complement such information with https and automatic ssl
certification renewal.&lt;/p&gt;

&lt;p&gt;If you continue reading this you‚Äôll &lt;strong&gt;need&lt;/strong&gt; to get familiar with the previous
post, since I‚Äôm building upon it. OK, ready?, let‚Äôs recapitulate:&lt;/p&gt;

&lt;h2 id=&quot;diagram-and-folder-structure&quot;&gt;Diagram and Folder Structure&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/traefik-docker-compose.png&quot;&gt;&lt;img src=&quot;/assets/img/traefik-docker-compose.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Traefik will receive all requests and will send them to different containers
depending the domain/subdomains, in the process it‚Äôll provide ssl termination
for our users and dockerized applications, those certifications will be
auto-renewed every 2/3 months and won‚Äôt require any manual step, cool!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚î¨
‚îú‚îÄ‚îÄ multisite (traefik)
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.yml
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.ssl.yml        =&amp;gt; NEW FILE
‚îÇ   ‚îú‚îÄ‚îÄ acme.json                     =&amp;gt; NEW FILE
‚îú‚îÄ‚îÄ site1.com
‚îÇ   ‚îú‚îÄ‚îÄ ...
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.site1.yml
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.site1.ssl.yml  =&amp;gt; NEW FILE
‚îú‚îÄ‚îÄ site2.com
    ‚îú‚îÄ‚îÄ ...
    ‚îú‚îÄ‚îÄ docker-compose.site2.yml
    ‚îú‚îÄ‚îÄ docker-compose.site1.ssl.yml  =&amp;gt; NEW FILE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you noticed, new files were added, the idea is that we maintain the
flexibility to either provision a &lt;strong&gt;http only&lt;/strong&gt; or a &lt;strong&gt;http + https&lt;/strong&gt; site.&lt;/p&gt;

&lt;h2 id=&quot;pre-requisite-dns-configuration&quot;&gt;pre-requisite, dns configuration&lt;/h2&gt;

&lt;p&gt;When working with &lt;strong&gt;http only&lt;/strong&gt; there is no need to mv our code from our local
environment, it‚Äôs easy to add some entries in &lt;strong&gt;/etc/hosts&lt;/strong&gt; and call it a day,
this time however is different, we need to &lt;strong&gt;upload our files into a box with
a public ip address&lt;/strong&gt; and verify that the dns routing is working as expected,
that is, if we are going to hosts these sites at:
185.199.109.153, &lt;strong&gt;we need to make sure site1.com / site2.com resolve to
185.199.109.153&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I won‚Äôt cover how to do that because it depends on your DNS Registrar, for
reference I‚Äôm using &lt;a href=&quot;https://www.racknerd.com/&quot;&gt;RackNerd&lt;/a&gt; and
&lt;a href=&quot;https://www.dnspod.com/&quot;&gt;DNSPod&lt;/a&gt; as my Linux / DNS servers.&lt;/p&gt;

&lt;p&gt;Why do we need to prepare our setup like this before starting?, it has to do
with &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let‚Äôs Encrypt&lt;/a&gt;, the Certification Authority
we‚Äôre going to depend on, this CA generates challenges to verify that we are
the &lt;strong&gt;owners of the referenced domain/subdomain&lt;/strong&gt;, fortunately that happens
automatically so we don‚Äôt need to do anything besides making sure that Let‚Äôs
Encrypt can communicate with our domains.&lt;/p&gt;

&lt;h2 id=&quot;multisite&quot;&gt;multisite&lt;/h2&gt;

&lt;p&gt;Remember that starting here all changes are located in a remote public machine.
I‚Äôll start by creating a copy of &lt;strong&gt;docker-compose.yml&lt;/strong&gt;, that would make easier
for us to track the ssl changes:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp docker-compose.yml  docker-compose.ssl.yml 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;multisite/docker-compose.ssl.yml.patch&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
--- docker-compose.ssl.yml           2020-12-03 10:02:48.186590271 -0600
+++ docker-compose.ssl.changes.yml   2020-12-03 10:03:30.940486004 -0600
@@ -9,11 +9,21 @@
       - &quot;--providers.docker.exposedbydefault=false&quot;
       - &quot;--providers.docker.network=traefik_global&quot;
       #- &quot;--log.level=DEBUG&quot;
+      - &quot;--entrypoints.http.address=:80&quot;
+      - &quot;--entrypoints.https.address=:443&quot;
+      - &quot;--certificatesresolvers.myresolver.acme.email=your-personal@email.tld&quot;
+      - &quot;--certificatesresolvers.myresolver.acme.storage=/acme.json&quot;
+      - &quot;--certificatesresolvers.myresolver.acme.tlschallenge=true&quot;
     ports:
       - &quot;80:80&quot;     #reverse proxy =&amp;gt; input to all containerized services
+      - &quot;443:443&quot;   #reverse ssl proxy
       - &quot;8080:8080&quot; #traefik dashboard/api
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock
+      # Run this command in the host machine before launching traefik:
+      #   $ touch acme.json &amp;amp;&amp;amp; chmod 600 acme.json
+      - ${PWD}/acme.json:/acme.json
     networks:
       - traefik
&lt;/pre&gt;

&lt;p&gt;Now our original file is more verbose, nevertheless every option is there for a
reason.&lt;/p&gt;

&lt;p&gt;By default traefik only opens the &lt;strong&gt;http port (80)&lt;/strong&gt;, so if we want to allow
both, &lt;strong&gt;http/https&lt;/strong&gt;, we need to be more specific:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
+      - &quot;--entrypoints.http.address=:80&quot;
+      - &quot;--entrypoints.https.address=:443&quot;
&lt;/pre&gt;

&lt;p&gt;We also need to select which &lt;em&gt;certification resolver&lt;/em&gt;  we‚Äôre going to use, on
this case, Let‚Äôs encrypt, we specify that by filling the acme fields.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;acme.email&lt;/strong&gt; can be any personal/business email. &lt;strong&gt;acme.storage&lt;/strong&gt; is where
our ssl certificates will be saved, it does &lt;strong&gt;need to exists but can be
empty&lt;/strong&gt;, if that is the case, traefik will override it with valid certs.
&lt;strong&gt;acme.tlschallenge&lt;/strong&gt; is the challenge type, there are &lt;a href=&quot;https://doc.traefik.io/traefik/https/acme/#the-different-acme-challenges&quot;&gt;other
types&lt;/a&gt;,
but I think this is the easiest.&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
+      - &quot;--certificatesresolvers.myresolver.acme.email=your-personal@email.tld&quot;
+      - &quot;--certificatesresolvers.myresolver.acme.storage=/acme.json&quot;
+      - &quot;--certificatesresolvers.myresolver.acme.tlschallenge=true&quot;
     ports:
       - &quot;80:80&quot;     #reverse proxy =&amp;gt; input to all containerized services
+      - &quot;443:443&quot;   #reverse ssl proxy
&lt;/pre&gt;

&lt;p&gt;Finally we‚Äôll share the &lt;strong&gt;acme.json&lt;/strong&gt; file between our host/container to avoid
requesting new certificates each time we launch our traefik container.&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
+      # Run this command in the host machine before launching traefik:
+      #   $ touch acme.json &amp;amp;&amp;amp; chmod 600 acme.json
+      - ${PWD}/acme.json:/acme.json
&lt;/pre&gt;

&lt;p&gt;As the comments suggest, this file needs to be created with specific
permissions before running traefik.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch acme.json &amp;amp;&amp;amp; chmod 600 acme.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, that‚Äôs all on traefik side, let‚Äôs apply the patch:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ patch -p0 &amp;lt; docker-compose.ssl.yml.patch
patching file docker-compose.ssl.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;site1com&quot;&gt;site1.com&lt;/h2&gt;

&lt;p&gt;Let‚Äôs copy and analyze what makes a new site https compatible:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp docker-compose.site1.yml docker-compose.site1.ssl.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;site1.com/docker-compose.site1.ssl.yml.patch&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
--- docker-compose.site1.ssl.yml           2020-12-03 10:02:48.186590271 -0600
+++ docker-compose.site1.ssl.changes.yml   2020-12-03 10:03:30.940486004 -0600
@@ -28,7 +28,15 @@
       - frontend
     labels:
       - &quot;traefik.enable=true&quot;
-      - &quot;traefik.http.routers.site1_com.rule=Host(`site1.com`)&quot;
+
+      - &quot;traefik.http.routers.http_site1_com.rule=Host(`site1.com`)&quot;
+      - &quot;traefik.http.routers.http_site1_com.entrypoints=http&quot;
+
+      - &quot;traefik.http.routers.https_site1_com.rule=Host(`site1.com`)&quot;
+      - &quot;traefik.http.routers.https_site1_com.entrypoints=https&quot;
+      - &quot;traefik.http.routers.https_site1_com.tls=true&quot;
+      - &quot;traefik.http.routers.https_site1_com.tls.certresolver=myresolver&quot;
+
       - &quot;traefik.http.services.site1_com.loadbalancer.server.port=80&quot;
 
   app:
&lt;/pre&gt;

&lt;p&gt;I don‚Äôt know about you, but for me the syntax is confusing, happily this only
needs to be setup once and then can be reused in other domains/subdomains by
changing only some words. Also, the ssl endpoint is transparent, our
application doesn‚Äôt need to be aware of it, that‚Äôs great and IMO overrides the
verbose configuration.&lt;/p&gt;

&lt;p&gt;As you noticed, the &lt;strong&gt;site1_com&lt;/strong&gt; rules were split in two, &lt;strong&gt;http_site1_com&lt;/strong&gt;
and &lt;strong&gt;https_site1_com&lt;/strong&gt;, this is because each route needs to define a Host and
an entrypoint (port), repetitive right?, in the &lt;strong&gt;https&lt;/strong&gt; route we enable
&lt;strong&gt;tls&lt;/strong&gt; and point to our custom resolver &lt;strong&gt;myresolver&lt;/strong&gt; which if we recall uses
let‚Äôs encrypt. There is also one more detail:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
       - &quot;traefik.http.services.site1_com.loadbalancer.server.port=80&quot;
&lt;/pre&gt;

&lt;p&gt;The service element redirects traefik routes to our app‚Äôs 80 port, as each
route defines a domain and entrypoint, that means it affects the domain as a
whole and therefore it‚Äôs kept as &lt;strong&gt;site1_com&lt;/strong&gt; , @.@!&lt;/p&gt;

&lt;p&gt;This configuration leaves an important use case that each year is more common,
forcing users to use &lt;strong&gt;https&lt;/strong&gt; over &lt;strong&gt;http&lt;/strong&gt;. Since I personally do not agree
with such IMO abusive behavior, I skipped it on purpose, however if you‚Äôre
interested you can use a
&lt;a href=&quot;https://doc.traefik.io/traefik/middlewares/redirectscheme/&quot;&gt;middleware&lt;/a&gt; to
configure that.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ patch -p0 &amp;lt; docker-compose.site1.yml.patch
patching file docker-compose.site1.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;site2com&quot;&gt;site2.com&lt;/h2&gt;

&lt;p&gt;The second site should be easier to review:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp docker-compose.site2.yml docker-compose.site2.ssl.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;site2.com/docker-compose.site2.ssl.yml.patch&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
--- docker-compose.site2.ssl.yml           2020-12-03 10:02:48.186590271 -0600
+++ docker-compose.site2.ssl.changes.yml   2020-12-03 10:03:30.940486004 -0600
@@ -26,7 +26,15 @@
       - frontend
     labels:
       - &quot;traefik.enable=true&quot;
-      - &quot;traefik.http.routers.site2_com.rule=Host(`site2.com`)&quot;
+
+      - &quot;traefik.http.routers.http_site2_com.rule=Host(`site2.com`)&quot;
+      - &quot;traefik.http.routers.http_site2_com.entrypoints=http&quot;
+
+      - &quot;traefik.http.routers.https_site2_com.rule=Host(`site2.com`)&quot;
+      - &quot;traefik.http.routers.https_site2_com.entrypoints=https&quot;
+      - &quot;traefik.http.routers.https_site2_com.tls=true&quot;
+      - &quot;traefik.http.routers.https_site2_com.tls.certresolver=myresolver&quot;
+
       - &quot;traefik.http.services.site2_com.loadbalancer.server.port=80&quot;
&lt;/pre&gt;

&lt;p&gt;Everything is the same, the only difference is that &lt;strong&gt;site1&lt;/strong&gt; was replaced with
&lt;strong&gt;site2&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ patch -p0 &amp;lt; docker-compose.site2.yml.patch
patching file docker-compose.site2.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-compose-up&quot;&gt;docker-compose up&lt;/h2&gt;

&lt;p&gt;If you‚Äôve followed everything up until this point, &lt;strong&gt;congratulations!&lt;/strong&gt;,
technology is great but also tends to be harder to grasp as more elements are
incorporated, let‚Äôs end this tutorial once for all so we can continue with our
lives:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd multisite/ &amp;amp;&amp;amp; docker-compose -f docker-compose.ssl.yml       up -d
$ cd site1.com/ &amp;amp;&amp;amp; docker-compose -f docker-compose.site1.ssl.yml up -d
$ cd site2.com/ &amp;amp;&amp;amp; docker-compose -f docker-compose.site2.ssl.yml up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it!, a kind of simple setup with ssl certs that is only limited by
the amount of &lt;strong&gt;RAM/CPU&lt;/strong&gt; in your machine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://site1.com
hello world from 7b7d6302-e162-3806-9595-17f854dd5b98

$ curl https://site2.com; echo
{&quot;Greetings&quot;: &quot;Hello World!&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://javier.io/blog/en/2020/12/01/host-several-sites-in-a-single-box-with-docker-and-traefik-http.html&quot;&gt;http://javier.io/blog/en/2020/12/01/host-several-sites-in-a-single-box-with-docker-and-traefik-http.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://traefik.io/blog/traefik-2-0-docker-101-fc2893944b9d/&quot;&gt;https://github.com/traefik/traefik/issues/5506#issuecomment-549100716&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>host several sites in a single box with docker and traefik v2, http</title>
   <link href="http://javier.io/blog/en/2020/12/01/host-several-sites-in-a-single-box-with-docker-and-traefik-http.html"/>
   <updated>2020-12-01T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2020/12/01/host-several-sites-in-a-single-box-with-docker-and-traefik-http</id>
   <content type="html">&lt;h2 id=&quot;host-several-sites-in-a-single-box-with-docker-and-traefik-v2-http&quot;&gt;host several sites in a single box with docker and traefik v2, http&lt;/h2&gt;

&lt;h6 id=&quot;01-dec-2020&quot;&gt;01 Dec 2020&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; is great and everything, however one of the
things that still stress me is how to deploy it to production. I don‚Äôt need
fancy stuff, nor I want to spend my free time or money hosting small/personal
projects. I just want to be able to &lt;strong&gt;docker-compose up&lt;/strong&gt; and forget. And if
several projects can share a single node while maintaining their own
domain/subdomain even better.&lt;/p&gt;

&lt;p&gt;Today, after completing another small service, I decided I had enough, I
reviewed several alternatives and finally found a sensitive one.
&lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt;, a simple/yet powerful reverse proxy that is
compatible with Docker/Kubernetes/Blablabla and that just works. So here goes,
my own tutorial for future me and other in pain souls.&lt;/p&gt;

&lt;h2 id=&quot;diagram-and-folder-structure&quot;&gt;Diagram and Folder Structure&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/traefik-docker-compose.png&quot;&gt;&lt;img src=&quot;/assets/img/traefik-docker-compose.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚î¨
‚îú‚îÄ‚îÄ multisite (traefik)
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ site1.com
‚îÇ   ‚îú‚îÄ‚îÄ ...
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.site1.yml
‚îú‚îÄ‚îÄ site2.com
    ‚îú‚îÄ‚îÄ ...
    ‚îú‚îÄ‚îÄ docker-compose.site2.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;multisite&quot;&gt;multisite&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;multisite/docker-compose.yml&lt;/strong&gt; contains the core of the setup:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '3.4'

services:
  traefik:
    image: traefik:v2.3
    command:
      - &quot;--api.insecure=true&quot;
      - &quot;--providers.docker&quot;
      - &quot;--providers.docker.exposedbydefault=false&quot;
      - &quot;--providers.docker.network=traefik_global&quot;
    ports:
      - &quot;80:80&quot;     #all traffic will arrive through this port
      - &quot;8080:8080&quot; #traefik dashboard/api
    volumes: #this is how traefik reads docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik

networks:
  traefik:
    name: traefik_global
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It‚Äôs amazing how simple it can get, let‚Äôs review some of its sections:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--api.insecure=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Activate traefik‚Äôs dashboard/api (should be disabled or protected in production
systems), &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; and
&lt;a href=&quot;http://localhost:8080/api/rawdata&quot;&gt;http://localhost:8080/api/rawdata&lt;/a&gt;,
personally the latter was more useful to me, helped me to debug route
mismatches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/traefik-dashboard.png&quot;&gt;&lt;img src=&quot;/assets/img/traefik-dashboard.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Traefik is able to autoconfigure its routing from Docker events/data, that is
great but if you don‚Äôt want to end with dozens of routes because of auxiliary
services it‚Äôs better to only allow specific ones, maybe only service‚Äôs
front-ends?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--providers.docker
--providers.docker.exposedbydefault=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default, &lt;strong&gt;docker-compose&lt;/strong&gt; creates volumes/networks based in the project
folder name, that‚Äôs to protect from service collision, for our traefik case
however we need a global network that can be referred in multiple scenarios,
that‚Äôs what the &lt;strong&gt;name:&lt;/strong&gt; parameter does, the &lt;strong&gt;providers.docker.network&lt;/strong&gt;
option gives to Traefik the instruction to route all its traffic through this
interface, if not defined here every service would need to do it in its own
&lt;strong&gt;docker-compose.yml&lt;/strong&gt; file.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--providers.docker.network=traefik_global

networks:
  traefik:
    name: traefik_global
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;site1com&quot;&gt;site1.com&lt;/h2&gt;

&lt;p&gt;In order to make a realistic scenario I‚Äôm going to use small applications that
although simple contain enough complexity to mirror real world cases:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/nebulosa/docker-flask-hello-world-mongodb site1.com
$ cd site1.com/
$ git checkout 0de86a2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/traefik-tier-3-app.png&quot;&gt;&lt;img src=&quot;/assets/img/traefik-tier-3-app.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above image doesn‚Äôt consider docker, yet helps to describe how a common web
application works, once we take in account containers / subnets we would arrive
to the following diagram:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/traefik-tier-3-dockerized-app.png&quot;&gt;&lt;img src=&quot;/assets/img/traefik-tier-3-dockerized-app.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the only container that can communicate with both, &lt;strong&gt;frontend&lt;/strong&gt;
and &lt;strong&gt;database&lt;/strong&gt; is the &lt;strong&gt;app&lt;/strong&gt;, this is just good practices, in our final
setup, an additional &lt;strong&gt;traefik_global&lt;/strong&gt; network would be added, it will connect
every front-end web container to send/receive requests while the rest of the
service stack is hidden in its own namespace, simple/elegant and easy to scale.&lt;/p&gt;

&lt;p&gt;I‚Äôll create a copy of &lt;strong&gt;docker-compose-cherry.yml&lt;/strong&gt; and apply a patch to
showcase how traefik connection works:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp docker-compose-cherry.yml docker-compose.site1.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;site1.com/docker-compose.site1.yml.patch&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
--- docker-compose.site1.yml           2020-12-01 10:02:48.186590271 -0600
+++ docker-compose.site1.changes.yml   2020-12-01 10:03:30.940486004 -0600
@@ -18,15 +18,18 @@

   nginx:
     image: nginx:1.13.10-alpine
-    ports:
-      - &quot;5000:80&quot;
     volumes:
       - ./nginx/default/:/etc/nginx/conf.d
       - /etc/localtime:/etc/localtime:ro
     depends_on:
       - app
     networks:
+      - traefik #add 1st so traefik performs better
       - frontend
+    labels:
+      - &quot;traefik.enable=true&quot;
+      - &quot;traefik.http.routers.site1_com.rule=Host(`site1.com`)&quot;
+      - &quot;traefik.http.services.site1_com.loadbalancer.server.port=80&quot;

   app:
     build: .
@@ -52,3 +55,6 @@
     driver: bridge #or overlay in swarm mode
   backend:
     driver: bridge #or overlay in swarm mode
+  traefik:
+    external:
+      name: traefik_global
&lt;/pre&gt;

&lt;p&gt;Since all our traffic would pass through localhost:80/traefik there is no need
to expose/bind additional ports:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
   nginx:
     image: nginx:1.13.10-alpine
-    ports:
-      - &quot;5000:80&quot;
&lt;/pre&gt;

&lt;p&gt;The front-end container, &lt;strong&gt;nginx&lt;/strong&gt; on this case, is connected to the global
traefik network.&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
     networks:
+      - traefik #add 1st so traefik performs better
       - frontend

+  traefik:
+    external:
+      name: traefik_global
&lt;/pre&gt;

&lt;p&gt;Only the &lt;strong&gt;nginx&lt;/strong&gt; container is announced to traefik, &lt;strong&gt;enable=true&lt;/strong&gt;, it
will respond to the &lt;strong&gt;site1.com&lt;/strong&gt; domain and will be available in the
local port &lt;strong&gt;80&lt;/strong&gt; (&lt;strong&gt;grep ‚Äúlisten‚Äù nginx/default/default.conf&lt;/strong&gt;), an
important step is to verify that the &lt;strong&gt;routers/services id&lt;/strong&gt; is unique, on
this case &lt;strong&gt;site1_com&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
+    labels:
+      - &quot;traefik.enable=true&quot;
+      - &quot;traefik.http.routers.site1_com.rule=Host(`site1.com`)&quot;
+      - &quot;traefik.http.services.site1_com.loadbalancer.server.port=80&quot;
&lt;/pre&gt;

&lt;p&gt;That‚Äôs all for a basic setup, I‚Äôll add https/automatic SSL renovation in a
future article, let‚Äôs apply the patch:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ patch -p0 &amp;lt; docker-compose.site1.yml.patch
patching file docker-compose.site1.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;site2com&quot;&gt;site2.com&lt;/h2&gt;

&lt;p&gt;The second site is an API, really simple but also with its own
database and nginx containers.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/nebulosa/flask-api-rest site2.com
$ cd site2.com/
$ git checkout 9489597
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I‚Äôll also create a copy of &lt;strong&gt;docker-compose-cherry.yml&lt;/strong&gt; and apply a patch similar
to the previous one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cp docker-compose-cherry.yml docker-compose.site2.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;site2.com/docker-compose.site2.yml.patch&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
--- docker-compose.site2.yml           2020-12-01 10:02:48.186590271 -0600
+++ docker-compose.site2.changes.yml   2020-12-01 10:03:30.940486004 -0600
@@ -17,14 +17,17 @@

   nginx:
     image: nginx:1.13.10-alpine
-    ports:
-      - &quot;5000:80&quot;
     volumes:
       - ./nginx:/etc/nginx/conf.d
     depends_on:
       - app
     networks:
+      - traefik #add 1st so traefik performs better
       - frontend
+    labels:
+      - &quot;traefik.enable=true&quot;
+      - &quot;traefik.http.routers.site2_com.rule=Host(`site2.com`)&quot;
+      - &quot;traefik.http.services.site2_com.loadbalancer.server.port=80&quot;

   app:
     build: .
@@ -46,3 +49,6 @@
     driver: bridge #or overlay in swarm mode
   backend:
     driver: bridge #or overlay in swarm mode
+  traefik:
+    external:
+      name: traefik_global
&lt;/pre&gt;

&lt;p&gt;As you notice, all changes are the same except for:&lt;/p&gt;

&lt;pre class=&quot;sh_diff&quot;&gt;
+    labels:
+      - &quot;traefik.enable=true&quot;
+      - &quot;traefik.http.routers.site2_com.rule=Host(`site2.com`)&quot;
+      - &quot;traefik.http.services.site2_com.loadbalancer.server.port=80&quot;
&lt;/pre&gt;

&lt;p&gt;This time, the routers/services id is &lt;strong&gt;site2_com&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ patch -p0 &amp;lt; docker-compose.site2.yml.patch
patching file docker-compose.site2.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-compose-up&quot;&gt;docker-compose up&lt;/h2&gt;

&lt;p&gt;One previous step I‚Äôm going to do before launching everything is edit
&lt;strong&gt;/etc/hosts&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...

127.0.0.1	site1.com
127.0.0.1	site2.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That will help me test the sites locally, ok, let‚Äôs end this tutorial:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd multisite/ &amp;amp;&amp;amp; docker-compose up -d
$ cd site1.com/ &amp;amp;&amp;amp; docker-compose -f docker-compose.site1.yml up -d
$ cd site2.com/ &amp;amp;&amp;amp; docker-compose -f docker-compose.site2.yml up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it!, a simple setup that is only limited by the amount of
&lt;strong&gt;RAM/CPU&lt;/strong&gt; in your machine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl site1.com
hello world from 7b7d6302-e162-3806-9595-17f854dd5b98

$ curl site2.com; echo
{&quot;Greetings&quot;: &quot;Hello World!&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://traefik.io/blog/traefik-2-0-docker-101-fc2893944b9d/&quot;&gt;https://traefik.io/blog/traefik-2-0-docker-101-fc2893944b9d/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>on the nature of daylight, una composici√≥n de max richter</title>
   <link href="http://javier.io/blog/es/2020/09/11/on-the-nature-of-daylight-una-composicion-de-max-richter.html"/>
   <updated>2020-09-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2020/09/11/on-the-nature-of-daylight-una-composicion-de-max-richter</id>
   <content type="html">&lt;h2 id=&quot;on-the-nature-of-daylight-una-composici√≥n-de-max-richter&quot;&gt;on the nature of daylight, una composici√≥n de max richter&lt;/h2&gt;

&lt;h6 id=&quot;11-sep-2020&quot;&gt;11 Sep 2020&lt;/h6&gt;

&lt;p&gt;Agradecimiento a &lt;a href=&quot;https://es.wikipedia.org/wiki/Max_Richter&quot;&gt;aquellos&lt;/a&gt; que son capaces a trav√©s de las artes de expresar nuestros sentimientos.&lt;/p&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4J8hV_8a8y0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&amp;lt;/center&amp;gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>python: sobrecarga de funciones, multimethod</title>
   <link href="http://javier.io/blog/es/2020/05/08/python-sobrecarga-de-funciones-multimethod.html"/>
   <updated>2020-05-08T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2020/05/08/python-sobrecarga-de-funciones-multimethod</id>
   <content type="html">&lt;h2 id=&quot;python-sobrecarga-de-funciones-multimethod&quot;&gt;python: sobrecarga de funciones, multimethod&lt;/h2&gt;

&lt;h6 id=&quot;08-may-2020&quot;&gt;08 May 2020&lt;/h6&gt;

&lt;p&gt;Uno de los &lt;strong&gt;‚Äúdefectos‚Äù&lt;/strong&gt; m√°s molestos de python para mi es su falta de soporte
para sobrecargar funciones, es estos d√≠as con motivo de un nuevo proyecto me
toc√≥ volver a revisar el tema, encontr√© algunas soluciones caseras, un nuevo
decorador ‚Äòsingledispatch‚Äô y varias librer√≠as, despu√©s de hacer algunos
experimentos por fin encontr√© una implementaci√≥n lo suficientemente robusta
para zanjar el tema, lo comparto por si alguien trae el mismo hormigueo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/multimethod/&quot;&gt;https://pypi.org/project/multimethod/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/python-sobrecarga-de-funciones-multimethod-example.png&quot;&gt;&lt;img src=&quot;/assets/img/python-sobrecarga-de-funciones-multimethod-example.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Listo, feliz multipass üòã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/python-sobrecarga-de-funciones-multimethod.png&quot;&gt;&lt;img src=&quot;/assets/img/python-sobrecarga-de-funciones-multimethod.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>el amor, las mujeres y la vida</title>
   <link href="http://javier.io/blog/es/2020/02/28/el-amor-las-mujeres-y-la-vida.html"/>
   <updated>2020-02-28T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2020/02/28/el-amor-las-mujeres-y-la-vida</id>
   <content type="html">&lt;h2 id=&quot;el-amor-las-mujeres-y-la-vida&quot;&gt;el amor, las mujeres y la vida&lt;/h2&gt;

&lt;h6 id=&quot;28-feb-2020&quot;&gt;28 Feb 2020&lt;/h6&gt;

&lt;p&gt;A trav√©s de la poes√≠a nos reconocemos humanos y que mejor que el desamor para saborear estos versos.&lt;/p&gt;

&lt;h3 id=&quot;es-tan-poco&quot;&gt;Es tan poco&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
Lo que conoces es tan poco
lo que conoces de m√≠
lo que conoces son mis nubes
son mis silencios, son mis gestos
lo que conoces es la tristeza de mi casa vista de afuera
son los postigos de mi tristeza
el llamador de mi tristeza.

Pero no sabes nada
a lo sumo, piensas a veces
que es tan poco lo que conozco de ti
lo que conozco o sea tus nubes
o tus silencios, o tus gestos
lo que conozco es la tristeza de tu casa vista de afuera
son los postigos de tu tristeza
el llamador de tu tristeza.

Pero no llamas
Pero no llamo.
&lt;/pre&gt;

&lt;h3 id=&quot;ella-que-pasa&quot;&gt;Ella que pasa&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
Paso que pasa
rostro que pasabas
qu√© m√°s quieres, te miro
despu√©s me olvidar√©
despu√©s y solo
solo y despu√©s
seguro que me olvido.

Paso que pasas
rostro que pasabas
qu√© m√°s quieres, te quiero
te quiero s√≥lo dos o tres minutos
para conocerte m√°s no tengo tiempo.

Paso que pasas
rostro que pasabas
qu√© m√°s quieres, ay no
ay no me tientes
que si nos tentamos
no nos podremos olvidar
adi√≥s.
&lt;/pre&gt;

&lt;h3 id=&quot;ustedes-y-nosotros&quot;&gt;Ustedes y nosotros&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
Ustedes cuando aman exigen bienestar
una cama de cedro y un colch√≥n especial

Nosotros cuando amamos es f√°cil de arreglar
con s√°banas qu√© bueno sin s√°banas da igual

Ustedes cuando aman calculan inter√©s
y cuando se desaman calculan otra vez.

Nosotros cuando amamos es como renacer
y si nos desamamos no la pasamos bien.

Ustedes cuando aman son de otra magnitud
hay fotos chismes prensa y el amor es un boom.

Nosotros cuando amamos es un amor com√∫n
tan simple y tan sabroso como tener salud.

Ustedes cuando aman consultan el reloj
porque el tiempo que pierden vale medio mill√≥n.

Nosotros cuando amamos sin prisa y con fervor
gozamos y nos sale barata la funci√≥n.

Ustedes cuando aman al analista van
√©l es quien dictamina si lo hacen bien o mal.

Nosotros cuando amamos sin tanta cortedad
el subconsciente piola se pone a disfrutar.

Ustedes cuando aman exigen bienestar
una cama de cedro y un colch√≥n especial

Nosotros cuando amamos es f√°cil de arreglar
con s√°banas qu√© bueno sin s√°banas da igual.
&lt;/pre&gt;

&lt;h3 id=&quot;hagamos-un-trato&quot;&gt;Hagamos un trato&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
Compa√±era usted sabe puede contar conmigo
no hasta dos o hasta diez sino contar conmigo.

Si alguna vez advierte que la miro a los ojos
y una veta de amor reconoce en los m√≠os
no alerte sus fusiles, ni piense qu√© delirio
a pesar de la veta o tal vez porque existe
usted puede contar conmigo.

Si otras veces me encuentra hura√±o sin motivo
no piense qu√© flojera, igual puede contar conmigo.

Pero hagamos un trato
yo quisiera contar con usted
es tan lindo saber que usted existe
uno se siente vivo y cuando digo esto
quiero decir contar
aunque sea hasta dos, aunque sea hasta cinco
no ya para que acuda presurosa en mi auxilio
sino para saber a ciencia cierta
que usted sabe que puede contar conmigo.
&lt;/pre&gt;

&lt;h3 id=&quot;a-la-izquierda-del-roble&quot;&gt;A la izquierda del roble&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
No s√© si alguna vez les ha pasado a ustedes
pero el Jard√≠n Bot√°nico siempre ha tenido
una agradable propensi√≥n a los sue√±os
a que los insectos suban por las piernas
y la melancol√≠a baje por los brazos
hasta que uno cierra los pu√±os y la atrapa
despu√©s de todo el secreto es mirar hacia arriba
y ver c√≥mo las nubes se disputan las copas
y ver c√≥mo los nidos se disputan los p√°jaros.

No s√© si alguna vez les ha pasado a ustedes
pero puede ocurrir que de pronto uno advierta
uno de esos amores de t√°ntalo y azar
que Dios no admite porque tiene celos.

F√≠jense que √©l acusa con ternura
y ella se apoya contra la corteza
f√≠jense que √©l va tildando recuerdos
y ella se consterna misteriosamente
para m√≠ que el muchacho est√° diciendo
lo que se dice a veces en el Jard√≠n Bot√°nico.

Vos lo dijiste, nuestro amor
fue desde siempre un ni√±o muerto
s√≥lo de a ratos parec√≠a que iba a vivir
que iba a vencernos
pero los dos fuimos tan fuertes
que lo dejamos sin su sangre
sin su futuro, sin su cielo
un ni√±o muerto s√≥lo eso
maravilloso y condenado
quiz√° tuviera una sonrisa como la tuya
dulce y honda, quiz√° tuviera un alma triste
como mi alma, poca cosa
quiz√° aprendiera con el tiempo
a desplegarse a usar el mundo
pero los ni√±os que as√≠ vienen
muertos de amor, muertos de miedo
tienen tan grande el coraz√≥n
que se destruyen sin saberlo.

Vos lo dijiste, nuestro amor
fue desde siempre un ni√±o, un ni√±o muerto.
&lt;/pre&gt;

&lt;h3 id=&quot;no-te-salves&quot;&gt;No te salves&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
No te quedes inm√≥vil al borde del camino
no congeles el j√∫bilo, no quieras con desgana
no te salves ahora, ni nunca, no te salves.

No te llenes de calma, no reserves del mundo s√≥lo un rinc√≥n tranquilo
no dejes caer los p√°rpados pesados como juicios
no te quedes sin labios, no te duermas sin sue√±o
no te pienses sin sangre, no te juzgues sin tiempo

Pero si pese a todo no puedes evitarlo
y congelas el j√∫bilo y quieres con desgana
y te salvas ahora y te llenas de calma
y reservas del mundo s√≥lo un rinc√≥n tranquilo
y dejas caer los p√°rpados pesados como juicios
y te secas sin labios y te duermes sin sue√±o
y te piensas sin sangre y te juzgas sin tiempo
y te quedas inm√≥vil al borde del camino
y te salvas.

Entonces no te quedes conmigo.
&lt;/pre&gt;

&lt;h3 id=&quot;la-culpa-es-de-uno&quot;&gt;La culpa es de uno&lt;/h3&gt;

&lt;pre class=&quot;lyric&quot;&gt;
Quiz√° fue una hecatombe de esperanzas,
un derrumbe de alg√∫n modo previsto
pero mi tristeza s√≥lo tuvo un sentido.

Todas mis intuiciones se asomaron para verme sufrir
y por cierto me vieron.

Hasta aqu√≠ hab√≠a hecho y rehecho mis trayectos contigo
hasta aqu√≠ hab√≠a apostado a inventar la verdad
pero tu encontraste la manera, una manera tierna
y a la vez implacable de desahuciar mi amor.

Con un solo pron√≥stico lo quitaste de los suburbios de tu vida posible
lo envolviste en nostalgias, lo cargaste por cuadras y cuadras
y despacito, sin que el aire nocturno lo advirtiera, ah√≠ nom√°s lo dejaste,
a solas,
con su suerte, que no es mucha.

Creo que tienes raz√≥n
la culpa es de uno cuando no enamora
y no de los pretextos ni del tiempo.

Hace mucho, much√≠simo que no me enfrentaba como anoche al espejo
y fue implacable como tu, mas no fue tierno.
Ahora estoy solo, francamente solo.

Siempre cuesta un poquito empezar a sentirse desgraciado

Antes de regresar a mis l√≥bregos cuarteles de invierno
con los ojos bien secos por si acaso
miro como te vas adentrando en la niebla y empiezo a recordarte.
&lt;/pre&gt;

&lt;h3 id=&quot;soledades&quot;&gt;Soledades&lt;/h3&gt;
&lt;pre class=&quot;lyric&quot;&gt;
Ellos tienen raz√≥n
esa felicidad al menos con may√∫scula, no existe
ah pero si existiera con min√∫scula
seria semejante a nuestra breve presoledad

Despu√©s de la alegr√≠a, viene la soledad
despu√©s de la plenitud, viene la soledad
despu√©s del amor, viene la soledad.

Ya s√© que es una pobre deformaci√≥n
pero lo cierto es que en ese durable minuto
uno se siente solo en el mundo.

Despu√©s de la alegr√≠a, despu√©s de la plenitud
despu√©s del amor, viene la soledad
conforme, ¬øpero qu√© vendr√° despu√©s de la soledad?

A veces no me siento tan solo
si imagino, mejor dicho si s√©
que m√°s all√° de mi soledad y de la tuya
otra vez estas vos
aunque sea pregunt√°ndote a solas
que vendr√° despu√©s de la soledad.
&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>compartiendo archivos cifrados x internet</title>
   <link href="http://javier.io/blog/es/2019/08/05/compartir-archivos-cifrados-x-internet.html"/>
   <updated>2019-08-05T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2019/08/05/compartir-archivos-cifrados-x-internet</id>
   <content type="html">&lt;h2 id=&quot;compartiendo-archivos-cifrados-x-internet&quot;&gt;compartiendo archivos cifrados x internet&lt;/h2&gt;

&lt;h6 id=&quot;05-aug-2019&quot;&gt;05 Aug 2019&lt;/h6&gt;

&lt;p&gt;Un archivo cifrado es aquel que ha sido ofuscado mediante algoritmos p√∫blicos,
s√≥lo las personas con la llave secreta pueden acceder a ellos.&lt;/p&gt;

&lt;h3 id=&quot;cifrar&quot;&gt;Cifrar&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gpg -v --cipher-algo AES256 --symmetric IMAGEN.PNG
# pregunta contrase√±a 2 veces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Un archivo &lt;strong&gt;IMAGEN.PNG.gpg&lt;/strong&gt; es generado, este es el que debemos pasar al
contacto junto con la contrase√±a&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OJO: En el ejemplo anterior se ha usado una IMAGEN.PNG pero puede usarse con
cualquier tipo de archivo&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;descifrar&quot;&gt;Descifrar&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gpg -v --decrypt IMAGEN.PNG.gpg &amp;gt; IMAGEN.PNG
# pregunta contrase√±a 2 veces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Un archivo &lt;strong&gt;IMAGEN.PNG&lt;/strong&gt; es generado el cual puede abrirse con cualquier visor
de imagenes.&lt;/p&gt;

&lt;h2 id=&quot;seguridad-adicional-estenograf√≠a&quot;&gt;Seguridad adicional, estenograf√≠a&lt;/h2&gt;

&lt;p&gt;La esteneograf√≠a es la t√©cnica de esconder mensajes / datos dentro de otros,
por ejemplo almacenar archivos cifrados dentro de canciones mp3.&lt;/p&gt;

&lt;h3 id=&quot;instalaci√≥n&quot;&gt;Instalaci√≥n&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget https://raw.githubusercontent.com/javier-lopez/learn/master/sh/dockerized/hideme.dockerized
$ chmod +x hideme.dockerized
$ sudo mv hideme.dockerized /usr/bin/hideme.dockerized
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;esconder-datos-en-archivos-de-m√∫sica&quot;&gt;Esconder datos en archivos de m√∫sica&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ hideme.dockerized ARCHIVO.MP3 IMAGEN.PNG.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Un archivo &lt;strong&gt;output.mp3&lt;/strong&gt; es generado, este es el archivo que debemos pasar al
contacto junto con la contrase√±a del archivo &lt;strong&gt;IMAGEN.PNG.gpg&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;descubrir-datos-en-archivos-de-m√∫sica&quot;&gt;Descubrir datos en archivos de m√∫sica&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ hideme.dockerized output.mp3 -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Un archivo &lt;strong&gt;output.U&lt;/strong&gt; es generado, este debe renombrarse al archivo original, por ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mv output.U IMAGEN.PNG.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y descifrarse en caso de ser necesario:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gpg -v --decrypt IMAGEN.PNG.gpg &amp;gt; IMAGEN.PNG
# pregunta contrase√±a 2 veces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Listo, feliz transmisi√≥n de secretos üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>lvm cheatsheet</title>
   <link href="http://javier.io/blog/en/2019/03/16/lvm-cheatsheet.html"/>
   <updated>2019-03-16T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2019/03/16/lvm-cheatsheet</id>
   <content type="html">&lt;h2 id=&quot;lvm-cheatsheet&quot;&gt;lvm cheatsheet&lt;/h2&gt;

&lt;h6 id=&quot;16-mar-2019&quot;&gt;16 Mar 2019&lt;/h6&gt;

&lt;p&gt;There are certain commands I keep forgetting no matter how many times
I try them, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ln&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt; and the reason for this post, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LVM&lt;/code&gt;.
So, here goes a quick how-to for my future me.&lt;/p&gt;

&lt;h3 id=&quot;basics&quot;&gt;Basics&lt;/h3&gt;

&lt;p&gt;In order to understand &lt;strong&gt;LVM&lt;/strong&gt; it‚Äôs required to have a clear picture of its components.&lt;/p&gt;

&lt;h2 id=&quot;physical-volume-pv&quot;&gt;Physical Volume (PV)&lt;/h2&gt;

&lt;p&gt;A PV is &lt;strong&gt;any block device&lt;/strong&gt; that can be used as storage, eg: &lt;strong&gt;/dev/sda&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/lvm_pv.png&quot;&gt;&lt;img src=&quot;/assets/img/lvm_pv.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;volume-group-vg&quot;&gt;Volume Group (VG)&lt;/h2&gt;

&lt;p&gt;A VG is a group of at least one PV, it usually contains several, thought.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/lvm_vg.png&quot;&gt;&lt;img src=&quot;/assets/img/lvm_vg.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;logical-volume-lv&quot;&gt;Logical Volume (LV)&lt;/h2&gt;

&lt;p&gt;A LV is a portion (partition) of a VG.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/lvm_lv.png&quot;&gt;&lt;img src=&quot;/assets/img/lvm_lv.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-to-set-up-multiple-hard-drives-as-one-volume&quot;&gt;How to set up multiple hard drives as one volume?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Define /dev/sda, /dev/sdb2 and /dev/sdc3 as PVs&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo pvcreate /dev/sda /dev/sdb2 /dev/sdc3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Create a Volume Group (VG) out of three just defined PVs&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vgcreate vg_name /dev/sda /dev/sdb2 /dev/sdc3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Create a Logical Volume (LV) out of the just defined VG&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo lvcreate -l 100%FREE -n lv_name vg_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done!, now it can be formated and mounted as a normal HD, eg:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo mkfs.ext4 /dev/vg_name/lv_name
$ echo '/dev/vg_name/lv_name /mount_point ext4 defaults 0 0' | sudo tee -a /etc/fstab
$ sudo mount -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-to-mount-a-previously-defined-lvm-volume&quot;&gt;How to mount a previously defined LVM volume&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Recreate /dev/ LVM partitions&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vgchange -ay
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done!, now it can be formated and mounted as a normal HD, eg:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo mkfs.ext4 /dev/vg_name/lv_name
$ echo '/dev/vg_name/lv_name /mount_point ext4 defaults 0 0' | sudo tee -a /etc/fstab
$ sudo mount -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-to-extend-a-full-lvm-volume&quot;&gt;How to extend a full LVM volume&lt;/h3&gt;

&lt;p&gt;First, you need to extend the volume or block in the underlaying VM/Hardware, once done:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo pvresize /dev/sda #or any other modified device
$ sudo lvextend -l +100%FREE /dev/vg_name/lv_name 
$ sudo resize2fs /dev/vg_name/lv_name  #for ext3/4
$ sudo xfs_growfs -d /dev/vg_name/lv_name #for xfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it!, I‚Äôll keep adding &lt;strong&gt;LVM&lt;/strong&gt; recipes as I find them, happy storing,
üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/7002/how-to-set-up-multiple-hard-drives-as-one-volume&quot;&gt;https://askubuntu.com/questions/7002/how-to-set-up-multiple-hard-drives-as-one-volume&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-lvm-to-manage-storage-devices-on-ubuntu-16-04&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-use-lvm-to-manage-storage-devices-on-ubuntu-16-04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.inittab.org/administracion-sistemas/lvm-para-torpes-i/&quot;&gt;https://blog.inittab.org/administracion-sistemas/lvm-para-torpes-i/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>how to keep your Git-Fork up to date</title>
   <link href="http://javier.io/blog/en/2018/12/29/how-to-keep-your-github-fork-up-to-date.html"/>
   <updated>2018-12-29T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/12/29/how-to-keep-your-github-fork-up-to-date</id>
   <content type="html">&lt;h2 id=&quot;how-to-keep-your-git-fork-up-to-date&quot;&gt;how to keep your Git-Fork up to date&lt;/h2&gt;

&lt;h6 id=&quot;29-dec-2018&quot;&gt;29 Dec 2018&lt;/h6&gt;

&lt;p&gt;When it comes to the situation that you fork a repository and you contribute to
it, then it could happen that your fork and the upstream are not in sync
anymore. So the goal is, that you get a current version of the upstream
repository and then you can merge the new changes into your fork, right? Okay!
Let‚Äôs get started.&lt;/p&gt;

&lt;h3 id=&quot;1-create-a-fork&quot;&gt;1. Create a Fork&lt;/h3&gt;

&lt;p&gt;A fork &lt;a href=&quot;https://help.github.com/articles/fork-a-repo/&quot;&gt;is a copy of someone others repository in your
account&lt;/a&gt;, which can be an
independent development project, This tutorial is for GitHub but works for any
other git hosted platform, like Bitbucket or GitLab.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/fork_button.jpg&quot;&gt;&lt;img src=&quot;/assets/img/fork_button.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-clone-the-fork&quot;&gt;2. Clone the fork&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone git@github.com:your-user/your-fork.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-add-the-upstream&quot;&gt;3. Add the upstream&lt;/h3&gt;

&lt;p&gt;Now we should add the ‚Äúupstream‚Äù branch. You can call it however you want.
Upstream is just best practice.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote add upstream git://github.com/original-author/original-project.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you now have a look at your remote urls, you should see the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git remote -v
origin https://github.com/your-user/your-fork (fetch)
origin https://github.com/your-user/your-fork (push)
upstream https://github.com/original-author/original-project (fetch)
upstream https://github.com/original-author/original-project (push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-keep-the-upstream-updated&quot;&gt;4. Keep the upstream updated&lt;/h3&gt;

&lt;p&gt;Now as we have both urls tracked, we can update the two sources independently. With&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git fetch upstream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-mergerebase-your-work-with-the-upstream-repository&quot;&gt;5. Merge/Rebase your work with the upstream repository&lt;/h3&gt;

&lt;p&gt;Then you can just merge the changes.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git merge upstream/master master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With that, you merge the latest changes from the master branch of the upstream
into your local master branch. If you like, you can also use git pull, which is
nothing else than fetching and merging in one step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro Tip:&lt;/strong&gt; The best way in my eyes is, to rebase because that fetches the
latest changes of the upstream branch and replay your work on top of that. Here
is, how it works:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git rebase upstream/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-push-your-changes-online&quot;&gt;6. Push your changes online&lt;/h3&gt;

&lt;p&gt;Finally, you can push your changes so others can benefit&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy coding, üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>carteras fuera de l√≠nea para criptomonedas</title>
   <link href="http://javier.io/blog/es/2018/11/15/carteras-fuera-de-linea-para-criptomonedas.html"/>
   <updated>2018-11-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2018/11/15/carteras-fuera-de-linea-para-criptomonedas</id>
   <content type="html">&lt;h2 id=&quot;carteras-fuera-de-l√≠nea-para-criptomonedas&quot;&gt;carteras fuera de l√≠nea para criptomonedas&lt;/h2&gt;

&lt;h6 id=&quot;15-nov-2018&quot;&gt;15 Nov 2018&lt;/h6&gt;

&lt;p&gt;Las carteras para criptomonedas son piezas de software que dan acceso a los
&lt;a href=&quot;https://es.wikipedia.org/wiki/Cadena_de_bloques&quot;&gt;blockchains&lt;/a&gt; de Bitcoin,
Ethereum, etc, &lt;strong&gt;cada criptomoneda tiene su propia cartera&lt;/strong&gt;, asi una cartera
para Bitcoin solo funcionar√° para ese protocolo. Y si se tienen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;N&lt;/code&gt;
criptomonedas, se requeriran la misma cantidad de carteras para administrar los
fondos.&lt;/p&gt;

&lt;p&gt;Tambi√©n existen programas que pueden acceder a varios protocolos al mismo
tiempo, las multicarteras, sin embargo esos programas estan desarrollados por
terceras partes, por lo que tienden a ser menos confiables, por tal raz√≥n en
este art√≠culo se har√° enf√°sis en la utilizaci√≥n de las carteras oficiales.&lt;/p&gt;

&lt;p&gt;Para usar una cartera se requieren dos cosas, una clave p√∫blica y una privada.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clave p√∫blica&lt;/strong&gt;: √©sta es la direcci√≥n de la cartera.  Es muy parecido a un
n√∫mero de cuenta bancaria, ya que s√≥lo se puede usar para enviar dinero a una
cuenta.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clave privada&lt;/strong&gt;: √©sta es la informaci√≥n que permite controlar los fondos de
la cuenta. Por lo cual debe mantenerse 100% secreta y segura, &lt;strong&gt;si se pierde
esta clave se pierden los fondos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OJO&lt;/strong&gt;: Una llave p√∫blica puede obtenerse a partir de una llave privada, pero
al rev√©s no. Por lo que en teor√≠a s√≥lo se podr√≠a almacenar la llave privada.
Sin embargo, la llave p√∫blica a menudo es √∫til para solicitar fondos a terceros
sin arriesgarse a comprometer la llave privada, por lo que es conveniente tener
ambas a la mano.&lt;/p&gt;

&lt;p&gt;Cuando los fondos se mantienen en un exchange, como &lt;a href=&quot;&quot;&gt;bitso&lt;/a&gt;, &lt;a href=&quot;&quot;&gt;binance&lt;/a&gt;,
etc, dichos sitios son los √∫nicos que conocen ambas llaves, de ahi que puedan
comprometerse los recursos si el sitio es hackeado, o que el exchange pueda
tomar decisiones unilaterales para congelar cuentas o mantener los recursos.&lt;/p&gt;

&lt;p&gt;La razon anterior es suficiente para tener los fondos en carteras
independientes cuando se trate de sumas considerables.&lt;/p&gt;

&lt;h3 id=&quot;wallet&quot;&gt;wallet&lt;/h3&gt;

&lt;p&gt;Debido a mi p√©rfil t√©cnico y a la variedad de criptomonedas que manejo, he
generado un script que me permite interactuar con las carteras de varios
protocolos de forma conveniente, incluidos, BTC, ETH, XRP, LTC, NEO, etc. As√≠
que ser√° el m√©todo que describa. &lt;strong&gt;OJO: A menos que me conozca personalmente,
sugiero fuertemente que revise el c√≥digo fuente a detalle para determinar su
confiabilidad.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget https://raw.githubusercontent.com/javier-lopez/learn/master/sh/tools/wallet
$ chmod +x wallet &amp;amp;&amp;amp; sudo mv wallet /usr/bin/wallet
$ wallet -h
Usage: wallet ARCHIVE
Dockerized [BTC|BCC|BTCP|LTC|NEO|ETH|XRP|ADA] thin client launcher.

Options:

  -U, --update    update this program to latest version
  -V, --version   display version
  -h, --help      show this message and exit

Examples:

  $ wallet Electrum-3.2.2.tar.gz            #BTC
  $ wallet Electrum-LTC-3.1.3.1.tar.gz      #LTC
  $ wallet Electrum-BTCP-1.1.1.tar.gz       #BTCP
  $ wallet ElectronCash-3.3.1.tar.gz        #BCC
  $ wallet Neon-0.2.6-x86_64.Linux.AppImage #NEO
  $ wallet etherwallet-v3.21.03.zip         #ETH
  $ wallet minimalist-ripple-client.html    #XRP
  $ wallet daedalus-0.11.0-cardano.exe      #ADA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;El script anterior requiere &lt;a href=&quot;https://es.wikipedia.org/wiki/Ubuntu&quot;&gt;Ubuntu Linux&lt;/a&gt;,
&lt;a href=&quot;https://es.wikipedia.org/wiki/Docker_(software)&quot;&gt;Docker&lt;/a&gt; y la cartera del
protocolo con el que se desee interactuar, por ejemplo para Bitcoin se
requerir√° &lt;a href=&quot;https://electrum.org&quot;&gt;Electrum-3.2.2.tar.gz&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bitcoin-btc&quot;&gt;Bitcoin, BTC&lt;/h3&gt;

&lt;p&gt;Teniendo el script y la cartera, se puede comenzar a interactuar con el
blockchain, esto generalmente se hace para dos cosas, generar nuevas
cuentas, o gestionar existentes.&lt;/p&gt;

&lt;h2 id=&quot;generar-nueva-cuenta&quot;&gt;Generar nueva cuenta&lt;/h2&gt;

&lt;p&gt;Cada vez que se crea una nueva cuenta, en realidad se espera generar un par de
llaves (p√∫blica/privada) de dicha criptomoneda, por lo que este ser√°n los datos
que estaremos b√∫scando y almacenando. Para lanzar la cartera de BTC, se
ejecuta:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wallet Electrum-3.2.2.tar.gz #BTC
Verify the archive before continuing!!!

SHA256: 69cc3eaef8cc88e92730f3f38850a83e66ffd51d9aa26364f35fd45d1cedaabb
SHA512: 32c4a24c2d3e2e38b9d66f6102176533a991b1c1fd25173bcd3bdd...3c87f15

Waiting 7 seconds.., press Ctrl-C to cancel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Es muy importante verificar que las sumatorias concuerden con las especificadas
por el proyecto (SHA256/SHA512), de lo contrario, esto indicar√≠a modificaciones
(generalmente maliciosas) en los binarios.&lt;/p&gt;

&lt;p&gt;La primera vez que se ejecute el script, se generar√° un entorno seguro /
reutilizable que permitir√° lanzar las carteras soportadas. Este proceso puede
demorar hasta un par de hrs dependiendo la velocidad de internet, y s√≥lo se
hace una vez.&lt;/p&gt;

&lt;p&gt;Verificados los binarios se muestra la interfaz inicial.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-1.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Las primeras pantallas muestran opciones de conexi√≥n y preferencias que
requeririan sus propios art√≠culos, por el momento utilizaremos las opciones por
defecto para hacer el proceso tan r√°pido y eficiente como sea posible.&lt;/p&gt;

&lt;p&gt;En la primera pantalla se selecciona &lt;strong&gt;Auto connect&lt;/strong&gt;, y se da &lt;strong&gt;siguiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-2.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En la segunda se pregunta por la ubicaci√≥n de los datos de la cartera, se dejar√°
en &lt;strong&gt;default_wallet&lt;/strong&gt; y se da &lt;strong&gt;siguiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-3.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-3.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En la tercera, se pregunta por el tipo de cartera, la cartera est√°ndar estar√°
bien, se da &lt;strong&gt;siguiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-4.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-4.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ahora se llega a la parte donde se elige si se desea generar una nueva cuenta o
abrir una existente. Para abrir una nueva cuenta se selecciona &lt;strong&gt;Create a new seed&lt;/strong&gt;
y se da &lt;strong&gt;siguiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-5.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-5.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se selecciona el formato de las llaves , &lt;strong&gt;standard&lt;/strong&gt; y se da &lt;strong&gt;siguiente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-6.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-6.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ahora la cartera genera la &lt;strong&gt;llave privada&lt;/strong&gt;, &lt;strong&gt;OJO&lt;/strong&gt;, hay que tener mucho
cuidado con este dato, hay que mantenerlo privado y guardarlo en un lugar
seguro. Si se pierde u olvida los fondos se vuelven irrecuperables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-7.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-7.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para asegurarse que el dato ha sido almacenado, en la siguiente
pantalla se pregunta por la llave privada.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-8.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-8.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ahora, se pregunta por una contrase√±a para cifrar de manera interna la
informaci√≥n recien generada, debido a la forma en que se abre la cartera no es
necesario establecer una, el entorno elimina los archivos temporales al
finalizar la sesi√≥n.&lt;/p&gt;

&lt;p&gt;En su lugar, sera pertinente almacenar la &lt;strong&gt;llave privada&lt;/strong&gt; en un archivo
cifrado y mantener ese archivo en un lugar seguro. Personalmente mantengo mis
llaves privadas en un archivo .txt y lo cifro con
&lt;a href=&quot;https://es.wikipedia.org/wiki/GNU_Privacy_Guard&quot;&gt;GPG&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-9.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-9.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finalmente ha llegado el momento de interactuar con la nueva cuenta, desde esta
interfaz se puede consultar el saldo, enviar y recibir bitcoins. Para ver la llave
p√∫blica se va a la pesta√±a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;recibir&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-9.1.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-9.1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Listo!, ahora se tiene una nueva cuenta BTC.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Llave p√∫blica: 1JTg8e3yfCBbk22...
Llave privada: hub leopard broken neutral trash ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gestionar-cuenta-existente&quot;&gt;Gestionar cuenta existente&lt;/h2&gt;

&lt;p&gt;Si ya se cuenta con una llave privada anterior (la frase de 12 palabras) se
continua desde el 4to paso y esta vez se selecciona &lt;strong&gt;I already have a seed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-10.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-10.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se introduce la llave privada y se da &lt;strong&gt;siguiente&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-11.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-11.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se preguntar√° por una contrase√±a para cifrar los datos temporales, no es
necesario, puesto que el script eliminar√° esos datos al cerrar la cartera. Se
da &lt;strong&gt;siguiente&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-12.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-12.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ya se puede interactuar con la cuenta para enviar o recibir BTC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-btc-13.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-btc-13.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;neo&quot;&gt;Neo&lt;/h3&gt;

&lt;p&gt;El proceso es similar para otra carteras, en cada caso, solo variar√° la
cartera, y la interfaz gr√°fica, veamos el caso de NEO.&lt;/p&gt;

&lt;h2 id=&quot;generar-nueva-cuenta-1&quot;&gt;Generar nueva cuenta&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wallet Neon-0.2.6-x86_64.Linux.AppImage

Verify the archive before continuing!!!

SHA256: 78276848a23d89db4d56965d94784c710d4281ca8085cfd0644644e08d1074bf
SHA512: 3bf87818885128ad74cd018fd2e437e32f274a5974b473b74bad84...9b5c548
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Despu√©s de verificar las sumatorias aparece la interfaz gr√°fica.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-1.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aunque luce diferente, en realidad provee las mismas opciones. Para generar una
nueva cuenta se selecciona &lt;strong&gt;Create a new wallet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-2.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La cartera de NEO nos obliga a especificar una contrase√±a para cifrar los datos
temporales de la cartera, pero esa contrase√±a no es importante recordarla, se
puede poner una temporal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-3.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-3.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Una vez hecho, se proveen las llaves p√∫blicas y privadas.&lt;/p&gt;

&lt;p&gt;Listo!, ahora tambi√©n se tiene una nueva cuenta NEO.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Llave p√∫blica: AaUZif7n6FiVPyH...
Llave privada: KwuHYFeuJucZz94KanqaqaRkEi71mRdQbPZ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gestionar-cuenta-existente-1&quot;&gt;Gestionar cuenta existente&lt;/h2&gt;

&lt;p&gt;Si ya se cuenta con una llave privada de NEO anterior se selecciona la opci√≥n
&lt;strong&gt;Login using a private key&lt;/strong&gt; en el men√∫ principal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-1.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se introduce la clave y se hace clic en &lt;strong&gt;Login&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-10.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-10.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Listo, ahora se pueden enviar y recibir Neo‚Äôs y criptomonedas compatibles, como
GAS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/wallet-neo-11.png&quot;&gt;&lt;img src=&quot;/assets/img/wallet-neo-11.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Listo, feliz manejo de sus finanzas üòã.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/wallet&quot;&gt;https://github.com/javier-lopez/learn/blob/master/sh/tools/wallet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>say hi to react through docker integration</title>
   <link href="http://javier.io/blog/en/2018/11/10/say-hi-to-react-through-docker-integration.html"/>
   <updated>2018-11-10T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/11/10/say-hi-to-react-through-docker-integration</id>
   <content type="html">&lt;h2 id=&quot;say-hi-to-react-through-docker-integration&quot;&gt;say hi to react through docker integration&lt;/h2&gt;

&lt;h6 id=&quot;10-nov-2018&quot;&gt;10 Nov 2018&lt;/h6&gt;

&lt;p&gt;I‚Äôve started learning &lt;a href=&quot;https://reactjs.org/&quot;&gt;react&lt;/a&gt; and there is no way I
install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm/yarn/create-react-app&lt;/code&gt; or any non sense just to develop single
pages.&lt;/p&gt;

&lt;p&gt;Therefore here are some instructions to encapsulate everything within docker
containers.&lt;/p&gt;

&lt;h3 id=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/h3&gt;

&lt;p&gt;Being react the complex stack of software it‚Äôs, it requires &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react*&lt;/code&gt;
scripts to bootstrap projects. Therefore the first step will be to create a
minimal container with such tools:&lt;/p&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:alpine
RUN yarn global add create-react-app create-react-native-app react-native-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let‚Äôs call this container &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bootstrap-react&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ docker build . -t bootstrap-react
&lt;/pre&gt;

&lt;p&gt;Then we can bootstrap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;react/react-native&lt;/code&gt; projects as usual:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ docker run -it --rm --user &quot;$(id -u):$(id -g)&quot; \
      -v &quot;${PWD}&quot;:/usr/src/app -w /usr/src/app   \
      bootstrap-react                            \
      create-react-app my-new-react-project
&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-new-react-project&lt;/code&gt; folder contains a bunch of files required to start
hacking away:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tree my-new-react-project/ | head
‚î¨
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ node_modules
‚îÇ   ‚îú‚îÄ‚îÄ abab
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ CHANGELOG.md
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ public
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ App.css
    ‚îú‚îÄ‚îÄ App.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dockerizing-new-project&quot;&gt;Dockerizing new project&lt;/h3&gt;

&lt;p&gt;Now, wouldn‚Äôt be cool if every person could replicate the project with a single
step?, let‚Äôs add some more magic.&lt;/p&gt;

&lt;h2 id=&quot;docker-composeyml&quot;&gt;docker-compose.yml&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '3.4'

services:
  app:
    image: node:alpine
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c &quot;yarn &amp;amp;&amp;amp; yarn start&quot;
    ports:
      - &quot;3000:3000&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it!, now it can be launched and accessed through
&lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker-compose up
app_1  | You can now view my-new-react-project in the browser.
app_1  |
app_1  |   Local:            http://localhost:3000/
app_1  |   On Your Network:  http://172.18.0.2:3000/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/react.png&quot;&gt;&lt;img src=&quot;/assets/img/react.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sweet!, the autoreloading is working, so we can start modifying
files and the changes will show up instantly.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vim src/App.js
#some changes later ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/react-hello-world.png&quot;&gt;&lt;img src=&quot;/assets/img/react-hello-world.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you enjoyed the process but still don‚Äôt want to go thought all the steps,
feel free to grab the &lt;a href=&quot;https://github.com/javier-lopez/docker-react-hello-world&quot;&gt;docker-react-hello-world&lt;/a&gt;
template as your starting point.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy coding, üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>removing passwords from git repositories</title>
   <link href="http://javier.io/blog/en/2018/10/04/remove-passwords-from-git-repository.html"/>
   <updated>2018-10-04T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/10/04/remove-passwords-from-git-repository</id>
   <content type="html">&lt;h2 id=&quot;removing-passwords-from-git-repositories&quot;&gt;removing passwords from git repositories&lt;/h2&gt;

&lt;h6 id=&quot;04-oct-2018&quot;&gt;04 Oct 2018&lt;/h6&gt;

&lt;p&gt;Here‚Äôs how to remove a password from any file, in all revisions, in a git repository:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git filter-branch --tree-filter \
    &quot;find . -type f -exec sed -i -e 's/password/XXX/g' {} \;&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another handy one, deleting all the lines containing &lt;strong&gt;word&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git filter-branch --tree-filter \
    &quot;find . -type f -exec sed -i -e '/word/d' {} \;&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, the classic remove file with sensitive data:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git filter-branch --force --index-filter \
    'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' \
    --prune-empty --tag-name-filter cat -- --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, to force push your changes to a remote repository:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy safe coding, üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.davidverhasselt.com/git-how-to-remove-your-password-from-a-repository/&quot;&gt;http://www.davidverhasselt.com/git-how-to-remove-your-password-from-a-repository/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>package python scripts and dependencies in single files with pex</title>
   <link href="http://javier.io/blog/en/2018/10/02/package-python-script-and-dependencies-in-single-file-with-pex.html"/>
   <updated>2018-10-02T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/10/02/package-python-script-and-dependencies-in-single-file-with-pex</id>
   <content type="html">&lt;h2 id=&quot;package-python-scripts-and-dependencies-in-single-files-with-pex&quot;&gt;package python scripts and dependencies in single files with pex&lt;/h2&gt;

&lt;h6 id=&quot;02-oct-2018&quot;&gt;02 Oct 2018&lt;/h6&gt;

&lt;p&gt;So you want to create a pex that packages your script and its dependencies? Ok,
first to make our script! call it &lt;strong&gt;my-script.py&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import requests

if __name__ == '__main__':
  req = requests.get(&quot;https://raw.githubusercontent.com/pantsbuild/pex/master/README.rst&quot;)
  print req.text.split(&quot;\n&quot;)[0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, it‚Äôs time to package it!:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pex -o my-script.pex -D . -r requirements.txt -e my-script
  my-script.pex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done, but wait, are you too lazy to even download pex/pip?, try docker:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#FROM python:3.6.4
FROM ubuntu:16.04

RUN  apt-get update &amp;amp;&amp;amp; apt-get install -y libev-dev python-pip

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY requirements.txt /usr/src/app/
RUN  pip install --no-cache-dir -r requirements.txt

COPY . /usr/src/app

CMD [ &quot;python&quot;, &quot;my-script.py&quot; ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker build -t pex-builder .
$ docker run -v &quot;$PWD:/usr/src/app&quot; pex-builder \
    pex -o my-script.pex -D . -r requirements.txt -e my-script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done, now we have a (relative) portable way of distributing and running our scripts:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./my-script.pex
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy packaging üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pither.com/simon/blog/2018/09/18/how-build-portable-executable-single-python-script&quot;&gt;https://www.pither.com/simon/blog/2018/09/18/how-build-portable-executable-single-python-script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>minos, a tiling wm linux distribution</title>
   <link href="http://javier.io/blog/en/2018/08/22/minos-a-tiling-wm-linux-distro.html"/>
   <updated>2018-08-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/08/22/minos-a-tiling-wm-linux-distro</id>
   <content type="html">&lt;h2 id=&quot;minos-a-tiling-wm-linux-distribution&quot;&gt;minos, a tiling wm linux distribution&lt;/h2&gt;

&lt;h6 id=&quot;22-aug-2018&quot;&gt;22 Aug 2018&lt;/h6&gt;

&lt;p&gt;I‚Äôve been working in my spare time in a yet another Linux respin for the last
7-8 years and I thought I better write something about it so my co-workers and
friends have a better time getting started.&lt;/p&gt;

&lt;h3 id=&quot;about&quot;&gt;About&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/minos-org/&quot;&gt;Minos&lt;/a&gt; is a personal effort to get a stable,
performant and productive Linux system for power user/dev roles.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ Based on Ubuntu LTS releases with BedRock Linux support on its way
    ‚ñ∏ 16.04 / 18.04 / 20.04
‚ñ∏ Tiling window manager, i3wm + patches
‚ñ∏ Full battery cli workflow, urxvt, tmux, vim, wicd, shundle, ...
‚ñ∏ Non-intrusive and fast dmenu based launchers for sessions, process
  management, virtualization, etc.
‚ñ∏ Handpicked minimal yet powerful apps for common tasks:
    ‚ñ∏ file manager     -  pcmanfm     | login screen -  slim
    ‚ñ∏ image viewing    -  feh, sxiv   | pdf reader   - zathura
    ‚ñ∏ music indexing   -  mpd         | video player - mplayer2, umplayer
    ‚ñ∏ network manager  -  wicd-curses | email client - mutt
    ‚ñ∏ ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/minos-movie.png&quot;&gt;&lt;img src=&quot;/assets/img/minos-movie.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;principles&quot;&gt;Principles&lt;/h3&gt;

&lt;p&gt;In order to achieve its goal, minos design is lead by:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Minimalism ‚Üí use as few elements as possible but not less
Coherence  ‚Üí based on modularity and composition, elements relate to each other
Stability  ‚Üí incremental over revolutionary
Control    ‚Üí extensive configuration options
Pluggable  ‚Üí plugin based components
Beauty     ‚Üí subjective, but right now mostly black =P
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There exist two versions of the system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Core: X less environment, ideal for servers.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Desktop: Graphic tiling wm environment for laptops/workstations.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;h4 id=&quot;ubuntu-lts-based-distro&quot;&gt;Ubuntu LTS based distro&lt;/h4&gt;

&lt;p&gt;On any Ubuntu LTS release add the Minos repository:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:minos-archive/main
$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And install the core or/and desktop metapackages:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install -y minos-core
$ sudo apt-get install -y minos-desktop #includes minos-core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or run the &lt;a href=&quot;http://minos.io/s&quot;&gt;http://minos.io/s&lt;/a&gt; installer:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sh &amp;lt;(wget -q -O- minos.io/s) core
$ sh &amp;lt;(wget -q -O- minos.io/s) desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;live-ubuntu-lts-based-distro&quot;&gt;Live Ubuntu LTS based distro&lt;/h4&gt;

&lt;p&gt;From any [L/X/K]Ubuntu live usb run the &lt;a href=&quot;http://minos.io/s&quot;&gt;http://minos.io/s&lt;/a&gt;
installer:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sh &amp;lt;(wget -q -O- minos.io/s) live core    /dev/sdX username passwd [/dev/sdaY]
$ sh &amp;lt;(wget -q -O- minos.io/s) live desktop /dev/sdX username passwd [/dev/sdaY]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/dev/sdX ‚Üí / mount point
username ‚Üí admin minos user
passwd   ‚Üí admin minos user password

/dev/sdY ‚Üí /home mount point   (optional)
--release  [16.04|18.04|20.04] (optional)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;vagrant&quot;&gt;Vagrant&lt;/h4&gt;

&lt;p&gt;Minos is also available as portable VirtualBox images:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vagrant init minos/core-20.04    &amp;amp;&amp;amp; vagrant up
$ vagrant init minos/desktop-20.04 &amp;amp;&amp;amp; vagrant up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additional boxes are located at
&lt;a href=&quot;https://app.vagrantup.com/minos&quot;&gt;https://app.vagrantup.com/minos&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;getting-started&quot;&gt;Getting started&lt;/h3&gt;

&lt;h4 id=&quot;aptdpkg&quot;&gt;apt/dpkg&lt;/h4&gt;

&lt;p&gt;Minos is based on Debian/Ubuntu, as such, it uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt/dpkg&lt;/code&gt; tools to
manage/install software, some of the configuration changes include:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ Recommend and suggested packages[0] are disabled by default. Use
  ‚Üí $ sudo dpkg-reconfigure minos-core-settings #to change it

‚ñ∏ shundle/aliazator add install, purge, remove, update, upgrade, aliases:
  ‚Üí $ type install
  &amp;gt; install is aliased to `sudo apt-get install --no-install-recommends'

  * Use:
  ‚Üí $ aliazator [enable|disable] apt-get #to modify this behavior

‚ñ∏ eix is provided as an alternative apt-get/apt/aptitude interface
  ‚Üí $ eix -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Desktop&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ Deb packages are cached and shared over avahi (zeroconf)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.debian.org/doc/manuals/debian-faq/ch-pkg_basics.en.html#s-depends&quot;&gt;https://www.debian.org/doc/manuals/debian-faq/ch-pkg_basics.en.html#s-depends&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.unix-ag.uni-kl.de/~bloch/acng/&quot;&gt;https://www.unix-ag.uni-kl.de/~bloch/acng/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;static-get&quot;&gt;static-get&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/minos-org/minos-static&quot;&gt;static-get&lt;/a&gt; is included as an
alternative installation medium allowing to fetch statically linked Linux
binaries.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ Search tmux available versions
  ‚Üí $ static-get -s tmux
    &amp;gt; tmux-1.9a-1.tar.xz:8ec9d37183d48d3e171e89b1dae6e212a5918262d10
    &amp;gt; tmux-2.1-1.tar.xz:8172e0f2b39818ee747fa5b445a0a69342c11d1afa72
    &amp;gt; tmux-2.2-1.tar.xz:f499f6e9368a5022f45b726759b588e52b16442ae2f3

‚ñ∏ Download and extract the specified package
  ‚Üí $ static-get -x tmux-2.2
    &amp;gt; tmux-2.2-1.tar.xz
    &amp;gt; tmux-2.2-1/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;shell--shundle&quot;&gt;shell / shundle&lt;/h4&gt;

&lt;p&gt;The default bash editing mode is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt; with some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;emacs&lt;/code&gt; exceptions
meaning than common shortcuts like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Ctrl-l&amp;gt; (clear screen)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Ctrl-r&amp;gt;
(reverse cmd search)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Ctrl-a&amp;gt;/&amp;lt;Ctrl-e&amp;gt; (star/beginning sentence)&lt;/code&gt; work
the same while vi keybindings are used for all other actions. One of the
most powerful characteristics of this mode are text objects.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ text objects:
  ‚Üí $ echo &quot;text object&quot; #pressing ci&quot; while in the 'text' word results in
  ‚Üí $ echo &quot;&quot; #removing the inner &quot; characters
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Math operations are recognized:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ examples include: +, -, *, /, %
  ‚Üí $ 5 + 5
    &amp;gt; 10
  ‚Üí $ 7 \* 2.3
    &amp;gt; 16.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Search and other common actions are integrated within the shell:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ open the default web browser
    ‚Üí $ 1999, binary finary :google

‚ñ∏ or get back results from cli utils who output to console directly
  ‚Üí $ howdoi format date bash
    &amp;gt; today=`date +%Y-%m-%d.%H:%M:%S`
  ‚Üí $ translate -en-pt 'deleted code is debugged code'
    &amp;gt; C√≥digo eliminado √© c√≥digo depurado

‚ñ∏ open resources by its name/suffix or by using the `open` launcher
  ‚Üí $ /path/to/image.png
  ‚Üí $ open https://wikipedia.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Autocd, auto ls, and directory indexing are enabled for faster jumping between
directories:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ create and jump in one cmd
  ‚Üí $ mkcd ~/a/long/path/including/a/directory/

‚ñ∏ change directories without requiring cd
  ‚Üí $ ~/a/long/path/including/a/

‚ñ∏ index directory paths, see `man wcd`
  ‚Üí $ update-cd
  ‚Üí $ cd including #go to ~/a/long/path/including/

‚ñ∏ backward pwd search for normal and versioned projects, see `command -v ,,,`
  ‚Üí $ ,, long #go to ~/a/long
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Desktop&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ &amp;lt;Alt-Esc&amp;gt; is mapped to `dmenu-launcher` which supports the above
  attributes plus clipboard integration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to provide additional yet optional characteristics, plugins based
components are offered, &lt;a href=&quot;https://github.com/javier-lopez/shundle&quot;&gt;shundle&lt;/a&gt; is
the mechanism for which they‚Äôre managed, alternatives include
&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;oh-my-zsh&lt;/a&gt; /
&lt;a href=&quot;https://github.com/sorin-ionescu/prezto&quot;&gt;prezto&lt;/a&gt; /
&lt;a href=&quot;https://github.com/Bash-it/bash-it&quot;&gt;bash-it&lt;/a&gt;, etc. Shundle allows installing
scripts/modules which enrich the shell environment with sane defaults, aliases,
functions and prompt themes.&lt;/p&gt;

&lt;p&gt;By default the following plugins are enabled (&lt;strong&gt;~/.profile.d/shundle.sh&lt;/strong&gt;):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ aliazator: An aliases manager, providing hundred of aliases for common
             commands, eg: apt-get, git, ssh, sudo, wget, vim, etc.

‚ñ∏ autocd: Current directory autosaving (pwd), allows external applications
          start &quot;from here&quot;, used for new urxvt/tmux instances.

‚ñ∏ colorize: Provides prompt, X resources and less/grep/ls themes.

‚ñ∏ eternalize: Store an eternal history file across sessions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Shundle integration is provided by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-core-settings&lt;/code&gt; package, can be
disabled/enabled by running:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo dpkg-reconfigure minos-core-settings #shundle option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;tmux--tundle&quot;&gt;tmux / tundle&lt;/h4&gt;

&lt;p&gt;Simply speaking, &lt;a href=&quot;https://tmux.github.io/&quot;&gt;tmux&lt;/a&gt; acts as a window manager for
terminals, on Minos, it‚Äôs configured and installed by default in pair with
&lt;a href=&quot;https://mosh.org&quot;&gt;mosh&lt;/a&gt; to provide robust, secure and efficient access to
local and remote shell sessions.&lt;/p&gt;

&lt;p&gt;tmux is launched on every incoming ssh connection and within the scratchpad
window &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Windows&amp;gt;&amp;lt;Space&amp;gt;&lt;/code&gt; (desktop edition). Of course, it can also be
initialized manually.&lt;/p&gt;

&lt;p&gt;The default prefix sequence has been changed from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Ctrl-b&amp;gt;&lt;/code&gt; ‚Üí &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Ctrl-a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As with the bash interpreter, tmux can be customized/extended through
additional plugins, Minos includes
&lt;a href=&quot;https://github.com/javier-lopez/tundle&quot;&gt;tundle&lt;/a&gt; as the default tmux plugin
manager.&lt;/p&gt;

&lt;p&gt;By default the following plugins are enabled (&lt;strong&gt;~/.tmux.conf&lt;/strong&gt;):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ tmux-sensible: improve tmux defaults, including &amp;lt;Ctrl-a&amp;gt; as default
  prefix.

‚ñ∏ tmux-pain-control: rebinds default keybindings for pane management.

‚ñ∏ tmux-yank: tmux/system clipboard integration

‚ñ∏ tmux-resurrect: persists tmux environments across system restarts

‚ñ∏ tmux-copycat: enhances tmux search to find easily files, git hashes,
                urls, etc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tundle integration is provided by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-core-settings&lt;/code&gt; package, and can
enabled/disabled by running:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo dpkg-reconfigure minos-core-settings #tundle option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;vim--vundle&quot;&gt;vim / vundle&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt; is a highly configurable text editor mostly used by
power users and developers to create content at the speed of thought. On Minos,
it‚Äôs included by default with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim-nox&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim-gtk&lt;/code&gt; packages (the latter
only in the desktop version). &lt;a href=&quot;https://github.com/javier-lopez/vundle&quot;&gt;Vundle&lt;/a&gt;
has been adopted as the default vim plugin manager.&lt;/p&gt;

&lt;p&gt;A fair amount of vim plugins are included (~50), most of them are loaded on
demand or upon specific events in order to do not affect the editor startup
time. Some examples include:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bundle 'bogado/file-line'      &quot;jump to line on startup, eg: $ vim file:23
Bundle 'mhinz/vim-signify'     &quot;git|svn modification viewer
Bundle 'tpope/vim-surround'    &quot;text :h objects on steroids
Bundle 'msanders/snipmate.vim' &quot;snippet support
Bundle 'Shougo/neocomplcache'  &quot;autocompletion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vundle integration is provided by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-core-settings&lt;/code&gt; package, run
the following command to disable/enable it:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo dpkg-reconfigure minos-core-settings #vundle option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;minos-tools&quot;&gt;minos-tools&lt;/h4&gt;

&lt;p&gt;Additional wrappers and power user scripts (&amp;gt;100) are available through the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-core-tools&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-desktop-tools&lt;/code&gt; packages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ rm wrapper with nautilus/pcmanfm trash management integration
  ‚Üí $ mkdir ~/a/long/path/including/a/directory
  ‚Üí $ rm -r ~/a/long/path/including/a/directory
  ‚Üí $ rm -l a #outputs recoverable files matching the 'a' pattern
  ‚Üí $ rm -u a #recovers the files matching the 'a' pattern
  ‚Üí $ ls    ~/a/long/path/including/a/directory/

‚ñ∏ compress / extract wrappers to ease archive creation/decompression.
  ‚Üí $ touch a b c &amp;amp;&amp;amp; compress a b c abc.tar.gz
  ‚Üí $ rm -f a b c &amp;amp;&amp;amp; extract  abc.tar.gz

‚ñ∏ text / image pastebins
  ‚Üí $ cat ~/.bashrc | sprunge
    &amp;gt; http://sprunge.us/AYZC
  ‚Üí $ uimg image.png
    &amp;gt; http://i.imgur.com/KyoFMH9.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Desktop&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ dmenu-*       #dmenu based launchers, i3 window jumper,
                #process/session management, vbox/xrandr/mpd/ wrappers
‚ñ∏ watch-battery #battery notifier, suspend/hibernate the system if
                #no manual action is taken
‚ñ∏ player-ctrl   #control multimedia players, mpd/mplayer/spotify
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To get a full list of the included scripts run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ dpkg -L minos-core-tools minos-desktop-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;minos-config&quot;&gt;minos-config&lt;/h3&gt;

&lt;p&gt;Minos is commanded by configuration files, those determinate global settings
(eg, wallpaper, autostart, etc), post-installation hooks, etc:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- $HOME/.minos/config
- /etc/minos/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A simple ini like syntax is used, e.g.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/minos/config
    wallpaper /usr/share/minos/wallpapers/minos.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To look-up a value, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-config key&lt;/code&gt;, e.g:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ minos-config wallpaper
 /usr/share/minos/wallpapers/minos.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minos-config -h&lt;/code&gt; and
&lt;a href=&quot;http://minos.io/doc/config&quot;&gt;http://minos.io/doc/config&lt;/a&gt; for further details.&lt;/p&gt;

&lt;h3 id=&quot;development&quot;&gt;Development&lt;/h3&gt;

&lt;p&gt;Minos uses a Rolling Release over LTS cycle, meaning it pushes frequent and
small updates to LTS releases and doesn‚Äôt provide named releases by itself.&lt;/p&gt;

&lt;p&gt;There is a parity:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ 1 deb package =&amp;gt; 2 git repositories
               \
                \__  program src
                 \__ deb packaging
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which requires a package to compile correctly in all LTS supported releases
with the same deb code in order to be accepted, other Debian based distros
create different packaging code for every release, that‚Äôs unacceptable in Minos
due to the limited human resources and general waste it would be.&lt;/p&gt;

&lt;p&gt;Deb &lt;strong&gt;source files&lt;/strong&gt; are located at
&lt;a href=&quot;https://github.com/minos-org/&quot;&gt;https://github.com/minos-org/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;foo-program     (custom/freeze program)
foo-program-deb (deb packaging)
    debian
        rules
            get-orig-source target (must retrieve content)
    debian/README.source (step by step instructions to build package)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Deb &lt;strong&gt;binary packages&lt;/strong&gt; are located at
&lt;a href=&quot;https://launchpad.net/~minos-archive/+archive/main&quot;&gt;https://launchpad.net/~minos-archive/+archive/main&lt;/a&gt;,
and are created using daily recipes asociated to every source mirror.&lt;/p&gt;

&lt;p&gt;In certain ocasions, base repositories are modified to introduce changes or
delete problematic files, those changes are automatic and described at:
&lt;a href=&quot;https://github.com/minos-org/minos-sync&quot;&gt;https://github.com/minos-org/minos-sync&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;choosing-default-applications&quot;&gt;Choosing default applications&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚ñ∏ Default applications are selected with good documentation, flexibility,
configurability and as few dependencies as possible in mind.
‚ñ∏ Systems supporting composition/specialization are preferred over
generalization
‚ñ∏ Keyboard oriented applications are preferred over pointing interfaces
‚ñ∏ GUI programs are nice but rejected if they use ancient graphical
interfaces or use considerable resources.
‚ñ∏ When in doubt http://suckless.org/rocks provide additional hints about
how software is selected into the project
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;choosing-default-behavior&quot;&gt;Choosing default behavior&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ‚ñ∏ Toggle solutions are preferred over multichoice.
 ‚ñ∏ Use/Set vi like applications/settings are preferred
 ‚ñ∏ Defaults are configured with a focus in the out-of-the-box experience
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;roadmap&quot;&gt;Roadmap&lt;/h4&gt;

&lt;p&gt;Minos is built on top of the most popular Linux distribution system to get a
lot of free software and an easy integration with third-party providers. At the
time of writing this, that‚Äôs Ubuntu, however future development should be
towards a multi-channel system such as &lt;a href=&quot;http://subuser.org/&quot;&gt;SubUser&lt;/a&gt; or
&lt;a href=&quot;https://bedrocklinux.org/&quot;&gt;BedRock Linux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy tiling üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>disable broken touchpad device</title>
   <link href="http://javier.io/blog/en/2018/02/19/disable-broken-touchpad.html"/>
   <updated>2018-02-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/02/19/disable-broken-touchpad</id>
   <content type="html">&lt;h2 id=&quot;disable-broken-touchpad-device&quot;&gt;disable broken touchpad device&lt;/h2&gt;

&lt;h6 id=&quot;19-feb-2018&quot;&gt;19 Feb 2018&lt;/h6&gt;

&lt;p&gt;From time to time I accidentally drop liquids into my thinkpad laptop and the touchpad start behaving funny, when it happens I prefer to disable it completely for some hours/days until it gets fixed by itself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distro: Ubuntu 16.04&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;
$ xinput list
‚é° Virtual core pointer                id=2  [master pointer  (3)]
‚éú   ‚Ü≥ Virtual core XTEST pointer      id=4  [slave  pointer  (2)]
‚éú   ‚Ü≥ TPPS/2 IBM TrackPoint           id=12 [slave  pointer  (2)]
‚éú   ‚Ü≥ SynPS/2 Synaptics TouchPad      id=11 [slave  pointer  (2)] =&amp;gt; THIS ONE
‚é£ Virtual core keyboard               id=3  [master keyboard (2)]
    ‚Ü≥ Virtual core XTEST keyboard     id=5  [slave  keyboard (3)]
    ‚Ü≥ Power Button                    id=6  [slave  keyboard (3)]
    ‚Ü≥ Video Bus                       id=7  [slave  keyboard (3)]
    ‚Ü≥ Sleep Button                    id=8  [slave  keyboard (3)]
    ‚Ü≥ Integrated Camera: Integrated C id=9  [slave  keyboard (3)]
    ‚Ü≥ AT Translated Set 2 keyboard    id=10 [slave  keyboard (3)]
    ‚Ü≥ ThinkPad Extra Buttons          id=13 [slave  keyboard (3)]

$ xinput --disable 11
$ xinput --enable  11 #when the time comes
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy accidents üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://askubuntu.com/questions/65951/how-to-disable-the-touchpad&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>x509: certificate signed by unknown authority docker error</title>
   <link href="http://javier.io/blog/en/2018/02/07/x509-certificate-signed-by-unknown-authority-docker-error.html"/>
   <updated>2018-02-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2018/02/07/x509-certificate-signed-by-unknown-authority-docker-error</id>
   <content type="html">&lt;h2 id=&quot;x509-certificate-signed-by-unknown-authority-docker-error&quot;&gt;x509: certificate signed by unknown authority docker error&lt;/h2&gt;

&lt;h6 id=&quot;07-feb-2018&quot;&gt;07 Feb 2018&lt;/h6&gt;

&lt;p&gt;At work we use internal docker registers and from to time I encounter this error when trying to pull/push to https registers, so I‚Äôm leaving the procedure to add autosigned certificates for the future me and others.&lt;/p&gt;

&lt;p&gt;Distro: Ubuntu 16.04&lt;/p&gt;

&lt;p&gt;Docker: 17.12.0-ce, build c97c6d&lt;/p&gt;

&lt;pre&gt;
$ # export registry certificate
$ openssl s_client -showcerts -connect                \
    registry.example.com:443 &amp;lt;/dev/null 2&amp;gt;/dev/null | \
    openssl x509 -outform PEM &amp;gt; registry.example.com.crt
$ # add it globally
$ sudo mv registry.example.com.crt /usr/local/share/ca-certificates
$ # update global certificates definitions
$ sudo update-ca-certificates
$ # restart affected services
$ sudo systemctl daemon-reload
$ sudo systemctl restart docker
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy pulling/pushing üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>block ads in openwrt routers</title>
   <link href="http://javier.io/blog/en/2017/11/27/block-ads-in-openwrt.html"/>
   <updated>2017-11-27T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2017/11/27/block-ads-in-openwrt</id>
   <content type="html">&lt;h2 id=&quot;block-ads-in-openwrt-routers&quot;&gt;block ads in openwrt routers&lt;/h2&gt;

&lt;h6 id=&quot;27-nov-2017&quot;&gt;27 Nov 2017&lt;/h6&gt;

&lt;p&gt;In previous posts I wrote about how to &lt;a href=&quot;http://javier.io/blog/en/2017/11/26/block-youtube-in-openwrt.html&quot;&gt;block YouTube and other services by ip&lt;/a&gt;, this time I‚Äôll show how to do the same by dns, kind of adblock for openwrt.&lt;/p&gt;

&lt;p&gt;The target router is a &lt;a href=&quot;http://www.amazon.com/TP-LINK-TL-WDR4300-Wireless-Gigabit-300Mbps/dp/B0088CJT4U&quot;&gt;TP-Link N750&lt;/a&gt;, and I‚Äôm using the latest &lt;a href=&quot;http://downloads.openwrt.org/snapshots/trunk/ar71xx/&quot;&gt;trunk build&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/98.jpg&quot;&gt;&lt;img src=&quot;/assets/img/98.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since revision &lt;a href=&quot;https://dev.openwrt.org/changeset/39312/&quot;&gt;39312&lt;/a&gt; OpenWRT configures the dnsmasq service to read from &lt;strong&gt;/tmp/dnsmasq.d/&lt;/strong&gt;, so it‚Äôs easy to dump block list there and reload the dnsmasq service to block undesired domains.&lt;/p&gt;

&lt;pre&gt;
# wget http://rawgit.com/javier-lopez/learn/master/sh/is/adblockupdater-openwrt -O /usr/bin/adblockupdater-openwrt
# chmod +x /usr/bin/adblockupdater-openwrt
# adblockupdater-openwrt
Getting yoyo ad list...
Getting winhelp2002 ad list...
Getting adaway ad list...
Getting hosts-file ad list...
Getting malwaredomainlist ad list...
Getting adblock.gjtech ad list...
Failed to establish connection
Getting someone who cares ad list...
69191 ad domains blocked.
Everything fine, restarting dnsmasq to implement new serverlist...
&lt;/pre&gt;

&lt;p&gt;Add it to the cron job manager:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# crontab -e
0 0 */1 * * /usr/bin/adblockupdater.sh
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy blocking üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://homepage.ruhr-uni-bochum.de/Jan.Holthuis/misc/adblock-on-your-openwrt-router/&quot;&gt;Original blog post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>block youtube by IP in openwrt routers</title>
   <link href="http://javier.io/blog/en/2017/11/26/block-youtube-in-openwrt.html"/>
   <updated>2017-11-26T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2017/11/26/block-youtube-in-openwrt</id>
   <content type="html">&lt;h2 id=&quot;block-youtube-by-ip-in-openwrt-routers&quot;&gt;block youtube by IP in openwrt routers&lt;/h2&gt;

&lt;h6 id=&quot;26-nov-2017&quot;&gt;26 Nov 2017&lt;/h6&gt;

&lt;p&gt;In previous posts I wrote about how to install &lt;a href=&quot;http://javier.io/blog/en/2014/07/21/installing-openwrt-as-access-point.html&quot;&gt;openwrt as an access point&lt;/a&gt; or as a &lt;a href=&quot;http://javier.io/blog/en/2014/06/10/installing-openwrt-as-wireless-repeater.html&quot;&gt;wireless repeater&lt;/a&gt;, this time I‚Äôll show how to block youtube and other third party sites by ip. The procedure works in desktop / and mobile devices.&lt;/p&gt;

&lt;p&gt;The target router is a &lt;a href=&quot;http://www.amazon.com/TP-LINK-TL-WDR4300-Wireless-Gigabit-300Mbps/dp/B0088CJT4U&quot;&gt;TP-Link N750&lt;/a&gt;, and I‚Äôm using the latest &lt;a href=&quot;http://downloads.openwrt.org/snapshots/trunk/ar71xx/&quot;&gt;trunk build&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/98.jpg&quot;&gt;&lt;img src=&quot;/assets/img/98.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;OpenWRT uses &lt;a href=&quot;https://wiki.openwrt.org/doc/uci&quot;&gt;UCI&lt;/a&gt; to centralize configuration, firewall rules are located at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/etc/config/firewall&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to block sites by IP you‚Äôll need to modify such file appending the desired rules, eg. for blocking YouTube:&lt;/p&gt;

&lt;pre&gt;
config rule
	option name		Block-YouTube-187.189.89.77/16
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		187.189.89.77/16
	option target		REJECT

config rule
	option name		Block-YouTube-189.203.0.0/16
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		189.203.0.0/16
	option target		REJECT

config rule
	option name		Block-YouTube-64.18.0.0/20
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		64.18.0.0/20
	option target		REJECT

config rule
	option name		Block-YouTube-64.233.160.0/19
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		64.233.160.0/19
	option target		REJECT

config rule
	option name		Block-YouTube-66.102.0.0/20
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		66.102.0.0/20
	option target		REJECT

config rule
	option name		Block-YouTube-66.249.80.0/20
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		66.249.80.0/20
	option target		REJECT

config rule
	option name		Block-YouTube-72.14.192.0/18
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		72.14.192.0/18
	option target		REJECT

config rule
	option name		Block-YouTube-74.125.0.0/16
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		74.125.0.0/16
	option target		REJECT

config rule
	option name		Block-YouTube-173.194.0.0/16
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		173.194.0.0/16
	option target		REJECT

config rule
	option name		Block-YouTube-207.126.144.0/20
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		207.126.144.0/20
	option target		REJECT

config rule
	option name		Block-YouTube-209.85.128.0/17
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		209.85.128.0/17
	option target		REJECT

config rule
	option name		Block-YouTube-216.58.208.0/20
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		216.58.208.0/20
	option target		REJECT

config rule
	option name		Block-YouTube-216.239.32.0/19
	option src		lan
	option family		ipv4
	option proto		all
	option dest		wan
	option dest_ip		216.239.32.0/19
	option target		REJECT
&lt;/pre&gt;

&lt;p&gt;Ensure to reboot the firewall service to apply the changes:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# /etc/init.d/firewall restart
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy blocking üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/toh/tp-link/tl-wdr4300&quot;&gt;Tl-wdr4300 in OpenWRT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.openwrt.org/doc/uci/firewall&quot;&gt;OpenWRT Firewall Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/28797030/890858&quot;&gt;YouTube IP Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>installing openwrt as a dumb access point</title>
   <link href="http://javier.io/blog/en/2017/11/25/installing-openwrt-as-a-dumb-access-point.html"/>
   <updated>2017-11-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2017/11/25/installing-openwrt-as-a-dumb-access-point</id>
   <content type="html">&lt;h2 id=&quot;installing-openwrt-as-a-dumb-access-point&quot;&gt;installing openwrt as a dumb access point&lt;/h2&gt;

&lt;h6 id=&quot;25-nov-2017&quot;&gt;25 Nov 2017&lt;/h6&gt;

&lt;p&gt;In a previous post I wrote about how to use &lt;a href=&quot;http://javier.io/blog/en/2017/11/23/installing-openwrt-as-access-point.html&quot;&gt;openwrt as an independent access point&lt;/a&gt;, this time however I‚Äôll mention how to configure it to extend a network that already has a router with dhcp in place or where a subnet is not required / desired.&lt;/p&gt;

&lt;p&gt;The target device is a &lt;a href=&quot;http://www.amazon.com/TP-LINK-TL-WDR4300-Wireless-Gigabit-300Mbps/dp/B0088CJT4U&quot;&gt;TP-Link N750&lt;/a&gt;, and I‚Äôm using the latest &lt;a href=&quot;http://downloads.openwrt.org/releases/18.06.2/targets/ar71xx/generic/openwrt-18.06.2-ar71xx-generic-tl-wdr4300-v1-squashfs-factory.bin&quot;&gt;stable build&lt;/a&gt;, the installation process is pretty straight forward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/98.jpg&quot;&gt;&lt;img src=&quot;/assets/img/98.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/releases/18.06.2/targets/ar71xx/generic/openwrt-18.06.2-ar71xx-generic-tl-wdr4300-v1-squashfs-factory.bin
&lt;/pre&gt;

&lt;p&gt;Or, when there is a previous openwrt version already installed:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/releases/18.06.2/targets/ar71xx/generic/openwrt-18.06.2-ar71xx-generic-tl-wdr4300-v1-squashfs-sysupgrade.bin
&lt;/pre&gt;

&lt;p&gt;After completing the download, install it by going to the &lt;strong&gt;Firmware Upgrade&lt;/strong&gt; menu and selecting the openwrt firmware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/99.png&quot;&gt;&lt;img src=&quot;/assets/img/99.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The stable version already includes the &lt;a href=&quot;https://github.com/openwrt/luci&quot;&gt;luci web interface&lt;/a&gt;, so there is no need to install anything else.&lt;/p&gt;

&lt;h3 id=&quot;configuration-via-web-interface-luci&quot;&gt;Configuration via Web Interface LUCI&lt;/h3&gt;

&lt;p&gt;Unplug all but your own computer to the device and wait for a valid ip, by default in the range 192.168.1.X, connect to the router through the &lt;a href=&quot;http://192.168.1.1&quot;&gt;http://192.168.1.1&lt;/a&gt; address and select the &lt;strong&gt;LAN INTERFACE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Edit with a valid static IP within the range of your main router, eg, (if your router has IP 192.168.1.1, enter 192.168.1.2). Set DNS and gateway to point into your main router to enable internet access for the dumb AP itself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-dumb-ap-lan.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-dumb-ap-lan.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then scroll down and select the checkbox &lt;strong&gt;Ignore interface: Disable DHCP for this interface.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-dumb-ap-disable-dhcp.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-dumb-ap-disable-dhcp.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before applying the change prepare the ethernet wire, you‚Äôll have 30 seconds to connect it, request a new IP address and access the router web interface, otherwise it‚Äôll revert the change and you‚Äôll have to redo the configuration. Use a LAN/switch from your main router to a LAN/switch of your dumb AP, &lt;strong&gt;avoid the WAN/Internet ports&lt;/strong&gt;, click &lt;strong&gt;Save &amp;amp; Apply&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Access the dumb AP (on this example) through the &lt;a href=&quot;http://10.9.8.7&quot;&gt;http://10.9.8.7&lt;/a&gt; IP, and go to the &lt;strong&gt;Network ‚ñ∑ Interfaces&lt;/strong&gt; page for disabling the &lt;strong&gt;WAN&lt;/strong&gt; interfaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-dumb-ap-disable-wan-interfaces.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-dumb-ap-disable-wan-interfaces.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre almost done, as a final step, setup the wireless APs, go to &lt;strong&gt;Network ‚ñ∑ Wireless&lt;/strong&gt; section and configure as many as desired Access Points and link them to the &lt;strong&gt;LAN&lt;/strong&gt; &lt;strong&gt;Network&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-dumb-ap-wireless-details.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-dumb-ap-wireless-details.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-dumb-ap-wireless-general.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-dumb-ap-wireless-general.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs it!, enjoy your extended network ‚úå&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-user/network/wifi/dumbap&quot;&gt;https://openwrt.org/docs/guide-user/network/wifi/dumbap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>installing openwrt as an access point</title>
   <link href="http://javier.io/blog/en/2017/11/24/installing-openwrt-as-access-point.html"/>
   <updated>2017-11-24T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2017/11/24/installing-openwrt-as-access-point</id>
   <content type="html">&lt;h2 id=&quot;installing-openwrt-as-an-access-point&quot;&gt;installing openwrt as an access point&lt;/h2&gt;

&lt;h6 id=&quot;24-nov-2017&quot;&gt;24 Nov 2017&lt;/h6&gt;

&lt;p&gt;In previous post I wrote about how to use &lt;a href=&quot;http://javier.io/blog/en/2014/06/10/installing-openwrt-as-wireless-repeater.html&quot;&gt;openwrt as a wireless repeater&lt;/a&gt;, this time I‚Äôll use it as an independent access point with its own subnet, how practical!&lt;/p&gt;

&lt;p&gt;The target device is a &lt;a href=&quot;http://www.amazon.com/TP-LINK-TL-WDR4300-Wireless-Gigabit-300Mbps/dp/B0088CJT4U&quot;&gt;TP-Link N750&lt;/a&gt;, and I‚Äôm using the latest &lt;a href=&quot;http://downloads.openwrt.org/snapshots/trunk/ar71xx/&quot;&gt;trunk build&lt;/a&gt;, the installation process is pretty straigh forward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/98.jpg&quot;&gt;&lt;img src=&quot;/assets/img/98.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/snapshots/trunk/ar71xx/generic/openwrt-ar71xx-generic-tl-wdr4300-v1-squashfs-factory.bin
&lt;/pre&gt;

&lt;p&gt;Or, when there is a previous openwrt version installed:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/snapshots/trunk/ar71xx/generic/openwrt-ar71xx-generic-tl-wdr4300-v1-squashfs-sysupgrade.bin
&lt;/pre&gt;

&lt;p&gt;After completing the download, install it by going to the &lt;strong&gt;Firmware Upgrade&lt;/strong&gt; menu and selecting the openwrt firmware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/99.png&quot;&gt;&lt;img src=&quot;/assets/img/99.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Be aware that the trunk build is minimal, it doesn‚Äôt include the &lt;a href=&quot;https://github.com/openwrt/luci&quot;&gt;luci web interface&lt;/a&gt;, so it‚Äôs up to every person to decide if they want it or not.&lt;/p&gt;

&lt;p&gt;To install additional software connect to the device and share temporary your laptop/desktop internet&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# flush previous iptables rules
$ sudo iptables -F
$ sudo iptables -X
$ sudo iptables -t nat -F
$ sudo iptables -t nat -X
$ sudo iptables -t mangle -F
$ sudo iptables -t mangle -X
$ sudo iptables -P INPUT ACCEPT
$ sudo iptables -P FORWARD ACCEPT
$ sudo iptables -P OUTPUT ACCEPT
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# route laptop traffic through wlan0 (wireless) interface
$ sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
$ echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
$ while true; do sudo ifconfig eth0 192.168.1.2; sleep 1; done
$ telnet 192.168.1.1 #type &quot;passwd&quot; to set the root passwd
# be aware than in current openwrt releases telnet is no longer provided
# in those cases just skip this step
$ ssh root@192.168.1.1 #from other terminal window
openwrt # passwd #set the root passwd in case telnet service isn't available
openwrt # ifconfig br-lan 10.9.8.7
$ while true; do sudo ifconfig eth0 10.9.8.10; sleep 1; done #bypass networkmanager
$ ssh root@10.9.8.7
openwrt # route add default gw 10.9.8.10
openwrt # echo &quot;nameserver 8.8.8.8&quot; &amp;gt; /etc/resolv.conf
openwrt # opkg update
openwrt # opkg install luci
openwrt # /etc/init.d/uhttpd enable
openwrt # /etc/init.d/uhttpd start
&lt;/pre&gt;

&lt;p&gt;Upon completing the installation, go to &lt;a href=&quot;http://10.9.8.7&quot;&gt;http://10.9.8.7&lt;/a&gt; and reconfigure the LAN interface to make permanent the IP address:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Network ‚ñ∑ Interfaces ‚ñ∑ LAN&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/100.png&quot;&gt;&lt;img src=&quot;/assets/img/100.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create the Access Point (linked to the &lt;strong&gt;lan&lt;/strong&gt; interface)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Network ‚ñ∑ Wifi ‚ñ∑ Add&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-ap.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-ap.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Connect an ethernet cable to the WAN interface (on this device it‚Äôs a blue port behind) and enjoy!, happy browsing ‚úå&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/toh/tp-link/tl-wdr4300&quot;&gt;http://wiki.openwrt.org/toh/tp-link/tl-wdr4300&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>installing openwrt as a wireless repeater</title>
   <link href="http://javier.io/blog/en/2017/11/23/installing-openwrt-as-wireless-repeater.html"/>
   <updated>2017-11-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2017/11/23/installing-openwrt-as-wireless-repeater</id>
   <content type="html">&lt;h2 id=&quot;installing-openwrt-as-a-wireless-repeater&quot;&gt;installing openwrt as a wireless repeater&lt;/h2&gt;

&lt;h6 id=&quot;23-nov-2017&quot;&gt;23 Nov 2017&lt;/h6&gt;

&lt;p&gt;Last weekend I spend some time at my parents house and the occasion was appropriate to extend the wifi signal to cover the whole house, since I don‚Äôt intend to repeat the setup in the nearby future but would like still to have a reference, I decided to wrap it up in a post ‚ò∫&lt;/p&gt;

&lt;p&gt;First thing I did was to grab a TP-Link N750, formally a &lt;a href=&quot;http://www.amazon.com/TP-LINK-TL-WDR4300-Wireless-Gigabit-300Mbps/dp/B0088CJT4U&quot;&gt;TL-WDR4300 Version 1.7&lt;/a&gt; router for $60 at a nearby shop, I didn‚Äôt choose it for anything particular, but because of its nice antennas and dual-band support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/98.jpg&quot;&gt;&lt;img src=&quot;/assets/img/98.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Getting the latest openwrt &lt;a href=&quot;http://downloads.openwrt.org/snapshots/trunk/ar71xx/&quot;&gt;trunk build&lt;/a&gt; and install it on the device is pretty straight forward.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/snapshots/trunk/ar71xx/generic/openwrt-ar71xx-generic-tl-wdr4300-v1-squashfs-factory.bin
&lt;/pre&gt;

&lt;p&gt;Or to upgrade it from a previous release:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget downloads.openwrt.org/snapshots/trunk/ar71xx/generic/openwrt-ar71xx-generic-tl-wdr4300-v1-squashfs-sysupgrade.bin
&lt;/pre&gt;

&lt;p&gt;To flash the image go to the &lt;strong&gt;System Tools ‚ñ∑ Firmware Upgrade&lt;/strong&gt; menu&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/99.png&quot;&gt;&lt;img src=&quot;/assets/img/99.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Be aware that the trunk build is minimal, it doesn‚Äôt include the &lt;a href=&quot;luci.subsignal.org&quot;&gt;luci web interface&lt;/a&gt;, so it‚Äôs up to every person to decide if they want it or not.&lt;/p&gt;

&lt;p&gt;To install additional software connect to the device and share temporary your laptop/desktop internet&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# flush previous iptables rules
$ sudo iptables -F
$ sudo iptables -X
$ sudo iptables -t nat -F
$ sudo iptables -t nat -X
$ sudo iptables -t mangle -F
$ sudo iptables -t mangle -X
$ sudo iptables -P INPUT ACCEPT
$ sudo iptables -P FORWARD ACCEPT
$ sudo iptables -P OUTPUT ACCEPT
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# route laptop traffic through wlan0 (wireless) interface
$ sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
$ echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
$ while true; do sudo ifconfig eth0 192.168.1.2; sleep 1; done
$ telnet 192.168.1.1 #type &quot;passwd&quot; to set the root passwd
# be aware than in current openwrt releases telnet is no longer provided
# in those cases just skip this step
$ ssh root@192.168.1.1 #from other terminal window
openwrt # passwd #set the root passwd in case telnet service wasn't available
openwrt # ifconfig br-lan 10.9.8.7
$ while true; do sudo ifconfig eth0 10.9.8.10; sleep 1; done #bypass networkmanager
$ ssh root@10.9.8.7
openwrt # route add default gw 10.9.8.10
openwrt # echo &quot;nameserver 8.8.8.8&quot; &amp;gt; /etc/resolv.conf
openwrt # opkg update
openwrt # opkg install luci relayd
openwrt # /etc/init.d/uhttpd enable
openwrt # /etc/init.d/uhttpd start
openwrt # /etc/init.d/relayd enable
openwrt # /etc/init.d/relayd start
&lt;/pre&gt;

&lt;p&gt;Upon completing the installation, go to the web interface, &lt;a href=&quot;http://10.9.8.7&quot;&gt;http://10.9.8.7&lt;/a&gt;, and reconfigure the LAN interface to make permanent the IP address:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Network ‚ñ∑ Interfaces ‚ñ∑ LAN&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/100.png&quot;&gt;&lt;img src=&quot;/assets/img/100.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, it‚Äôs time to create the bridge interface (bonding the &lt;strong&gt;lan&lt;/strong&gt; and &lt;strong&gt;wwan&lt;/strong&gt; interfaces)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/101.png&quot;&gt;&lt;img src=&quot;/assets/img/101.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-bridge.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-bridge.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And join the nearby AP (linked to the &lt;strong&gt;bridge/wwan&lt;/strong&gt; interface)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Network ‚ñ∑ Wifi ‚ñ∑ Scan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-client.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-client.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, don‚Äôt forget to create the AP repeater (linked to the &lt;strong&gt;lan&lt;/strong&gt; interface)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Network ‚ñ∑ Wifi ‚ñ∑ Add&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/openwrt-ap.png&quot;&gt;&lt;img src=&quot;/assets/img/openwrt-ap.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs it!, a simple and robust wifi extender ‚úå&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/toh/tp-link/tl-wdr4300&quot;&gt;http://wiki.openwrt.org/toh/tp-link/tl-wdr4300&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tombatossals.github.io/openwrt-repetidor-wireless/&quot;&gt;http://tombatossals.github.io/openwrt-repetidor-wireless/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>staticus, a poor man status page generator</title>
   <link href="http://javier.io/blog/en/2016/05/19/staticus-poor-man-status-page-generator.html"/>
   <updated>2016-05-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2016/05/19/staticus-poor-man-status-page-generator</id>
   <content type="html">&lt;h2 id=&quot;staticus-a-poor-man-status-page-generator&quot;&gt;staticus, a poor man status page generator&lt;/h2&gt;

&lt;h6 id=&quot;19-may-2016&quot;&gt;19 May 2016&lt;/h6&gt;

&lt;p&gt;I‚Äôm not sure what excuse to use to back this entry, I guess I‚Äôm just a lazy and irresponsible person, last week I got myself in need for a basic status page generator and all the alternatives I looked at were either too complicated or non free (as in speech and beer), so I decided to go my own (that‚Äôs the irresponsible part) and bundle everything in a single shell script to avoid dependencies (that‚Äôs the lazy one).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/staticus&quot;&gt;Staticus&lt;/a&gt; is the result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/staticus-1.png&quot;&gt;&lt;img src=&quot;/assets/img/staticus-1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The tools itself is pretty simple, to generate the above picture I ran:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;staticus go #generate staticus.txt and staticus.html in the current directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Could be added to a cronjob to run periodically&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * * * * /path/to/staticus -o /var/www/status/index.html -O /tmp/staticus.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script accepts several options, however to set threshold values and other &lt;em&gt;advanced&lt;/em&gt; parameters it‚Äôs best to define a configuration file (by default /etc/staticus.conf):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module_memory_threshold=&quot;80&quot;
module_swap_threshold=&quot;80&quot;
module_load_threshold=&quot;4&quot;
module_storage_threshold=&quot;80&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Other possible values are described in the &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/staticus#L8&quot;&gt;configuration section&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, if you ever use staticus, you didn‚Äôt get it from me üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jayfk/statuspage&quot;&gt;@jayfk‚Äôs statuspage project, from where I stole the html theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>terminfo variable</title>
   <link href="http://javier.io/blog/en/2016/02/12/terminfo-error-opening-terminal.html"/>
   <updated>2016-02-12T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2016/02/12/terminfo-error-opening-terminal</id>
   <content type="html">&lt;h2 id=&quot;terminfo-variable&quot;&gt;terminfo variable&lt;/h2&gt;

&lt;h6 id=&quot;12-feb-2016&quot;&gt;12 Feb 2016&lt;/h6&gt;

&lt;p&gt;This is a quick reminder to my future self about how to fix some annoying TERM errors&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/atop
Error opening terminal: rxvt-unicode-256color.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On these cases it could help to define the TERM variable to a more standard type, eg;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TERM=xterm ./bin/atop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or/and specify the TERMINFO variable, eg:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TERMINFO='/usr/share/terminfo/'  ./bin/atop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is specially useful for compiled programs who configured the TERMINFO variable to a different one during compilation time.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy launching üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12345675/screen-cannot-find-terminfo-entry-for-xterm-256color&quot;&gt;screen cannot find terminfo entry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>a simple cli upnp/dlna browser</title>
   <link href="http://javier.io/blog/en/2016/01/22/simple-upnp-dlna-browser.html"/>
   <updated>2016-01-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2016/01/22/simple-upnp-dlna-browser</id>
   <content type="html">&lt;h2 id=&quot;a-simple-cli-upnpdlna-browser&quot;&gt;a simple cli upnp/dlna browser&lt;/h2&gt;

&lt;h6 id=&quot;22-jan-2016&quot;&gt;22 Jan 2016&lt;/h6&gt;

&lt;p&gt;Last weekend I installed a usb hard disk to my &lt;a href=&quot;https://openwrt.org/&quot;&gt;openwrt&lt;/a&gt; &lt;a href=&quot;http://javier.io/blog/en/2014/06/10/installing-openwrt-as-wireless-repeater.html&quot;&gt;router&lt;/a&gt;, added some content, setup &lt;a href=&quot;https://wiki.openwrt.org/doc/uci/minidlna&quot;&gt;minidlna&lt;/a&gt; and called it a day, easy way to stream movies locally. I tested the setup with all my endpoints and while it worked great with most of them I was having problems streaming to my Linux laptop, that‚Äôs funny considering the router itself runs the same OS.&lt;/p&gt;

&lt;p&gt;Looking around I read suggestions about installing vlc,totem,xbmc,etc. All of those media players are great however I already have mplayer2 which is able to play http streams, that‚Äôs &lt;a href=&quot;https://gxben.wordpress.com/2008/08/24/why-do-i-hate-dlna-protocol-so-much/&quot;&gt;a great deal&lt;/a&gt; about upnp/dlna. So I took some time to hack a quick and dirty script and that‚Äôs how &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/simple-dlna-browser&quot;&gt;simple-dlna-browser&lt;/a&gt; was born.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ simple-dlna-browser
Usage: simple-dlna-browser [OPTIONS] PATTERN
&lt;/pre&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ simple-dlna-browser -l #autodetection requires 'socat'
http://192.168.1.254:8200/rootDesc.xml (Multimedia)
‚î¨
‚îú‚îÄ‚îÄ Apocalipto
‚îú‚îÄ‚îÄ Contacto
‚îú‚îÄ‚îÄ Coraline.y.la.puerta.secreta
...

$ simple-dlna-browser contacto | xargs mplayer

$ simple-dlna-browser -s 192.168.1.254 contacto | xargs mplayer
&lt;/pre&gt;

&lt;p&gt;I used minidlna 1.1.4-2 as a reference, so it may not work with other media servers.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy streaming üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/simple-dlna-browser&quot;&gt;https://github.com/javier-lopez/learn/blob/master/sh/tools/simple-dlna-browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>genpass, yet another stateless password generator</title>
   <link href="http://javier.io/blog/en/2016/01/07/genpass-yet-another-stateless-password-generator.html"/>
   <updated>2016-01-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2016/01/07/genpass-yet-another-stateless-password-generator</id>
   <content type="html">&lt;h2 id=&quot;genpass-yet-another-stateless-password-generator&quot;&gt;genpass, yet another stateless password generator&lt;/h2&gt;

&lt;h6 id=&quot;07-jan-2016&quot;&gt;07 Jan 2016&lt;/h6&gt;

&lt;p&gt;Since some time I‚Äôve realized I‚Äôm pretty bad at memorizing strong passwords, as a result I‚Äôve been using an unique moderated strong ‚Äúmaster‚Äù password and I‚Äôve derived others by using a shell alias:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ alias getpass='_getpass() { _g=$(printf &quot;%s&quot; &quot;${*}&quot; | \
    md5sum | openssl enc -base64     | \
    cut -c1-20); printf &quot;%s&quot; &quot;${_g}&quot; | \
    xclip -selection clipboard 2&amp;gt;/dev/null || \
    printf &quot;%s\\n&quot; &quot;${_g}&quot;; }; _getpass'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I knew than the resulting passwords weren‚Äôt really good at keeping my master password secure, after all, md5 hashing is extremely fast and with known &lt;a href=&quot;http://www.mscs.dal.ca/~selinger/md5collision/&quot;&gt;collision&lt;/a&gt; &lt;a href=&quot;http://natmchugh.blogspot.mx/2015/02/create-your-own-md5-collisions.html&quot;&gt;problems&lt;/a&gt;, even worse, I didn‚Äôt even iterate over it. So I keep it in secret till I had the time or willingness to use an informed solution. During the last month I‚Äôve been reviewing the state of art of password generation schemes and found than some &lt;a href=&quot;https://en.wikipedia.org/wiki/Bcrypt&quot;&gt;derivation&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;functions&lt;/a&gt; have been designed specifically for this task. So I converted the shell alias to a C program and &lt;a href=&quot;https://github.com/javier-lopez/genpass&quot;&gt;genpass&lt;/a&gt; is the result.&lt;/p&gt;

&lt;p&gt;Genpass is by no means original, however when looking around I found than most password generators were plain broken, most of them were iterating fast checksum functions, md5, sha1, sha512, etc, or the ones using either bcrypt or scrypt used hard-coded parameters which could make them vulnerable to future computers. Using a slow key derivation function is as practical as the user is willing to wait, so often more secure default parameters aren‚Äôt used because it would make the derivation painfully slow. Fortunately some smart guys have found this &lt;a href=&quot;https://www.cs.utexas.edu/%7Ebwaters/publications/papers/www2005.pdf&quot;&gt;problem before&lt;/a&gt; and have suggested to use a cache key to accelerate the process for legitimate users. That‚Äôs what genpass uses to propose the following paranoid defaults.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parameter&lt;/th&gt;
      &lt;th&gt;Value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Cache cost (Scrypt N)&lt;/td&gt;
      &lt;td&gt;2^20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cost       (Scrypt N)&lt;/td&gt;
      &lt;td&gt;2^14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Scrypt r&lt;/td&gt;
      &lt;td&gt;8 bits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Scrypt p&lt;/td&gt;
      &lt;td&gt;16 bits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key length&lt;/td&gt;
      &lt;td&gt;32 bytes, 256 bits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Encoding&lt;/td&gt;
      &lt;td&gt;z85&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It‚Äôs still convenient to use your own parameters, as the default settings will change as computers get updated on CPU/RAM.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/javier-lopez/genpass/master/genpass.gif&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/javier-lopez/genpass/master/genpass.gif&quot; alt=&quot;&quot; style=&quot;border: 1px solid white;margin-bottom: 3%;&quot; /&gt;&lt;/a&gt;
&lt;!--$ genpass--&gt;
&lt;!--Name: Guy Mann--&gt;
&lt;!--Site: github.com--&gt;
&lt;!--Master password: passwd #it won't be shown--&gt;
&lt;!--4c%7hZ5w]MZUB6RRPCJ&amp;?wKTFtd[6Oj.P.02d+kIs--&gt;&lt;/p&gt;

&lt;p&gt;The first time to be executed it will take a relative long time (a couple of minutes) to get back. It‚Äôll create a cache key and will save it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.genpass-cache&lt;/code&gt; (this path can be customized), then it will combine it with the master password and the site string to generate the final password, which can be in several encodings (z85 by default). The cache key file should be guarded with moderate caution, if it gets leaked possible attackers may have an easier time guessing the master password (although it still will be considerably harder than average brute force attacks). Later invocations will be instantly (taking on average 0.1secs). This way the scheme strives for the best balance between security and usability.&lt;/p&gt;

&lt;p&gt;I‚Äôve also added a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getpass&lt;/code&gt; wrapper which paste the resulting password to the system clipboard and sets a timeout (10 seconds by default) after which the password is removed.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;h5 id=&quot;ubuntu-based-systems-lts&quot;&gt;Ubuntu based systems (LTS)&lt;/h5&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install genpass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;other-linux-distributions-static-binaries&quot;&gt;Other Linux distributions, static binaries&lt;/h5&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sh &amp;lt;(wget -qO- s.minos.io/s) -x genpass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;from-source&quot;&gt;From source&lt;/h5&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy password generation üòã&lt;/p&gt;

&lt;p&gt;References&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/genpass&quot;&gt;genpass&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bcrypt&quot;&gt;bcrypt&lt;/a&gt;, slow key derivation function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt;, slow key derivation function&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pwdhash.com/&quot;&gt;pwdhash&lt;/a&gt;, md5 based password generator, js&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.supergenpass.com/&quot;&gt;supergenpass&lt;/a&gt;, md5 iteration based password generator, js&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://passwordmaker.org&quot;&gt;passwordmaker&lt;/a&gt;, md5, sha1, sha256, &lt;a href=&quot;http://passwordmaker.org/FAQ#Which_hash_algorithms_are_supported.3F&quot;&gt;etc&lt;/a&gt; based password generator, several implementations&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://masterpasswordapp.com/&quot;&gt;masterpassword&lt;/a&gt;, hard-coded scrypt based password generator, several implementations&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kaepora/npwd&quot;&gt;npwd&lt;/a&gt;, hard-coded scrypt based password generator, Nodejs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/postboy/cpwd&quot;&gt;cpwd&lt;/a&gt;, hard-coded scrypt based password generator, C&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>a simple mpc web interface</title>
   <link href="http://javier.io/blog/en/2016/01/02/simple-mpc-web-interface.html"/>
   <updated>2016-01-02T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2016/01/02/simple-mpc-web-interface</id>
   <content type="html">&lt;h2 id=&quot;a-simple-mpc-web-interface&quot;&gt;a simple mpc web interface&lt;/h2&gt;

&lt;h6 id=&quot;02-jan-2016&quot;&gt;02 Jan 2016&lt;/h6&gt;

&lt;p&gt;Sometimes while listening music at my desk my niece (~8y/o) shows up and asks me to skip the current song, most of the times I do it instantly, however when I‚Äôm really busy I may delay some seconds, in those occasions she goes over my keyboard and press the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next&lt;/code&gt; button by herself. Today morning was one of those days, so I though it shouldn‚Äôt be too difficult to install a mpd client in her ipad to give her full control =)&lt;/p&gt;

&lt;p&gt;It turned to be more trouble that I though, first, there are no free mpd clients on the ipad software store (or it‚Äôs not available in my region, LATAM), and most &lt;a href=&quot;http://mpd.wikia.com/wiki/Clients&quot;&gt;web clients&lt;/a&gt; require a fair amount of dependencies and some work to get them running. I don‚Äôt want yet another service to maintain, so I decided to hack a simple web interface for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mpc&lt;/code&gt;, based on Gwenn Englebienne previous work on &lt;a href=&quot;http://www.gwenn.dk/mplayer-remote.html&quot;&gt;mplayer&lt;/a&gt; and this is the result:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget https://raw.githubusercontent.com/javier-lopez/learn/master/python/simple-mpc-remote
$ python simple-mpc-remote -p 8080
Started httpserver on port 8080
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/simple-mpc-remote.png&quot;&gt;&lt;img src=&quot;/assets/img/simple-mpc-remote.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simple-mpc-remote&lt;/code&gt; has no dependencies, other than python +2.7, mpc and mpd and it‚Äôs really simple to install/use. Since it does little effort to sanitize input it could be dangerous, however since I trust my local network I‚Äôll leave it like that for now.&lt;/p&gt;

&lt;p&gt;Happy skipping üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gwenn.dk/mplayer-remote.html&quot;&gt;mplayer-remote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/javier-lopez/learn/master/python/simple-mpc-remote&quot;&gt;simple-mpc-remote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>using imagemagick, awk and kmeans to find dominant colors in images</title>
   <link href="http://javier.io/blog/en/2015/09/30/using-imagemagick-and-kmeans-to-find-dominant-colors-in-images.html"/>
   <updated>2015-09-30T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/09/30/using-imagemagick-and-kmeans-to-find-dominant-colors-in-images</id>
   <content type="html">&lt;h2 id=&quot;using-imagemagick-awk-and-kmeans-to-find-dominant-colors-in-images&quot;&gt;using imagemagick, awk and kmeans to find dominant colors in images&lt;/h2&gt;

&lt;h6 id=&quot;30-sep-2015&quot;&gt;30 Sep 2015&lt;/h6&gt;

&lt;p&gt;Some days ago I was reading &lt;a href=&quot;http://charlesleifer.com/blog/using-python-to-generate-awesome-linux-desktop-themes/&quot;&gt;‚ÄúUsing python to generate awesome linux desktop themes‚Äù&lt;/a&gt; and got impressed by a technique to obtain dominant colors from images, I went ahead and tried to run the examples but &lt;a href=&quot;http://www.pythonware.com/products/pil/&quot;&gt;PIL&lt;/a&gt; proved difficult to install, so I looked around to see if I could replace it for some other utility and it turned out that &lt;a href=&quot;http://www.imagemagick.org/script/convert.php&quot;&gt;&lt;strong&gt;convert&lt;/strong&gt;&lt;/a&gt; (which is part of the imagemagick package) is powerful enough for the duty.&lt;/p&gt;

&lt;p&gt;Besides resizing, &lt;strong&gt;convert&lt;/strong&gt; can output the rgb values of any image, so I reimplemented the kmean algorithm on awk and that‚Äôs how &lt;a href=&quot;https://raw.githubusercontent.com/javier-lopez/learn/master/sh/tools/dcolors&quot;&gt;dcolors&lt;/a&gt; was born. By default dcolor will resize (on RAM) the input image to 25x25 using a 1px deviation and 3 clusters for an average time of 1s per image, further customization are possible to increase quality, quantity or performance.&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
$ time dcolors akira_800x800.jpg
163,80,50
65,77,93
40,26,34

real    0m1.176s
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/akira_800x800.jpg&quot;&gt;&lt;img src=&quot;/assets/img/akira_800x800.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;
&lt;span style=&quot;background-color: #a35032&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #414d5d&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #281a22&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;/center&gt;
&lt;p&gt;&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
$ time ./dcolors --resize 100x100 -d 10 akira-cycle-2.png
49,85,118
19,42,69
125,173,165

real    0m3.188s
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/akira-cycle-2_800x800.png&quot;&gt;&lt;img src=&quot;/assets/img/akira-cycle-2_800x800.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;
&lt;span style=&quot;background-color: #315576&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #132a45&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #7dada5&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;/center&gt;
&lt;p&gt;&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
$ time ./dcolors -f hex -k 8 akira-neo-tokyo-7_800x800.png
#495D66
#223634
#1C293A
#68706E
#3C4F4A
#38495D
#293C48
#0B1016

real    0m1.005s
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/akira-neo-tokyo-7_800x800.png&quot;&gt;&lt;img src=&quot;/assets/img/akira-neo-tokyo-7_800x800.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;
&lt;span style=&quot;background-color: #495D66&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #223634&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #1C293A&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #68706E&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #3C4F4A&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #38495D&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #293C48&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;span style=&quot;background-color: #0B1016&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;
&lt;/center&gt;

&lt;p&gt;That‚Äôs it, happy hacking üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/&quot;&gt;http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;https://en.wikipedia.org/wiki/K-means_clustering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>install apt packages from deb postinst</title>
   <link href="http://javier.io/blog/en/2015/09/10/apt-packages-from-deb-postinst.html"/>
   <updated>2015-09-10T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/09/10/apt-packages-from-deb-postinst</id>
   <content type="html">&lt;h2 id=&quot;install-apt-packages-from-deb-postinst&quot;&gt;install apt packages from deb postinst&lt;/h2&gt;

&lt;h6 id=&quot;10-sep-2015&quot;&gt;10 Sep 2015&lt;/h6&gt;

&lt;p&gt;During the last couple of years I‚Äôve been building &lt;a href=&quot;https://github.com/minos-org&quot;&gt;yet another Linux distribution&lt;/a&gt;, mostly to have my favorite software nicely packaged, but also to experiment and have fun =)&lt;/p&gt;

&lt;p&gt;One important part of it is its configuration file, &lt;strong&gt;/etc/minos/config&lt;/strong&gt; or &lt;strong&gt;~/.minos/config&lt;/strong&gt;, e.g.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
wallpaper      ~/data/images/wallpapers/sunlight.png
lock-wallpaper ~/data/images/wallpapers/lock.png
app-core       mozilla-firefox mozilla-flashplayer
app-purge      xinetd sasl2-bin sendmail sendmail-base sendmail-bin sensible-mda
&lt;/pre&gt;

&lt;p&gt;I‚Äôve chosen Debian/Ubuntu infrastructure for the initial implementation but probably will change it in the future (bedrock linux?). Anyway, since some of the parameters accept additional packages I‚Äôve been having fun abusing the maintainer scripts to do so, this is how I‚Äôve done it.&lt;/p&gt;

&lt;h2 id=&quot;locks&quot;&gt;Locks&lt;/h2&gt;

&lt;p&gt;Apt, rpm, and most package managers use locks to ensure its operations are as atomic as possible, it helps them to keep packages under control, so when trying to abuse maintainer scripts (on this case postinst) the first error to come up will be:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)
E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?`
&lt;/pre&gt;

&lt;p&gt;These files can be moved temporally to launch additional apt/dpkg instances, after some experimentation the list is as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/var/lib/dpkg/lock
/var/cache/apt/archives/lock
/var/lib/dpkg/updates/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dpkg/apt-get uses a database in text plain located at &lt;strong&gt;/var/lib/dpkg/status&lt;/strong&gt;, it‚Äôs kind of important to keep track of it too since the result of every apt/dpkg invocation is dumped to it upon completion (multiple backups are available at /var/backups/dpkg.status).&lt;/p&gt;

&lt;h2 id=&quot;post-execution&quot;&gt;Post execution&lt;/h2&gt;

&lt;p&gt;There seem to exist several options to abuse apt-get, cron jobs, daemons queues (aptdaemon?), custom waits, but all them require a considerable amount of time after the main apt-get/dpkg is done, what if the system go down short after?. I finally decided to install everything within the main apt-get process and merge changes at the end (that way it takes a couple of seconds processing the missing text operations instead of probably several minutes for further apt instances).&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
#!/bin/sh
package=my-pkg

_dpkg_suspend_process() {
    #unlock standard files
    busybox mv     /var/lib/dpkg/lock           /var/lib/dpkg/lock.suspended
    busybox rm -rf /var/lib/dpkg/updates.suspended/
    busybox mv     /var/lib/dpkg/updates/       /var/lib/dpkg/updates.suspended
    busybox mkdir  /var/lib/dpkg/updates/
    busybox mv     /var/cache/apt/archives/lock /var/cache/apt/archives/lock.suspended

    #debconf missing file descriptors workaround
    busybox cp /usr/share/debconf/confmodule       /usr/share/debconf/confmodule.bk
    busybox cp /usr/share/minos/debconf/confmodule /usr/share/debconf/confmodule

    #while apt is being executed it modifies the status file which brings conflicts
    #to new packages if they're installed/removed in abused apt instances, therefore
    #the status-old file (which represent the original state in which the first
    #apt instance was launched) is used to create temporal diffs which will be merged
    #at the end
    busybox cp     /var/lib/dpkg/status         /var/lib/dpkg/status.suspended
    busybox cp     /var/lib/dpkg/status-old     /var/lib/dpkg/status-orig
    busybox cp     /var/lib/dpkg/status-orig    /var/lib/dpkg/status
}

_dpkg_continue_process() {
    #relock standard files
    busybox rm -rf /var/lib/dpkg/updates
    busybox mv     /var/lib/dpkg/lock.suspended           /var/lib/dpkg/lock
    busybox mv     /var/lib/dpkg/updates.suspended        /var/lib/dpkg/updates
    busybox mv     /var/cache/apt/archives/lock.suspended /var/cache/apt/archives/lock
    busybox mv     /var/lib/dpkg/status.suspended         /var/lib/dpkg/status

    #debconf missing file descriptors workaround
    busybox mv     /usr/share/debconf/confmodule.bk       /usr/share/debconf/confmodule

    #keep status-old file to survive multiple abused apt instances
    busybox mv     /var/lib/dpkg/status-orig              /var/lib/dpkg/status-old
}

_dpkg_sync_status_db() {
    _dpkg_sync_status_db_script=&quot;/var/lib/dpkg/dpkg-sync-status-db&quot;
    _dpkg_sync_status_db_script_generator() {
        printf &quot;%s\\n&quot; &quot;#!/bin/sh&quot;
        printf &quot;%s\\n&quot; &quot;#autogenerated by ${package}: $(date +%d-%m-%Y:%H:%M)&quot;
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; '##close stdout'
        printf &quot;%s\\n&quot; '#exec 1&amp;lt;&amp;amp;-'
        printf &quot;%s\\n&quot; '##close stderr'
        printf &quot;%s\\n&quot; '#exec 2&amp;lt;&amp;amp;-'
        printf &quot;%s\\n&quot; '##open stdout as $log_file file for read and write.'
        printf &quot;%s\\n&quot; &quot;#exec 1&amp;lt;&amp;gt; /tmp/${package}.\${$}.debug&quot;
        printf &quot;%s\\n&quot; '##redirect stderr to stdout'
        printf &quot;%s\\n&quot; '#exec 2&amp;gt;&amp;amp;1'
        printf &quot;%s\\n&quot; '#set -x #enable trace mode'
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; &quot;while fuser /var/lib/dpkg/lock &amp;gt;/dev/null 2&amp;gt;&amp;1; do sleep 1; done&quot;
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; 'pkgs__add=&quot;$(cat /var/lib/apt/apt-add-queue)&quot;'
        printf &quot;%s\\n&quot; 'if [ -n &quot;${pkgs__add}&quot; ]; then'
        printf &quot;%s\\n&quot; '  for pkg in $pkgs__add; do'
        printf &quot;%s\\n&quot; '    if ! busybox grep &quot;^Package: ${pkg}$&quot; /var/lib/dpkg/status &amp;gt;/dev/null 2&amp;gt;&amp;1; then'
        printf &quot;%s\\n&quot; '      busybox sed -n &quot;/Package: ${pkg}$/,/^$/p&quot; \'
        printf &quot;%s\\n&quot; &quot;      /var/lib/dpkg/status-append-queue &amp;gt;&amp;gt; /var/lib/dpkg/status&quot;
        printf &quot;%s\\n&quot; &quot;    fi&quot;
        printf &quot;%s\\n&quot; &quot;  done&quot;
        printf &quot;%s\\n&quot; &quot;fi&quot;
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; 'pkgs__rm=&quot;$(cat /var/lib/apt/apt-rm-queue)&quot;'
        printf &quot;%s\\n&quot; 'if [ -n &quot;${pkgs__rm}&quot; ]; then'
        printf &quot;%s\\n&quot; '  for pkg in $pkgs__rm; do'
        printf &quot;%s\\n&quot; '    busybox sed -i &quot;/Package: ${pkg}$/,/^$/d&quot; /var/lib/dpkg/status'
        printf &quot;%s\\n&quot; &quot;  done&quot;
        printf &quot;%s\\n&quot; &quot;fi&quot;
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; &quot;mv /var/lib/apt/apt-add-queue /var/lib/apt/apt-add-queue.bk&quot;
        printf &quot;%s\\n&quot; &quot;mv /var/lib/apt/apt-rm-queue  /var/lib/apt/apt-rm-queue.bk&quot;
        printf &quot;%s\\n&quot; &quot;mv /var/lib/dpkg/status-append-queue /var/lib/dpkg/status-append-queue.bk&quot;
        printf &quot;\\n&quot;
        printf &quot;%s\\n&quot; &quot;rm -rf /var/lib/apt/apt-add-queue /var/lib/apt/apt-rm-queue&quot;
        printf &quot;%s\\n&quot; &quot;rm -rf ${_dpkg_sync_status_db_script}&quot;
    }

    _dpkg_sync_status_db_script_generator &amp;gt; &quot;${_dpkg_sync_status_db_script}&quot;
    chmod +x &quot;${_dpkg_sync_status_db_script}&quot;
    _daemonize /bin/sh -c &quot;${_dpkg_sync_status_db_script}&quot;
}

_daemonize() {
    #http://blog.n01se.net/blog-n01se-net-p-145.html
    [ -z &quot;${1}&quot; ] &amp;amp;&amp;amp; return 1
    (   #1. fork, to guarantee the child is not a process
        #group leader, necessary for setsid) and have the
        #parent exit (to allow control to return to the shell)

        #2. redirect stdin/stdout/stderr before running child
        [ -t 0 ] &amp;amp;&amp;amp; exec  &amp;lt;/dev/null
        [ -t 1 ] &amp;amp;&amp;amp; exec  &amp;gt;/dev/null
        [ -t 2 ] &amp;amp;&amp;amp; exec 2&amp;gt;/dev/null
        if ! command -v &quot;setsid&quot; &amp;gt;/dev/null 2&amp;gt;&amp;1; then
            #2.1 guard against HUP and INT (in child)
            trap '' 1 2
        fi

        #3. ensure cwd isn't a mounted fs so it does't block
        #umount invocations
        cd /

        #4. umask (leave this to caller)
        #umask 0

        #5. close unneeded fds
        #XCU 2.7 Redirection says: open files are represented by
        #decimal numbers starting with zero. The largest possible
        #value is implementation-defined; however, all
        #implementations shall support at least 0 to 9, inclusive,
        #for use by the application.
        i=3; while [ &quot;${i}&quot; -le &quot;9&quot; ]; do
            eval &quot;exec ${i}&amp;gt;&amp;amp;-&quot;
            i=&quot;$(($i + 1))&quot;
        done

        #6. create new session, so the child has no
        #controlling terminal, this prevents the child from
        #accesing a terminal (using /dev/tty) and getting
        #signals from the controlling terminal (e.g. HUP, INT)
        if command -v &quot;setsid&quot; &amp;gt;/dev/null 2&amp;gt;&amp;1; then
            exec setsid &quot;$@&quot;
        elif command -v &quot;nohup&quot; &amp;gt;/dev/null 2&amp;gt;&amp;1; then
            exec nohup &quot;$@&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
        else
            if [ ! -f &quot;${1}&quot; ]; then
                &quot;$@&quot;
            else
                exec &quot;$@&quot;
            fi
        fi
    ) &amp;amp;
    #2.2 guard against HUP (in parent)
    if ! command -v &quot;setsid&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 \ &amp;amp;&amp;amp;
       ! command -v &quot;nohup&quot;  &amp;gt;/dev/null 2&amp;gt;&amp;1; then
        disown -h &quot;${!}&quot;
    fi
}

_apt_add_queue() {
    for pkg in &quot;${@}&quot;; do
        if  busybox grep &quot;${pkg}&quot; /var/lib/apt/apt-rm-queue &amp;gt;/dev/null 2&amp;gt;&amp;1; then
            busybox sed -i &quot;/^${pkg}$/d&quot; /var/lib/apt/apt-rm-queue
        else
            if ! busybox grep &quot;^Package: ${pkg}$&quot; /var/lib/dpkg/status &amp;gt;/dev/null 2&amp;gt;&amp;1; then
                printf &quot;%s\\n&quot; &quot;${pkg}&quot; &amp;gt;&amp;gt; /var/lib/apt/apt-add-queue
            fi
        fi
    done; unset pkg
}

_apt_rm_queue() {
    for pkg in &quot;${@}&quot;; do
        if  busybox grep &quot;${pkg}&quot; /var/lib/apt/apt-add-queue &amp;gt;/dev/null 2&amp;gt;&amp;1; then
            busybox sed -i &quot;/^${pkg}$/d&quot; /var/lib/apt/apt-add-queue
        else
            if busybox grep &quot;^Package: ${pkg}$&quot; /var/lib/dpkg/status &amp;gt;/dev/null 2&amp;gt;&amp;1; then
                printf &quot;%s\\n&quot; &quot;${pkg}&quot; &amp;gt;&amp;gt; /var/lib/apt/apt-rm-queue
            fi
        fi
    done; unset pkg
}

_apt_install() {
    [ -z &quot;${1}&quot; ] &amp;amp;&amp;amp; return
    _apt_add_queue $(printf &quot;%s\\n&quot; &quot;${@}&quot; | busybox sed &quot;s:${package}::g&quot;)
}

_apt_purge() {
    [ -z &quot;${1}&quot; ] &amp;amp;&amp;amp; return
    _apt_rm_queue $(printf &quot;%s\\n&quot; &quot;${@}&quot; | busybox sed &quot;s:${package}::g&quot;)
}

_apt_run() {
    [ ! -f /var/lib/apt/apt-add-queue ] &amp;amp;&amp;amp; [ ! -f /var/lib/apt/apt-rm-queue ] &amp;amp;&amp;amp; return

    pkgs__add=&quot;$(cat /var/lib/apt/apt-add-queue 2&amp;gt;/dev/null)&quot;
    if [ -n &quot;${pkgs__add}&quot; ]; then
        _dpkg_suspend_process
        busybox awk '/^Package: /{print $2}' /var/lib/dpkg/status | \
            busybox sort &amp;gt; /var/lib/dpkg/status-pkgs.orig
        _apt_run__output=&quot;$(DEBIAN_FRONTEND=noninteractive apt-get install  \
            --no-install-recommends -y -o Dpkg::Options::=&quot;--force-confdef&quot; \
            -o Dpkg::Options::=&quot;--force-confold&quot; --force-yes ${pkgs__add} 2&amp;gt;&amp;amp;1)&quot; || \
            printf &quot;%s\\n&quot; &quot;${_apt_run__output}&quot; &amp;gt;&amp;amp;2
        busybox awk '/^Package: /{print $2}' /var/lib/dpkg/status | \
            busybox sort &amp;gt; /var/lib/dpkg/status-pkgs.current
        _dpkg__added_pkgs=&quot;$(busybox diff -Naur /var/lib/dpkg/status-pkgs.orig \
            /var/lib/dpkg/status-pkgs.current | busybox awk '/^\+[a-zA-Z]/{gsub(&quot;^+&quot;,&quot;&quot;);print;}')&quot;
        busybox rm -rf /var/lib/dpkg/status-pkgs*
        #add dependencies
        if [ -n &quot;${_dpkg__added_pkgs}&quot; ]; then
            printf &quot;%s\\n&quot; &quot;${_dpkg__added_pkgs}&quot; &amp;gt;&amp;gt; /var/lib/apt/apt-add-queue
            printf &quot;%s\\n&quot; &quot;$(busybox sort /var/lib/apt/apt-add-queue | busybox uniq)&quot; \
                &amp;gt; /var/lib/apt/apt-add-queue
        fi

        #extract dpkg status output to append it at the end
        for pkg in $_dpkg__added_pkgs; do
            busybox sed -n '/Package: '&quot;${pkg}&quot;'$/,/^$/p' /var/lib/dpkg/status \
                &amp;gt;&amp;gt; /var/lib/dpkg/status-append-queue
        done
        _dpkg_continue_process
    fi

    pkgs__rm=&quot;$(cat /var/lib/apt/apt-rm-queue 2&amp;gt;/dev/null)&quot;
    if [ -n &quot;${pkgs__rm}&quot; ]; then
        _dpkg_suspend_process
        busybox awk '/^Package: /{print $2}' /var/lib/dpkg/status | \
            busybox sort &amp;gt; /var/lib/dpkg/status-pkgs.orig
        _apt_run__output=&quot;$(DEBIAN_FRONTEND=noninteractive apt-get purge \
            -y ${pkgs__rm} 2&amp;gt;&amp;amp;1)&quot; || printf &quot;%s\\n&quot; &quot;${_apt_run__output}&quot; &amp;gt;&amp;amp;2
        busybox awk '/^Package: /{print $2}' /var/lib/dpkg/status | \
            busybox sort &amp;gt; /var/lib/dpkg/status-pkgs.current
        _dpkg__removed_pkgs=&quot;$(busybox diff -Naur /var/lib/dpkg/status-pkgs.orig \
            /var/lib/dpkg/status-pkgs.current | busybox awk '/^-[a-zA-Z]/{gsub(&quot;^-&quot;,&quot;&quot;);print;}')&quot;
        busybox rm -rf /var/lib/dpkg/status-pkgs*
        #remove dependencies
        if [ -n &quot;${_dpkg__removed_pkgs}&quot; ]; then
            printf &quot;%s\\n&quot; &quot;${_dpkg__removed_pkgs}&quot; &amp;gt;&amp;gt; /var/lib/apt/apt-rm-queue
            printf &quot;%s\\n&quot; &quot;$(busybox sort /var/lib/apt/apt-rm-queue | busybox uniq)&quot; \
                &amp;gt; /var/lib/apt/apt-rm-queue
        fi
        _dpkg_continue_process
    fi

    _dpkg_sync_status_db
}

_apt_install additional packages
_apt_purge   ugly packages
_apt_run
&lt;/pre&gt;

&lt;p&gt;Not the most elegant solution but it‚Äôs works, I‚Äôll leave it like that until I find a better alternative or change base distros.&lt;/p&gt;

&lt;p&gt;Happy abusing üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/18599599/apt-get-commands-from-within-a-deb-postinst&quot;&gt;http://stackoverflow.com/questions/18599599/apt-get-commands-from-within-a-deb-postinst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>papers I liked</title>
   <link href="http://javier.io/blog/en/2015/08/10/papers-i-liked.html"/>
   <updated>2015-08-10T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/08/10/papers-i-liked</id>
   <content type="html">&lt;h2 id=&quot;papers-i-liked&quot;&gt;papers I liked&lt;/h2&gt;

&lt;h6 id=&quot;10-aug-2015&quot;&gt;10 Aug 2015&lt;/h6&gt;

&lt;p&gt;From time to time I read papers about any subject, mostly about computer science, and then forgot which or where it‚Äôs available for future reference. So I‚Äôm creating this list as a kind of personal wiki to do not forget anymore.&lt;/p&gt;

&lt;h3 id=&quot;computer-security&quot;&gt;Computer Security&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.iseclab.org/papers/sp2013privexec&quot;&gt;PrivExec: Private Execution as an Operating System Service&lt;/a&gt; - 2013. &lt;a href=&quot;http://f.javier.io/rep/papers/sp2013privexec.pdf&quot;&gt;[pdf]&lt;/a&gt; 16 Pag. Kernel side private / temporal / irrecoverable execution environments.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.comp.nus.edu.sg/~liangzk/papers/tissec09.pdf&quot;&gt;Alcatraz: An Isolated Environment for Experimenting with Untrusted Software&lt;/a&gt; - 2009. &lt;a href=&quot;http://f.javier.io/rep/papers/alcatraz-an-isolated-environment-for-experimenting-with-untrusted-software.pdf&quot;&gt;[pdf]&lt;/a&gt; 37 Pag. Commit + policy driven temporal sandboxing environments.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.300.4042&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;The state of the art of application restrictions and sandboxes and its shortfalls&lt;/a&gt; - 2012. &lt;a href=&quot;http://f.javier.io/rep/papers/state-of-art-of-application-restrictions-and-sandboxes-2012.pdf&quot;&gt;[pdf]&lt;/a&gt; 40 Pag. Compilation of current security trends and its shortfalls, eg: selective execution (by white/black lists, heuristic -antivirus software, statistic based -symantec quorum, spynet, mcafee artemis, etc); rule based (DAC, Linux standard, Rainbow, polaris); application oriented access control (mapbox, android, bitfrost, dte, apparmor, selinux, tomoyo, systrace, alcatraz, some web apps); isolation based {permanent (virtual machines - kvm,xen,uml,virtualbox, containers - chroot, lxe, openvz, linux vserver, jails), ephemeral (privexec), both (alcatraz, sandboxie, pastures, returnil), isolated two ways (virtual machines, containers), isolated one way (privexec,alcatraz)}; monitoring system calls (systrace, plash, callgraph, pulse); combinations (app oriented access control + isolation: qubes, windowbox, apiary, peadpod).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cs.utexas.edu/~bwaters/publications/papers/www2005.pdf&quot;&gt;Password Multiplier: A convenient method for securely managing passwords&lt;/a&gt; - 2005. &lt;a href=&quot;http://f.javier.io/rep/papers/Password%20Multiplier:%20A%20convenient%20method%20for%20securely%20managing%20passwords.pdf&quot;&gt;[pdf]&lt;/a&gt; 9 Pag. Hash based passwords.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;computer-virtualization&quot;&gt;Computer Virtualization&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://marceloneves.org/papers/pdp2013-containers.pdf&quot;&gt;Performance Evaluation of Container-based Virtualization for High Performance Computing Environments&lt;/a&gt; - 2014. &lt;a href=&quot;http://f.javier.io/rep/papers/pdp2013-containers.pdf&quot;&gt;[pdf]&lt;/a&gt; 8 Pag. Xen, Openvz, Linux Vserver, LXC performance evaluation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;computer-operation-systems&quot;&gt;Computer Operation Systems&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://lib.tkk.fi/Diss/2012/isbn9789526049175/isbn9789526049175.pdf&quot;&gt;Flexible Operating System Internals: The Design and Implementation of the Anykernel and Rump Kernels&lt;/a&gt; - 2012. &lt;a href=&quot;http://f.javier.io/rep/papers/anykernel-rump-kernel-isbn9789526049175.pdf&quot;&gt;[pdf]&lt;/a&gt; 362 Pag. Portable drivers across minimal kernels (anykernels) and system applications (rump kernels). Drivers as system libraries.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--
   -## Computer Networks
   -
   -[Maglev: A Fast and Reliable Software Network Load Balancer](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44824.pdf) - 2016.[[pdf]](http://f.javier.io/rep/papers/Maglev%20-%20A%20fast%20and%20reliable%20software%20network%20load%20balancer.pdf) 13 Pag. Google's distributed software based network load balancer on commodity hardware.
   --&gt;

&lt;h3 id=&quot;community-driven-papers-repositories&quot;&gt;Community driven papers repositories&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/papers-we-love/papers-we-love&quot;&gt;https://github.com/papers-we-love/papers-we-love&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.reddit.com/r/paperswelove&quot;&gt;http://www.reddit.com/r/paperswelove&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the way, if you‚Äôre new (as I‚Äôm) to read scientific papers, don‚Äôt forget to checkout the guidelines to read efficiently academic articles.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://organizationsandmarkets.com/2010/08/31/how-to-read-an-academic-article/&quot;&gt;How to read an academic article&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://violentmetaphors.com/2013/08/25/how-to-read-and-understand-a-scientific-paper-2/&quot;&gt;How to read and understand a scientific paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy reading üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>tundle, a tmux plugin manager</title>
   <link href="http://javier.io/blog/en/2015/06/29/tundle-tmux-plugin-manager.html"/>
   <updated>2015-06-29T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/06/29/tundle-tmux-plugin-manager</id>
   <content type="html">&lt;h2 id=&quot;tundle-a-tmux-plugin-manager&quot;&gt;tundle, a tmux plugin manager&lt;/h2&gt;

&lt;h6 id=&quot;29-jun-2015&quot;&gt;29 Jun 2015&lt;/h6&gt;

&lt;p&gt;In the past I‚Äôve been a regular &lt;a href=&quot;http://byobu.co/&quot;&gt;byobu&lt;/a&gt; user, a distribution for common terminal multiplexers (&lt;a href=&quot;http://tmux.github.io/&quot;&gt;tmux&lt;/a&gt;, &lt;a href=&quot;https://www.gnu.org/software/screen/&quot;&gt;screen&lt;/a&gt;). A terminal multiplexer is a utility who allows you to manage several sessions and windows within the same program, kind of a window manager for the console. In my case I mostly use it to improve the robustness of remote ssh connections. In default ssh sessions if you lose the connection you lose your work, with terminal multiplexers you can ‚Äòdettach/attach‚Äô eternal living sessions which is quite useful to keep movility.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;&lt;img src=&quot;/assets/img/tundle.gif&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, like vi/emacs, the default screen/tmux settings are quite bad, so many people either personalize heavily its own settings or use a distribution/plugin system.&lt;/p&gt;

&lt;p&gt;I used to use byobu because of its ease of installation (at least on Ubuntu) and default status bar. However, for my needs, it looked overwhealming and was difficult to modify, I prefer systems with a plugin centric approach (like &lt;a href=&quot;https://github.com/javier-lopez/vundle&quot;&gt;vim + vundle&lt;/a&gt;, or &lt;a href=&quot;http://javier.io/blog/en/2013/11/15/shundle.html&quot;&gt;sh + shundle&lt;/a&gt;), so at the end I decided to migrate. Since tmux is way better than screen, I focused on it.&lt;/p&gt;

&lt;p&gt;There is a recent attempt to create a general tmux plugin environment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tpm&quot;&gt;tpm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins&quot;&gt;tmux-plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tpm and plugins is a great effort to cover the missing tmux features through an organized plugin system, it covers a fair amount of functionality and allows good granulity between plugins, however it also has its drawbacks, the most important ones for me are its dependency on bash and recent tmux releases (&amp;gt;=1.9), and its inability to install other but the latest version of any plugin (what if I want and older version with less features but more stability?). The tpm maintainer is a great guy however these issues are not at its top list and considering the amount of refactoring required to unmarry tpm from bash/specific tmux features, I finally decided to go my own, that‚Äôs how &lt;a href=&quot;https://github.com/javier-lopez/tundle&quot;&gt;tundle&lt;/a&gt; was born, an alternative tmux plugin environment with compatibility and control version in mind.&lt;/p&gt;

&lt;p&gt;I‚Äôve gone to a great lenght to ensure tundle runs in as many platforms as possible (at least where tmux is available) degrading slowly depending in the tmux features available (right now running in tmux &amp;gt;= 1.6 , older versions can be discussed), in addition to improved portability/performance it‚Äôs now possible to install plugins by git hash ensuring you only run code you trust. All other features are similiar, with the tipical fix here and there result of a complete code review.&lt;/p&gt;

&lt;h3 id=&quot;quick-start&quot;&gt;Quick start&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone --depth=1 https://github.com/javier-lopez/tundle ~/.tmux/plugins/tundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After installing tundle additional bundle/plugin modules can be defined at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.tmux.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;run-shell &quot;~/.tmux/plugins/tundle/tundle&quot;

#let tundle manage tundle, required!
setenv -g @bundle &quot;javier-lopez/tundle&quot;

#from GitHub
#you can specify a branch or commit sha checksum
setenv -g @bundle &quot;javier-lopez/tundle-plugins/tmux-sensible:c7b09&quot;
setenv -g @bundle &quot;gh:javier-lopez/tundle-plugins/tmux-pain-control&quot;
setenv -g @bundle &quot;github:javier-lopez/tundle-plugins/tmux-resurrect&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And installed by starting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tmux&lt;/code&gt; and pressing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl-b + I&lt;/code&gt; or running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.tmux/plugins/tundle/scripts/install_plugins.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tundle is able to install and run tpm plugins as well, but if you do so, portability is lost since tpm plugins will only work in tmux &amp;gt;= 1.9 and bash, if that‚Äôs not a problem go ahead you still will get extra syntax sugar and version control over your tmux environment.&lt;/p&gt;

&lt;p&gt;Additional tundle plugins are available at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/tundle-plugins&quot;&gt;tundle-plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy multiplexing üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>static-get: linux static binaries for lazy people</title>
   <link href="http://javier.io/blog/en/2015/06/23/static-get.html"/>
   <updated>2015-06-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/06/23/static-get</id>
   <content type="html">&lt;h2 id=&quot;static-get-linux-static-binaries-for-lazy-people&quot;&gt;static-get: linux static binaries for lazy people&lt;/h2&gt;

&lt;h6 id=&quot;23-jun-2015&quot;&gt;23 Jun 2015&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://javier.io/blog/en/2015/02/27/wget-finder.html&quot;&gt;Lastly&lt;/a&gt; I‚Äôve required static versions of common linux utilities, it‚Äôs been fun to compile them a couple of times but it gets boring pretty quickly, so I‚Äôve decided to create a repository with all the static recipes I‚Äôve found on Internet (&lt;a href=&quot;https://github.com/jelaas/bifrost-build&quot;&gt;bifrost&lt;/a&gt;, &lt;a href=&quot;http://morpheus.2f30.org/&quot;&gt;morpheus&lt;/a&gt;, &lt;a href=&quot;https://github.com/minos-org/minos-static/tree/master/misc-autosync-resources&quot;&gt;etc&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now I can get &lt;em&gt;git static&lt;/em&gt; with:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ static-get git
git-1.9.2.tar.xz
$ static-get -x git #download and extract in one go
git-1.9.2.tar.xz
git-1.9.2/
$ sh &amp;lt;(wget -qO- s.minos.io/s) -x git #retrieve the installer, download the target and extract in one go
&lt;/pre&gt;

&lt;p&gt;To get a list of all available packages, you can run:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ static-get --search
&lt;/pre&gt;

&lt;p&gt;Be aware than using static binaries have its &lt;a href=&quot;http://www.akkadia.org/drepper/no_static_linking.html&quot;&gt;drawbacks&lt;/a&gt;, I take no responsability for any damage caused by any binary downloaded with &lt;a href=&quot;https://raw.githubusercontent.com/minos-org/minos-static/master/static-get&quot;&gt;static-get&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy fetching üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jelaas/bifrost-build&quot;&gt;bifrost&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://morpheus.2f30.org/&quot;&gt;morpheus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sabotage-linux/sabotage&quot;&gt;sabotage, not real static recipes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://portablelinuxapps.org&quot;&gt;portablelinuxapps, not real static recipes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minos-org/minos-static&quot;&gt;https://github.com/minos-org/minos-static&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.janhouse.lv/blog/linux/building-static-binaries-on-linux/&quot;&gt;https://www.janhouse.lv/blog/linux/building-static-binaries-on-linux/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>sentry, an alternative to fail2ban and other bruteforce blocking daemons</title>
   <link href="http://javier.io/blog/en/2015/03/25/sentry-an-alternative-to-bruteforce-blocking-daemons.html"/>
   <updated>2015-03-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/03/25/sentry-an-alternative-to-bruteforce-blocking-daemons</id>
   <content type="html">&lt;h2 id=&quot;sentry-an-alternative-to-fail2ban-and-other-bruteforce-blocking-daemons&quot;&gt;sentry, an alternative to fail2ban and other bruteforce blocking daemons&lt;/h2&gt;

&lt;h6 id=&quot;25-mar-2015&quot;&gt;25 Mar 2015&lt;/h6&gt;

&lt;p&gt;I‚Äôve just migrated my servers from using fail2ban to sentry, and it feels quite efficient =), so I‚Äôm doing this post as a way to increase sentry awareness.&lt;/p&gt;

&lt;p&gt;Sentry is a program who detects and prevents bruteforce attacks against sshd and other network services using minimal system resources. Instead of running a daemon who constantly reads log files it runs a perl script who uses tcpwrappers for tracking connections and blocking access by ip, tcpwrappers is already installed in most modern UNICES systems (Linux, Mac OSX and FreeBSD). So if you additionally have perl installed it adds 0 dependencies.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;h2 id=&quot;ubuntu--minos&quot;&gt;Ubuntu | Minos&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install sentry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;others&quot;&gt;Others&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget http://www.tnpi.net/internet/sentry.pl
$ sudo perl sentry.pl
$ echo &quot;sshd : /var/db/sentry/hosts.deny : deny&quot; &amp;gt; hosts
$ echo &quot;sshd : ALL : spawn /var/db/sentry/sentry.pl -c --ip=%a : allowsendmail: all&quot; &amp;gt;&amp;gt; hosts
$ cat hosts /etc/hosts.allow &amp;gt; hosts.allow
$ sudo mv hosts.allow /etc/ &amp;amp;&amp;amp; rm hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;Upon installation it doesn‚Äôt require anything else, it‚Äôll just works, to see some statistics run:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo /var/db/sentry/sentry.pl -r
no IP, skip info
   -------- summary ---------
  42 unique IPs have connected 190 times
   1 IPs are whitelisted
  38 IPs are blacklisted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To see blocked IPs&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo head -3 /var/db/sentry/hosts.deny
ALL: 103.41.124.119 : deny
ALL: 103.41.124.136 : deny
ALL: 115.230.124.208 : deny
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The list can be edited either manually or through the ‚Äìwhitelist, ‚Äìblacklist and ‚Äìdelist sentry.pl options&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo /var/db/sentry/sentry.pl --ip=103.41.124.119 --delist
$ sudo /var/db/sentry/sentry.pl --ip=103.41.124.119 --whitelist
$ sudo /var/db/sentry/sentry.pl --ip=103.41.124.119 --delist
$ sudo /var/db/sentry/sentry.pl --ip=103.41.124.119 --blacklist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy blocking üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tnpi.net/wiki/Sentry&quot;&gt;https://www.tnpi.net/wiki/Sentry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>pianocat</title>
   <link href="http://javier.io/blog/en/2015/03/12/pianocat.html"/>
   <updated>2015-03-12T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/03/12/pianocat</id>
   <content type="html">&lt;h2 id=&quot;pianocat&quot;&gt;pianocat&lt;/h2&gt;

&lt;h6 id=&quot;12-mar-2015&quot;&gt;12 Mar 2015&lt;/h6&gt;

&lt;p&gt;Lastly I‚Äôve been wondering why some music tones are so sticky, with this in mind, I‚Äôve enrolled in ‚Äú&lt;a href=&quot;https://class.coursera.org/introclassicalmusic-001&quot;&gt;Introduction to Classical Music&lt;/a&gt;‚Äù on Coursera (which I totally recommend) and read about how musical notation and notes work.&lt;/p&gt;

&lt;p&gt;It turned out than a piano is quite useful when learning these matters, unfortunately I don‚Äôt own one and have no plans to get any soon, so I decided to emulate it, as often happens, &lt;a href=&quot;https://raw.githubusercontent.com/ssshake/console4kids/master/piano&quot;&gt;someone had already worked in something similar&lt;/a&gt;, so I took the work and adapt it to me and that‚Äôs how pianocat was born.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ #basic tone
$ echo &quot;D4 F4 - G4 A4 - A#4 A4 G4 - E4 C4 - D4 E4 F4&quot;    \
  &quot;- D4 D4 - C#4 D4 E4 - C#4 C#4 - D4 F4 - G4 A4 - A#4&quot;  \
  &quot;A4 G4 - E4 C4 - D4 E4 F4 - E4 D4 C#4 - C#4 D4 - - D4&quot; | pianocat

$ #a more elaborated version of the previous melody
$ echo &quot;T:4/4 L:1/4 D4 F4:2 ! G4 A4:2 ! A#4:.5 A4:.5&quot;     \
  &quot;G4:2 ! E4 C4:2 ! D4:.5 E4:.5 F4:2 ! D4 D4:2 ! C#4:.5&quot;  \
  &quot;D4:.5 E4:2 ! C#4 C#4:2 ! D4 F4:2 ! G4 A4:2 ! A#4:.5&quot;   \
  &quot;A4:.5 G4:2 ! E4 C4:2 ! D4:.5 E4:.5 F4:2 ! E4:.5 D4:.5&quot; \
  &quot;C#4:2 ! C#4 D4:2 - D4:4&quot; | pianocat
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/pianocat&quot;&gt;Pianocat&lt;/a&gt; can also be used in interactive mode:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pianocat
 _______________________________________________
|  | | | |  |  | | | | | |  |  | | | |  |  | |  |
|  | | | |  |  | | | | | |  |  | | | |  |  | |  |
|  |w| |r|  |  |t| |y| |u|  |  |o| |p|  |  |+|  |
|  |_| |_|  |  |_| |_| |_|  |  |_| |_|  |  |_|  |
|   |   |   |   |   |   |   |   |   |   |   |   |
| a | s | d | f | g | h | j | k | l | √± | { | } |
|___|___|___|___|___|___|___|___|___|___|___|___|

Press any key to play, 1..7 to select an octave
      (by default 4) or Esc to exit

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The sounds is quite bad, but it works so I‚Äôm leaving it like this for now. Thanks to the sox developers, to &lt;a href=&quot;https://github.com/ssshake&quot;&gt;ssshake&lt;/a&gt; for the initial snippet and to &lt;a href=&quot;https://github.com/s-d-m&quot;&gt;Sam da Mota&lt;/a&gt; for additional comments and pianoterm awareness.&lt;/p&gt;

&lt;p&gt;UPDATE: 2015-03-19&lt;/p&gt;

&lt;p&gt;Thanks to Martin Capodici pianocat now is able to play real piano tunes =)!, to use them follow the next procedure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone --depth=1 git@github.com:javier-lopez/pianosounds.git
$ cd pianosounds #or mv pianosounds ~/.pianocat
$ pianocat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you don‚Äôt have git, try:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget http://f.javier.io/rep/audio/pianosounds.tar.xz  #or
$ wget http://f.javier.io/rep/audio/pianosounds.tar.bz2 #or
$ wget http://f.javier.io/rep/audio/pianosounds.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs it, happy humming üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ssshake/console4kids/master/piano&quot;&gt;https://raw.githubusercontent.com/ssshake/console4kids/master/piano&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s-d-m/pianoterm&quot;&gt;https://github.com/s-d-m/pianoterm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>wget-finder for packagers</title>
   <link href="http://javier.io/blog/en/2015/02/27/wget-finder.html"/>
   <updated>2015-02-27T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/02/27/wget-finder</id>
   <content type="html">&lt;h2 id=&quot;wget-finder-for-packagers&quot;&gt;wget-finder for packagers&lt;/h2&gt;

&lt;h6 id=&quot;27-feb-2015&quot;&gt;27 Feb 2015&lt;/h6&gt;

&lt;p&gt;Since some days ago I‚Äôve been playing with &lt;a href=&quot;https://github.com/jelaas/bifrost-build&quot;&gt;bifrost-build&lt;/a&gt;, a github repository with recipes for building static linux binaries.&lt;/p&gt;

&lt;p&gt;The recipes are no different from other linux distributions where an archive hardcoded (containing the original source code) needs to be downloaded and match an specific hash (in this case a md5sum) to continue the build.&lt;/p&gt;

&lt;p&gt;While I was reviewing the recipes I noticed than some origins wheren‚Äôt available anymore. Fortunately there are plenty of mirrors for the most common utils installed with any linux system, so it wasn‚Äôt difficult to find alternative urls from where to fetch the missing bits (thanks mirrors and bifrost-build!).&lt;/p&gt;

&lt;p&gt;After completing the builds I though that it shouldn‚Äôt be too difficult to automate this task, to create a program who could search and download an specific archive matching a checksum. That‚Äôs how &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/wget-finder&quot;&gt;wget-finder&lt;/a&gt; was born.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget-finder
Usage: wget-finder [OPTION]... FILE:CHECKSUM...
&lt;/pre&gt;

&lt;p&gt;The idea is simple, wget-finder will search for files e.g. socat-1.7.2.0.tar.gz matching an specific checksum(it supports md5, sha1, sha256 and sha512) on different search engines (currently google, and ftplike, more engines are welcome!) and will download the appropiate (actually it will download some of them till the checksum matches)&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget-finder socat-1.7.2.0.tar.gz:0565dd58800e4c50534c61bbb453b771
socat-1.7.2.0.tar.gz
$ wget-finder -O libssh.tar.gz libssh2-1.3.0.tar.gz:6425331899ccf1015f1ed79448cb4709
libssh.tar.gz
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, happy fetching üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>fix github rendering in old firefox releases with greasemonkey</title>
   <link href="http://javier.io/blog/en/2015/02/11/github-rendering-firefox-greasemonkey.html"/>
   <updated>2015-02-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/02/11/github-rendering-firefox-greasemonkey</id>
   <content type="html">&lt;h2 id=&quot;fix-github-rendering-in-old-firefox-releases-with-greasemonkey&quot;&gt;fix github rendering in old firefox releases with greasemonkey&lt;/h2&gt;

&lt;h6 id=&quot;11-feb-2015&quot;&gt;11 Feb 2015&lt;/h6&gt;

&lt;p&gt;When the new firefox interface (aurora) was announced I knew I would never install it, since then I‚Äôve been looking for alternatives, in the meantime I‚Äôve been using an &lt;a href=&quot;http://f.javier.io/rep/bin/firefox32.tar.bz2&quot;&gt;old&lt;/a&gt; &lt;a href=&quot;http://f.javier.io/rep/bin/firefox64.tar.bz2&quot;&gt;firefox&lt;/a&gt; release (27.0), it‚Äôs been great so far, however some days ago &lt;a href=&quot;https://github.com&quot;&gt;https://github.com&lt;/a&gt; started looking funny. Paniiiic üò±!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/102.png&quot;&gt;&lt;img src=&quot;/assets/img/102.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I contacted support but they told me they didn‚Äôt support such old releases (and think it‚Äôs barely 1 year old, pff, progress‚Ä¶) so I went ahead and hacked a quick greasemonkey script.&lt;/p&gt;

&lt;pre class=&quot;sh_javascript&quot;&gt;
function addGlobalStyle(css) {
    var head, style;
    head = document.getElementsByTagName('head')[0];
    if (!head) { return; }
    style = document.createElement('style');
    style.type = 'text/css';
    style.innerHTML = css;
    head.appendChild(style);
}

//github.com/user
addGlobalStyle('.one-fourth {width: 20%}');
addGlobalStyle('.one-half {width: 47%}');
addGlobalStyle('img.avatar {max-width: 200px; max-height: 200px;}');

//github.com
addGlobalStyle('.two-thirds {width: 63%}');
addGlobalStyle('.site-search input[type=&quot;text&quot;] {width: 90%}');
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/103.png&quot;&gt;&lt;img src=&quot;/assets/img/103.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy collaborating üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>youtube videos from terminal</title>
   <link href="http://javier.io/blog/en/2015/01/10/youtube-videos-from-terminal.html"/>
   <updated>2015-01-10T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2015/01/10/youtube-videos-from-terminal</id>
   <content type="html">&lt;h2 id=&quot;youtube-videos-from-terminal&quot;&gt;youtube videos from terminal&lt;/h2&gt;

&lt;h6 id=&quot;10-jan-2015&quot;&gt;10 Jan 2015&lt;/h6&gt;

&lt;p&gt;There are multiple ways to see youtube videos from a linux terminal, one of the simplest (and more unix ways) is with mplayer+youtube-dl. Mplayer for playing and youtube-dl for fetching the content.&lt;/p&gt;

&lt;p&gt;To do so, go to a shell terminal and define the following alias:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ alias youtube-slice='sh -c '\''youtube-dl -q -o- &quot;${1}&quot; | mplayer -cache 8192 -'\'' -'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ youtube-slice $url
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Will work nicely. If you are interested in this and more cool aliases, checkout aliazator, it‚Äôs tons of handy ones waiting for you to discover them.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rg3.github.io/youtube-dl/download.html&quot;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/shundle-plugins/tree/master/aliazator&quot;&gt;aliazator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy watching üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>using vim objects in bash</title>
   <link href="http://javier.io/blog/en/2014/11/16/vim-objects-in-bash.html"/>
   <updated>2014-11-16T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/11/16/vim-objects-in-bash</id>
   <content type="html">&lt;h2 id=&quot;using-vim-objects-in-bash&quot;&gt;using vim objects in bash&lt;/h2&gt;

&lt;h6 id=&quot;16-nov-2014&quot;&gt;16 Nov 2014&lt;/h6&gt;

&lt;p&gt;I‚Äôve been using &lt;a href=&quot;http://www.catonmat.net/blog/bash-vi-editing-mode-cheat-sheet/&quot;&gt;vi-mode&lt;/a&gt; in bash for a couple of years now, more than once I‚Äôve tried to edit something with &lt;strong&gt;ci‚Äù&lt;/strong&gt;, &lt;strong&gt;ca(&lt;/strong&gt;, or any other popular &lt;a href=&quot;http://blog.carbonfive.com/2011/10/17/vim-text-objects-the-definitive-guide/&quot;&gt;vim object&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This week decided to go further and see how to do it, and it turned out to be possible =), so if you‚Äôve missed this feature too you can now enjoy it by following this procedure&lt;/p&gt;

&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:minos-archive/main #only Ubuntu LTS releases
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install bash-minos-settings
$ echo 'set -o vi' &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you‚Äôre not interested in installing the whole enchilada or aren‚Äôt running an apt-get powered OS, you can get the raw inputrc file at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minos-org/bash-minos-settings/blob/master/etc.inputrc&quot;&gt;https://github.com/minos-org/bash-minos-settings/blob/master/etc.inputrc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the later case, the inputrc file should be placed at &lt;strong&gt;~/.inputr&lt;/strong&gt; or &lt;strong&gt;/etc/inputrc&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Happy editing üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>hints for writing unix tools with shell scripting</title>
   <link href="http://javier.io/blog/en/2014/10/21/hints-in-writing-unix-tools-with-shell-scripting.html"/>
   <updated>2014-10-21T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/10/21/hints-in-writing-unix-tools-with-shell-scripting</id>
   <content type="html">&lt;h2 id=&quot;hints-for-writing-unix-tools-with-shell-scripting&quot;&gt;hints for writing unix tools with shell scripting&lt;/h2&gt;

&lt;h6 id=&quot;21-oct-2014&quot;&gt;21 Oct 2014&lt;/h6&gt;

&lt;p&gt;Yesterday I started my day reading &lt;a href=&quot;http://monkey.org/~marius/unix-tools-hints.html&quot;&gt;Hints for writing Unix tools&lt;/a&gt;. And since I agree to a great extend I though in giving more details about how to build such tools with my favorite language. I‚Äôd really enjoy reading similar entries aimed to other langs.&lt;/p&gt;

&lt;h2 id=&quot;consume-input-from-stdin-produce-output-to-stdout&quot;&gt;Consume input from stdin, produce output to stdout&lt;/h2&gt;

&lt;p&gt;In Unix you can usually refer to stdin and stdout using file descriptors 1 and 2, we do it all the time, for example to send all errors in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find&lt;/code&gt; command to /dev/null you can type:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ find / -name &quot;*pattern*&quot; 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And it so happens than bash/zsh/sh/ and probably many other shells can test if a fd is open and associated to a terminal with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-t&lt;/code&gt; test.&lt;/p&gt;

&lt;p&gt;With this knowledge consuming input and modifying the behavior of your programs to act different depending to where it goes (pipe, file, stdout) is as easy as testing if the appropriate fd is active. For instance, to consume the standard input in your programs the following will work if placed properly (before parsing options?):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- &quot;${@}&quot; $(cat)
fi
&lt;/pre&gt;

&lt;p&gt;To control the output, you can test for fd 1 as in this example,&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if command -v &quot;xclip&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || [ -t 1 ];  then
    printf &quot;%s\\n&quot; &quot;${_translate_var_result}&quot; | xclip -selection clipboard &amp;amp;&amp;amp; xclip -o -selection clipboard
else
    printf &quot;%s\\n&quot; &quot;${_translate_var_result}&quot;
fi
&lt;/pre&gt;

&lt;p&gt;The above will allow to use &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/translate&quot;&gt;translate&lt;/a&gt; in the following ways:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ translate hola
$ echo hola | translate
$ echo hola | translate | sed &quot;s:$: world:&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;output-should-be-free-from-header-or-other-decoration&quot;&gt;Output should be free from header or other decoration&lt;/h2&gt;

&lt;p&gt;Adding options in shell scripts are easy, if you like adding extra sugar to your output, consider doing it within them, some examples are; -v, ‚Äìverbose, -a, ‚Äìall, etc, but by default try to output the simplest response, consider &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/howdoi&quot;&gt;howdoi&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ howdoi extract a tar.bz2 package in unix
tar -xjf /path/to/archive.tar.bz

$ howdoi -a extract a tar.bz2 package in unix
use the -j option of tar.
   tar -xjf /path/to/archive.tar.bz
-----
If it's really an old bzip 1 archive, try:
   bunzip archive.tar.bz
and you'll have a standard tar file.
Otherwise, it's the same as with .tar.bz2 files.
-----
http://stackoverflow.com/questions/9454929/how-can-i-untar-a-tar-bz-file-in-unix

$ howdoi -l extract a tar.bz2 package in unix
http://stackoverflow.com/questions/9454929/how-can-i-untar-a-tar-bz-file-in-unix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Global vars are a good way to track output options.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
for arg; do #parse options
case &quot;${arg}&quot; in
-a) AFLAG=&quot;set&quot;; shift;;
-l) LFLAG=&quot;set&quot;; shift;;
-c) CFLAG=&quot;set&quot;; shift;;
&lt;/pre&gt;

&lt;h2 id=&quot;treat-a-tools-output-as-an-api&quot;&gt;Treat a tool‚Äôs output as an API&lt;/h2&gt;

&lt;p&gt;You can create tests to ensure that your output format doesn‚Äôt change and actually works. There are &lt;a href=&quot;http://shunit.sourceforge.net/&quot;&gt;several&lt;/a&gt; &lt;a href=&quot;http://bmizerany.github.io/roundup/&quot;&gt;test suites&lt;/a&gt; capable of managing &lt;a href=&quot;https://github.com/lehmannro/assert.sh&quot;&gt;shell&lt;/a&gt; &lt;a href=&quot;http://joyful.com/shelltestrunner/&quot;&gt;scripts&lt;/a&gt;, but one of the simplest is &lt;a href=&quot;http://fossies.org/linux/shtool/test.sh&quot;&gt;shtool test suite&lt;/a&gt; by Ralf S. Engelschall.&lt;/p&gt;

&lt;p&gt;Let‚Äôs retake the previous script and add some tests:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
@begin{howdoi}
howdoi; test X&quot;${?}&quot;                                  = X&quot;1&quot;
printf &quot;%s&quot; '-h' | howdoi; test X&quot;${?}&quot;               = X&quot;1&quot;
howdoi --help ; test X&quot;${?}&quot;                          = X&quot;1&quot;
howdoi --cui; test X&quot;${?}&quot;                            = X&quot;1&quot;
test X&quot;$(howdoi 2&amp;gt;&amp;amp;1|head -1)&quot;                        = X&quot;Usage: howdoi [options] query ...&quot;
test X&quot;$(howdoi -h 2&amp;gt;&amp;amp;1|head -1)&quot;                     = X&quot;Usage: howdoi [options] query ...&quot;
test X&quot;$(printf &quot;%s&quot; '--help' | howdoi 2&amp;gt;&amp;amp;1|head -1)&quot; = X&quot;Usage: howdoi [options] query ...&quot;
test X&quot;$(howdoi -cui 2&amp;gt;&amp;amp;1|head -1)&quot;                   = X&quot;howdoi: unrecognized option \`-cui'&quot;
test X&quot;$(howdoi -n 2&amp;gt;&amp;amp;1|head -1)&quot;                     = X&quot;Option \`-n' requires a parameter&quot;
test X&quot;$(howdoi -n cui 2&amp;gt;&amp;amp;1|head -1)&quot;                 = X&quot;Option \`-n' requires a number: 'cui'&quot;
test X&quot;$(howdoi XaMTWGfu89iQpJk6 2&amp;gt;&amp;amp;1|head -1)&quot;       = X&quot;howdoi: No results&quot;
test X&quot;$(howdoi -C 2&amp;gt;&amp;amp;1)&quot;                             = X&quot;Cache cleared successfully&quot;
test ! -d ~/.cache/howdoi
test X&quot;$(howdoi XaMTWGfu89iQpJk6 2&amp;gt;&amp;amp;1|head -1)&quot;       = X&quot;howdoi: No results&quot;
test -d ~/.cache/howdoi
@end
&lt;/pre&gt;

&lt;p&gt;If you include the output format in your tests it would be harder to change it continuously.&lt;/p&gt;

&lt;h2 id=&quot;place-diagnostics-output-on-stderr&quot;&gt;Place diagnostics output on stderr.&lt;/h2&gt;

&lt;p&gt;This one is really easy, adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&amp;amp;2&lt;/code&gt; to all diagnostic, help and verbose messages will do it.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
#before
printf &quot;%s\\n&quot; &quot;$(expr &quot;${0}&quot; : '.*/\([^/]*\)'): unrecognized option '${arg}'&quot;

#after
printf &quot;%s\\n&quot; &quot;$(expr &quot;${0}&quot; : '.*/\([^/]*\)'): unrecognized option '${arg}'&quot; &amp;gt;&amp;amp;2
&lt;/pre&gt;

&lt;h2 id=&quot;signal-failure-with-an-exit-status&quot;&gt;Signal failure with an exit status.&lt;/h2&gt;

&lt;p&gt;The current status can be set in bash/zsh/sh with either &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;: (true)&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first three can be used to set the current status in iterations, e,g.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
_rdeps()
{
    [ -z &quot;${1}&quot; ] &amp;amp;&amp;amp; return 1

    for _rdeps_var_binary; do
        fpath=&quot;$(command -v &quot;${_rdeps_var_binary}&quot;)&quot;
        [ -z &quot;${fpath}&quot; ] &amp;amp;&amp;amp; continue

        if ldd &quot;${fpath}&quot; &amp;gt;/dev/null 2&amp;gt;/dev/null; then
            ldd &quot;${fpath}&quot; | sort -n | uniq | awk '{print $1}' | xargs -i apt-file search {} | cut -d':' -f1 | sort | uniq
        else
            printf &quot;$(expr &quot;${0}&quot; : '.*/\([^/]*\)'): %s\\n&quot; &quot;not a dynamic executable '${fpath}'&quot; &amp;gt;&amp;amp;2 &amp;amp;&amp;amp; false
        fi
    done
}
&lt;/pre&gt;

&lt;p&gt;The above code will set the status to 1 without necessary quitting or returning from the function, except when no parameter is present&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit #number&lt;/code&gt; can be used at any to exit the program with the specified status, it‚Äôs quite useful when testing for dependencies and exit with error if any of them is not available, e.g.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if ! command -v &quot;curl&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
    printf &quot;%s\\n&quot; &quot;you need to install 'curl' to run this program&quot; &amp;gt;&amp;amp;2
    exit 1
fi
&lt;/pre&gt;

&lt;h2 id=&quot;omit-needless-diagnostics&quot;&gt;Omit needless diagnostics.&lt;/h2&gt;

&lt;p&gt;As stated in &lt;em&gt;Omit needless diagnostics.&lt;/em&gt; output should be as clear and simple as possible, a verbose function can be defined and used as follows:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
_verbose()
{
    [ -z &quot;${1}&quot; ] &amp;amp;&amp;amp; return 1
    [ -n &quot;${VFLAG}&quot; ] &amp;amp;&amp;amp; printf &quot;%b\\n&quot; &quot;${*}&quot;
}


for arg; do #parse options
case &quot;${arg}&quot; in
-v|--verbose) VFLAG=&quot;set&quot;; shift;;
...
esac

_verbose &quot;detailed message&quot;
&lt;/pre&gt;

&lt;p&gt;And for debugging, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set -x&lt;/code&gt; will help to see most of the issues most of the times.&lt;/p&gt;

&lt;h2 id=&quot;avoid-making-interactive-programs&quot;&gt;Avoid making interactive programs&lt;/h2&gt;

&lt;p&gt;Doing interactive programs in shell scripting is actually harder than parsing cli arguments and outputting simple strings. So it shouldn‚Äôt be difficult to follow this principle, but if you still want breaking it, ensure interactive is only an additional mode and you still have a batch one.&lt;/p&gt;

&lt;p&gt;Happy tooling üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://monkey.org/~marius/unix-tools-hints.html&quot;&gt;http://monkey.org/~marius/unix-tools-hints.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/guideline.md&quot;&gt;Personal guidelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/books/Beginning_shell_scripting.pdf&quot;&gt;Beginning shell scripting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/tree/master/sh&quot;&gt;Shell scripts following exposed advices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>ssh into a guest vbox machine on NAT mode</title>
   <link href="http://javier.io/blog/en/2014/09/13/ssh-into-guess-virtualbox-using-nat.html"/>
   <updated>2014-09-13T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/09/13/ssh-into-guess-virtualbox-using-nat</id>
   <content type="html">&lt;h2 id=&quot;ssh-into-a-guest-vbox-machine-on-nat-mode&quot;&gt;ssh into a guest vbox machine on NAT mode&lt;/h2&gt;

&lt;h6 id=&quot;13-sep-2014&quot;&gt;13 Sep 2014&lt;/h6&gt;

&lt;p&gt;This is a quick reminder to myself, for this to work a ssh server must be running in the guest machine.&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;In the VM network panel, click in &lt;strong&gt;advanced&lt;/strong&gt; and then in the &lt;strong&gt;Port Forwarding&lt;/strong&gt; button, there setup the next rule:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host IP: 127.0.0.1&lt;/li&gt;
  &lt;li&gt;Host Port: 2222&lt;/li&gt;
  &lt;li&gt;Guest IP: 10.0.0.2 (or the ip of the guest machine)&lt;/li&gt;
  &lt;li&gt;Guest Port: 22 (or personalized ssh port)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save changes&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -p 2222 user@localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy remote working üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.virtualbox.org/viewtopic.php?f=8&amp;amp;t=55766&quot;&gt;https://forums.virtualbox.org/viewtopic.php?f=8&amp;amp;t=55766&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>strip mp3 tags with ffmpeg</title>
   <link href="http://javier.io/blog/en/2014/08/11/strip-mp3-tags-with-ffmpeg.html"/>
   <updated>2014-08-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/08/11/strip-mp3-tags-with-ffmpeg</id>
   <content type="html">&lt;h2 id=&quot;strip-mp3-tags-with-ffmpeg&quot;&gt;strip mp3 tags with ffmpeg&lt;/h2&gt;

&lt;h6 id=&quot;11-aug-2014&quot;&gt;11 Aug 2014&lt;/h6&gt;

&lt;p&gt;I use mpd to satisfy my local music player needs, mpd reads multimedia tags and attaches them to its database, I use these tags to look for tracks and artists fastly, however sometimes I end with mp3 files containing unuseful tags, on these cases I wish mpd could look for filenames instead of mp3 tags because when it doesn‚Äôt it makes incredible difficult to find these tracks. Since I‚Äôve not managed to find this feature (if such feature exist) I just strip the problematic tags (someday I‚Äôll learn to edit them instead or to program the missing part).&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ffmpeg -i track.mp3 -acodec copy -map_metadata -1 track.t.mp3 &amp;amp;&amp;amp; mv track.t.mp3 track.mp3
&lt;/pre&gt;

&lt;p&gt;If you find the above command useful you can create an alias/function.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias strip.mp3tags='sh -c '\''ffmpeg -i &quot;$1&quot; -acodec copy -map_metadata -1 &quot;$1&quot;.t.mp3 &amp;amp;&amp;amp; mv &quot;${1}&quot;.t.mp3 &quot;${1}&quot;'\'' -'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Happy stripping üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>detect file moves and renames with rsync</title>
   <link href="http://javier.io/blog/en/2014/08/06/rsync-rename-move.html"/>
   <updated>2014-08-06T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/08/06/rsync-rename-move</id>
   <content type="html">&lt;h2 id=&quot;detect-file-moves-and-renames-with-rsync&quot;&gt;detect file moves and renames with rsync&lt;/h2&gt;

&lt;h6 id=&quot;06-aug-2014&quot;&gt;06 Aug 2014&lt;/h6&gt;

&lt;p&gt;I use rsync to backup my &lt;em&gt;$HOME&lt;/em&gt; directory everyday with something like this:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo rsync -az --one-file-system --delete $HOME/ admin@backup.javier.io:~/backup/$(hostname)
&lt;/pre&gt;

&lt;p&gt;Most of the times it takes me less than &lt;strong&gt;10&lt;/strong&gt; minutes at 2MB/s to re-sync everything, however last weekend it took almost &lt;strong&gt;20 hours!&lt;/strong&gt; so while I was waiting I decided to take a look to see what was happening. It turned out rsync was re-uploading some pretty heavy files because I had renamed them locally. I couldn‚Äôt believe rsync was so dumb, I was shocked O_O&lt;/p&gt;

&lt;p&gt;So I went to Internet and looked for solutions, fortunatelly some other guys had found this problem before and created a couple of patches:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://attachments.samba.org/attachment.cgi?id=7435&quot;&gt;detect-renamed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git.samba.org/?p=rsync-patches.git;a=blob;f=detect-renamed-lax.diff;h=4cd23bd4524662f1d0db0bcc90336a77d0bb61c9;hb=HEAD&quot;&gt;detect-renamed-lax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These patches add the following options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;‚Äìdetect-renamed, ‚Äìdetect-renamed-lax&lt;/li&gt;
  &lt;li&gt;‚Äìdetect-moved&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I‚Äôm not the kind of person who enjoys spending their time compiling software I packaged a modified rsync version for supported Ubuntu LTS versions and upload it somewhere, while doing it I updated the patches to make them compile with the latest rsync version (at the moment of writing this version 3.1.1).&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-add-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install rsync
&lt;/pre&gt;

&lt;p&gt;In my personal tests the modified rsync shows an amazing speed up for uploads who involve renamed/moved files, so I‚Äôm installing this in all my computers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: For this to work, both, server and client must have installed the modified rsync version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Happy uploading üòã&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugzilla.samba.org/show_bug.cgi?id=2294&quot;&gt;https://bugzilla.samba.org/show_bug.cgi?id=2294&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/rsync/+bug/1353792&quot;&gt;https://bugs.launchpad.net/ubuntu/+source/rsync/+bug/1353792&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/patches/rsync-3.1.1-trusty-detect-renamed.diff&quot;&gt;https://github.com/javier-lopez/learn/blob/master/patches/rsync-3.1.1-trusty-detect-renamed.diff&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/patches/rsync-3.1.1-trusty-detect-renamed-lax.diff&quot;&gt;https://github.com/javier-lopez/learn/blob/master/patches/rsync-3.1.1-trusty-detect-renamed-lax.diff&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>installing debian build dependencies the smart way</title>
   <link href="http://javier.io/blog/en/2014/04/16/installing-debian-build-dependencies-the-smart-way.html"/>
   <updated>2014-04-16T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/04/16/installing-debian-build-dependencies-the-smart-way</id>
   <content type="html">&lt;h2 id=&quot;installing-debian-build-dependencies-the-smart-way&quot;&gt;installing debian build dependencies the smart way&lt;/h2&gt;

&lt;h6 id=&quot;16-apr-2014&quot;&gt;16 Apr 2014&lt;/h6&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The Problem&lt;/h3&gt;

&lt;p&gt;So you‚Äôre trying to build a Debian package from an upstream source tree, but you‚Äôre not sure what build dependencies you should install? I have this problem all the time. For example, if I wanted to build the unity source tree into a debian package, I‚Äôd branch it:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ bzr branch lp:unity
&lt;/pre&gt;

&lt;p&gt;‚Ä¶change into the directory:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cd unity
&lt;/pre&gt;

&lt;p&gt;‚Ä¶and then try and build it. Needless to say, I almost never have the required build dependencies installed. You can try and use apt-get to install the build dependencies for you:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get build-dep unity
&lt;/pre&gt;

&lt;p&gt;But that reads the build dependencies from whatever version is present in the distribution, not the dependencies in the source tree.&lt;/p&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The Solution&lt;/h3&gt;

&lt;p&gt;The solution is easy. First, install a couple of packages:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install devscripts equivs
&lt;/pre&gt;

&lt;p&gt;Then run this from within the source tree to install the build dependencies:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo mk-build-deps -i
&lt;/pre&gt;

&lt;p&gt;If, after this command completes you still cannot build the package, you should probably file a bug against the upstream project!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tech-foo.net/installing-build-dependencies-the-smart-way.html&quot;&gt;http://www.tech-foo.net/installing-build-dependencies-the-smart-way.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>backups with rsync and rdiff-backup</title>
   <link href="http://javier.io/blog/en/2014/04/08/backups-git-rsync-rdiff-backup.html"/>
   <updated>2014-04-08T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/04/08/backups-git-rsync-rdiff-backup</id>
   <content type="html">&lt;h2 id=&quot;backups-with-rsync-and-rdiff-backup&quot;&gt;backups with rsync and rdiff-backup&lt;/h2&gt;

&lt;h6 id=&quot;08-apr-2014&quot;&gt;08 Apr 2014&lt;/h6&gt;

&lt;p&gt;I don‚Äôt remember the last time I lost information, that‚Äôs been mostly luck since I‚Äôm not really careful with my data. However with internet providers increasing bandwidth, efficient compression algorithms all around and affordable servers in the cloud I finally decided to give up my luck and automate my backup plan.&lt;/p&gt;

&lt;p&gt;I‚Äôm fortunate to work in an homogeneous environment, Linux x32/x64 boxes, so I can cling to the lowest common denominator, on this case ssh/rsync. Both are installed (or available through default repositories) in virtually all Linux distributions and are secure, mature, efficient and well supported, there is a little issue with them though, they‚Äôve too many options and can be tricky to remember.&lt;/p&gt;

&lt;p&gt;So, with that in mind I grouped my favorite preferences and created a &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/backup-remote-rsync&quot;&gt;wrapper script&lt;/a&gt;. That‚Äôs what I use to backup machines, it works like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ backup-remote-rsync -r b.javier.io #the program will backup $HOME to b.javier.io:~/hostname using default ssh keys
$ backup-remote-rsync -r b.javier.io -u admin -k /home/admin/.ssh/id_rsa /var/www /etc
#the program will backup /var/www and /etc to b.javier.io:~/hostname, while using admin's public ssh keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above lines can be added to a cronjob to remove human dependency:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo cronjob -l
#every day at 22:00
0 22 * * * backup-remote-rsync -r backup.javier.io -u admin -i /home/admin/.ssh/id_rsa /home/admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It‚Äôs well known than rsync transfers files using a delta based mechanism, so once the initial backup is done further invocations are considerably faster, this is a great incentive to run backups often.&lt;/p&gt;

&lt;p&gt;On the server side, I used &lt;a href=&quot;http://www.nongnu.org/rdiff-backup/examples.html&quot;&gt;rdiff-backup&lt;/a&gt; to create dailies/weeklies/monthlies.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0 1 * * * rdiff-backup /home/admin/backup/ /home/admin/recover/daily
0 2 * * * rdiff-backup --remove-older-than 6D /home/admin/recover/daily

0 1 * * 0 rdiff-backup /home/admin/backup/ /home/admin/recover/weekly
0 2 * * 0 rdiff-backup --remove-older-than 3W /home/admin/recover/weekly

0 1 1 * * rdiff-backup /home/admin/backup/ /home/admin/recover/monthly
0 2 1 * * rdiff-backup --remove-older-than 12M /home/admin/recover/monthly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And added &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/share-backup&quot;&gt;share-backup&lt;/a&gt;, to provide fast and secure access to single files. Complete recoveries are available through standard rsync.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;share-backup&lt;/code&gt; usage example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh admin@b.javier.io share-backup
Starting server ...
  address   : http://b.javier.io:7648
  username: guest
  password: M2U4ZDRj
  ssl     :
  serving:  /home/admin/recovery

Run: share-backup stop, to stop sharing

$ ssh admin@b.javier.io share-backup stop
Stopped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;decisions&quot;&gt;Decisions&lt;/h2&gt;

&lt;p&gt;While testing backup utilities and differente strategies I found me asking me priority questions, is it more important to save hard disk space or to keep several copies around?, does the backup plan require third party integrations or can it be generic?, how many resources in time and money am I willing to invest?, how fast the recovery process must be?, how private the data is?.&lt;/p&gt;

&lt;p&gt;I tried to answer these questions as honestly as possible and found than the above procesure covers me in most situations, that doesn‚Äôt mean it will work for your. I urge you to test as many alternatives as possible and only stick with those that make you feel confortable and secure. If you‚Äôre out of ideas take a look at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.magiksys.net/ddumbfs/&quot;&gt;ddumbfs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://btrfs.wiki.kernel.org/index.php/Main_Page&quot;&gt;btrfs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s3fs-fuse/s3fs-fuse&quot;&gt;s3fs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://opendedup.org/&quot;&gt;opendedup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bup/bup&quot;&gt;bup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://obnam.org/&quot;&gt;obnam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bacula.org/&quot;&gt;bacula&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_backup_software&quot;&gt;etc&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That‚Äôs it, stay safe and backup your data now üòã!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ffcast</title>
   <link href="http://javier.io/blog/en/2014/03/21/ffcast.html"/>
   <updated>2014-03-21T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/03/21/ffcast</id>
   <content type="html">&lt;h2 id=&quot;ffcast&quot;&gt;ffcast&lt;/h2&gt;

&lt;h6 id=&quot;21-mar-2014&quot;&gt;21 Mar 2014&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/ffcast.gif&quot;&gt;&lt;img src=&quot;/assets/img/ffcast.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During the last days I‚Äôve rewrote &lt;a href=&quot;https://github.com/lolilolicon/FFcast2&quot;&gt;ffcast&lt;/a&gt; and package it (only for supported Ubuntu LTS versions) without an obvious reason. ffcast is a program to create screencasts. I‚Äôve already written similar utilities but this one is better.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-add-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install ffcast
&lt;/pre&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ffcast -s
&lt;/pre&gt;

&lt;p&gt;The above command will record the selected area and will create a movie with a random name (of 8 characters) in $HOME. It‚Äôll be a nice addition to my shortcuts üòã Another one-liner I‚Äôll probable use is:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ffcast -vv -s ffmpeg -follow_mouse centered -r 25 -- -f alsa -i hw:0 -vcodec libx264 cast.mkv
&lt;/pre&gt;

&lt;p&gt;It will make the screencast to follow my mouse. With ffcast is easy to create &lt;strong&gt;.gif&lt;/strong&gt; movies as well:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ffcast -s ffmpeg -r 15 -- -pix_fmt rgb24 out.gif
$ convert -layers Optimize out.gif out_opt.gif
&lt;/pre&gt;

&lt;p&gt;References&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lolilolicon/FFcast2&quot;&gt;https://github.com/lolilolicon/FFcast2&lt;/a&gt; (original version)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/ffcast&quot;&gt;https://github.com/javier-lopez/ffcast&lt;/a&gt; (personal one)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://unix.stackexchange.com/questions/113695/gif-screencasting-the-unix-way&quot;&gt;http://unix.stackexchange.com/questions/113695/gif-screencasting-the-unix-way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>madre terra</title>
   <link href="http://javier.io/blog/pt/2014/02/26/madre-terra.html"/>
   <updated>2014-02-26T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2014/02/26/madre-terra</id>
   <content type="html">&lt;h2 id=&quot;madre-terra&quot;&gt;madre terra&lt;/h2&gt;

&lt;h6 id=&quot;26-feb-2014&quot;&gt;26 Feb 2014&lt;/h6&gt;

&lt;pre class=&quot;lyric&quot;&gt;
Aqui est√° meu incenso perfumado 
meu cacau cobi√ßado 
minha fresca medicina
aqui est√° minha pena que se levanta 

Hoje entrego-os
em homenagem por deixar-me
tocar a gra√ßa do seu corpo

Eu cres√ßo em voc√™ pai
eu vivo em ti m√£e
minhas m√£os foram manchadas
feri voc√™

O criador assim o quis
assim o senhor das alturas o ordenou
de voc√™ sair√° minha comida e bebida
um pouco para mim
outro para ti
tu tamb√©m tens sede

Aqui est√° meu tributo 
aqui est√° minha gratid√£o 
isto te dar√° for√ßas
isto te dar√° vida

Juan Gregorio Regino / Madre terra (Nijma en nima, IX)
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>howdoi, a code search tool and a sh implementation</title>
   <link href="http://javier.io/blog/en/2014/02/25/howdoi-in-shell-scripting.html"/>
   <updated>2014-02-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/02/25/howdoi-in-shell-scripting</id>
   <content type="html">&lt;h2 id=&quot;howdoi-a-code-search-tool-and-a-sh-implementation&quot;&gt;howdoi, a code search tool and a sh implementation&lt;/h2&gt;

&lt;h6 id=&quot;25-feb-2014&quot;&gt;25 Feb 2014&lt;/h6&gt;

&lt;p&gt;During these days I read about &lt;a href=&quot;https://github.com/gleitz/howdoi&quot;&gt;howdoi&lt;/a&gt;, a &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;stackoverflow&lt;/a&gt; client for your &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;terminal&lt;/a&gt;. And I though it was pretty cool, so I looked at a couple of implementation (the &lt;a href=&quot;https://github.com/gleitz/howdoi&quot;&gt;original&lt;/a&gt; in python and a &lt;a href=&quot;https://github.com/roylez/howdoi&quot;&gt;clone&lt;/a&gt; in ruby) and decided to do my own version, I‚Äôve just learned awk and wanted something where I could use it. Besides, this version doesn‚Äôt require anything but awk and wget.&lt;/p&gt;

&lt;p&gt;Get the code at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.github.com/javier-lopez/learn/master/sh/tools/howdoi&quot;&gt;https://raw.github.com/javier-lopez/learn/master/sh/tools/howdoi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://imgs.xkcd.com/comics/tar.png&quot;&gt;&lt;img src=&quot;http://imgs.xkcd.com/comics/tar.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/ab7339312c9d960f09f77&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;&lt;/p&gt;

&lt;p&gt;Happy hacking ‚ò∫!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>setting up jekyll locally</title>
   <link href="http://javier.io/blog/en/2014/02/22/github-page-build-failed.html"/>
   <updated>2014-02-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/02/22/github-page-build-failed</id>
   <content type="html">&lt;h2 id=&quot;setting-up-jekyll-locally&quot;&gt;setting up jekyll locally&lt;/h2&gt;

&lt;h6 id=&quot;22-feb-2014&quot;&gt;22 Feb 2014&lt;/h6&gt;

&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/dd994deaf00a01fcb9c65&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt; --&gt;

&lt;p&gt;I ‚ô° &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;, it has never been easier to start working in open source projects =). One of their rock star services is &lt;a href=&quot;http://pages.github.com/&quot;&gt;github pages&lt;/a&gt;, which allows people to setup static pages for their projects, it even provides some nice themes so your page doesn‚Äôt look awful. Many people however (mostly technical) use it to host their blogs (such as this one), you get great infrastructure, a subdomain (and the possibility of using your own domain), revisions (git) and markdown, all for free!, isn‚Äôt that freaking awesome!?&lt;/p&gt;

&lt;p&gt;Github pages could be perfect, however they‚Äôre not (although they‚Äôre really close), sometimes when you‚Äôre using markdown and the translation markdown ‚á® html fails you‚Äôll get a nice mail such as this one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The page build failed with the following error:

page build failed

For information on troubleshooting Jekyll see:
 https://help.github.com/articles/using-jekyll-with-pages#troubleshooting

If you have any questions please contact GitHub Support.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Beautiful!, no signal of what went wrong =), ok, to be fair, github has recently started to &lt;a href=&quot;https://github.com/blog/1706-descriptive-error-messages-for-failed-github-pages-builds&quot;&gt;add more details&lt;/a&gt;, however they‚Äôre still not sufficient, I still require to mirror their jekyll setup in order to see what‚Äôs really happening. Since I‚Äôve done more than a couple of times, I thought it would be a good idea to automatize it.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sh &amp;lt;(wget -qO- https://raw.githubusercontent.com/javier-lopez/learn/master/sh/is/gitpages)
...
$ git clone --depth=1 https://github.com/username/site.github.com
$ cd site.github.com
$ jekyll serve #fix errors till it works
&lt;/pre&gt;

&lt;p&gt;It requires an Ubuntu ‚á® 12.04 system and sudo credentials. Additional gotchas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dwdii.github.io/2013/08/28/GitHub-Pages-Jekyll-Ampersands.html&quot;&gt;http://dwdii.github.io/2013/08/28/GitHub-Pages-Jekyll-Ampersands.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy blogging üòÑ!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>the most portable language in the world, awk</title>
   <link href="http://javier.io/blog/en/2014/02/22/awk.html"/>
   <updated>2014-02-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/02/22/awk</id>
   <content type="html">&lt;h2 id=&quot;the-most-portable-language-in-the-world-awk&quot;&gt;the most portable language in the world, awk&lt;/h2&gt;

&lt;h6 id=&quot;22-feb-2014&quot;&gt;22 Feb 2014&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/93.png&quot;&gt;&lt;img src=&quot;/assets/img/93.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other day while I was browsing I found an article called ‚Äú&lt;a href=&quot;http://www.computerworld.com.au/article/216844/a-z_programming_languages_awk/&quot;&gt;The awk origins&lt;/a&gt;‚Äù, I liked so much than I decided to learn awk (it‚Äôs pronounced ‚Äúauk‚Äù). I had already used one-liners but considered larger awk programs unfriendly and its syntax over complicated, however once I started diving on it and unbelief my fears I found it quite fun and easy to use, what a powerful tool based on minimal principles!&lt;/p&gt;

&lt;h2 id=&quot;awk-an-event-drive-language&quot;&gt;Awk, an event drive language&lt;/h2&gt;

&lt;p&gt;The most important thing in awk (and what took me more time to learn) was to understand that it‚Äôs an event drive language based in 5 important areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;begin&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;body&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;search&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;action&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that every awk program (even the smallest ones) have a begin, body and end sections. The begin and end sections are similar, they‚Äôre executed only once, at the beginning and at the end of the program, to write the classic ‚ÄúHello World‚Äù a person can do it in both sections:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk 'BEGIN {print &quot;Hello World&quot;}' &amp;lt; /dev/null
Hello World
$ awk 'END   {print &quot;Hello World&quot;}' &amp;lt; /dev/null
Hello World
&lt;/pre&gt;

&lt;p&gt;Every section is defined by its name and its actions (which are defined between {}). Awk programs are written between (‚Äò) so the shell doesn‚Äôt interpret any variable or keywords. Awk programs can also be written in files and be executed directly:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat hello.awk
#!/usr/bin/awk -f
BEGIN {print &quot;Hello World&quot;}
$ ./hello.awk
Hello World
&lt;/pre&gt;

&lt;p&gt;In between, is the body section, the most powerful one, it defines search patterns and related actions.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk '/.*/ {print $0}' file
&lt;/pre&gt;

&lt;p&gt;The above line is comparable to &lt;strong&gt;$(cat file)&lt;/strong&gt;, the search pattern is &lt;strong&gt;/.*/&lt;/strong&gt; (any character) and the action is &lt;strong&gt;{print $0}&lt;/strong&gt; (print current line). The body section is executed once per line, if a file contain 10 lines, the body section will be executed 10 times and will print all the content. Any length of pattern-actions can be declared within an awk program. The next example will look for &lt;strong&gt;daemon&lt;/strong&gt; and &lt;strong&gt;root&lt;/strong&gt; and will print every line where awk finds those strings.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk '/root/ {print $0} /daemon/ {print $0}' /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
&lt;/pre&gt;

&lt;p&gt;If no search pattern is defined for an action, the action will be executed once per line, if no action is defined for a search pattern the default action will be to print the current line, if no parameter is given to &lt;strong&gt;print&lt;/strong&gt; it will print the whole line (&lt;strong&gt;$0&lt;/strong&gt;). Therefore the above examples can be rewritten as follows:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk '{print $0}' file
$ awk '{print}'    file

$ awk '/root/ || /daemon/ {print $0}' /etc/passwd
$ awk '/root/ || /daemon/ {print}'    /etc/passwd
$ awk '/root/ || /daemon/'            /etc/passwd
&lt;/pre&gt;

&lt;p&gt;These alternatives ways of writing awk programs (I think) are part of the reason why awk seems like a cryptographic language and why so many awk programs are tiny. Awk also defines default variables, some of the most important are:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NR = Number of Record (line number)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;NF = Number of Field&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;RS = Record separator (\n by default)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;FS = Field separator  (white spaces by default)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you‚Äôve a file with the content:&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
1 2 3
4 5 6
&lt;/pre&gt;

&lt;p&gt;Awk will see 2 records and 3 fields. So, &lt;strong&gt;$(cat -n file)&lt;/strong&gt; can be emulated in awk with:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk '{print NR, $0}' file
&lt;/pre&gt;

&lt;p&gt;As the search pattern is missing, the action will be executed once for every line, and for every time it will print &lt;strong&gt;NR&lt;/strong&gt; plus the whole line, &lt;strong&gt;NR&lt;/strong&gt; will increase +1 in every iteration, that‚Äôs a lot of things happening in a minuscule definition. Let‚Äôs review other example, &lt;strong&gt;$(wc -l)&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk 'END {print NR}'      file
$ awk '{i++} END {print i}' file
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NR&lt;/strong&gt; will always increment, so in the first program when the END sections gets executed it will print the total amount of lines in the file. The second example is easier to analyze, it doesn‚Äôt have a search pattern so the action (i++) will always be executed and at the end the program it will be printed. Its amazing how easily other Unix core utilities can be implemented in a simple line, let‚Äôs now copy &lt;strong&gt;$(head)&lt;/strong&gt; behavior:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk 'NR &amp;lt;= 10'          file
$ awk -v hl=10 'NR &amp;lt;= hl' file
&lt;/pre&gt;

&lt;p&gt;Does it make sense?, awk is not as difficult as it seems üòâ. Sed can also be emulated:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ awk '{gsub(/original/,&quot;replace&quot;); print}' file
$ awk 'function sed(search, replace) { gsub(search,replace); print } {sed(&quot;search&quot;,&quot;replace&quot;)}' file
&lt;/pre&gt;

&lt;p&gt;Awk can also use control structures and functions, in the first example it uses de gsub function to replace all original string with ‚Äúreplace‚Äù in a file, just as sed would do it. In the second one, a function called ‚Äúsed‚Äù is defined and used to replace the same strings. Awk is a complete turing language, so even though it could be seen as a toy tool, it‚Äôs a powerful tool which can be used to build sotisficated programs. Nevertheless if you‚Äôve read till this phrase you already know its core principles and are ready to take advantage of its power.&lt;/p&gt;

&lt;p&gt;I‚Äôm leaving some more example to get started, can you guess how do they work?&lt;/p&gt;

&lt;h2 id=&quot;awk-as-unix-swiss-army-knife&quot;&gt;Awk as Unix swiss army knife&lt;/h2&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
cat file                 &amp;#x25B7; awk '{print}' file
cat -n file              &amp;#x25B7; awk '{print NR, $0}' file
cat -n file              &amp;#x25B7; awk '{print FNR, $0}' file
head file                &amp;#x25B7; awk 'NR &amp;lt;= 10' file
head -15 file            &amp;#x25B7; awk -v hl=15 'NR &amp;lt;= hl' file
cut -d: -f1 /etc/passwd  &amp;#x25B7; awk -F&quot;:&quot; '{print $1}' /etc/passwd
cut -d: -f1 /etc/passwd  &amp;#x25B7; awk 'BEGIN {FS=&quot;:&quot;} {print $1}' /etc/passwd
wc -l file               &amp;#x25B7; awk '{i++} END {print i}' file
wc -l file               &amp;#x25B7; awk 'END {print NR}' file
wc -w file               &amp;#x25B7; awk '{total = total + NF}; END {print total+0}' file
grep pattern file        &amp;#x25B7; awk '/pattern/' file
grep -v pattern file     &amp;#x25B7; awk '!/pattern/' file
sed 's/foo/bar/g'        &amp;#x25B7; awk '{gsub(/foo/,&quot;bar&quot;); print $0}' file
tail file                &amp;#x25B7; awk -v tl=10 '{a=a b $0;b=RS;if(NR&amp;lt;=tl)next;a=substr(a,index(a,RS)+1)}END{print a}' file
tail - 15 file           &amp;#x25B7; awk -v tl=15 '{a=a b $0;b=RS;if(NR&amp;lt;=tl)next;a=substr(a,index(a,RS)+1)}END{print a}' file
tac file                 &amp;#x25B7; awk '{a[i++]=$0} END {for (j=i-1; j&amp;gt;=0;) print a[j--] }' file
uniq file                &amp;#x25B7; awk 'a !~ $0; {a=$0}'
&lt;/pre&gt;

&lt;h2 id=&quot;awk-one-liners&quot;&gt;Awk one-liners&lt;/h2&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
awk '$2  ~ /pattern/'  file               #print line when second field matches pattern
awk '$2 !~ /^[0-9]+$/' file               #print line when second field is not a number
awk '1; {print &quot;&quot;}' file                  #adds double space
awk 'BEGIN {ORS=&quot;\n\n&quot;}; 1' file          #adds double space
awk 'NF {print $0 &quot;\n&quot;}' file             #adds double space to lines with content
awk 'BEGIN {RS=&quot;&quot;;ORS=&quot;\n\n&quot;}/pattern/'   #print whole paragrams where pattern is found
awk '{print $NF}' file                    #print the last field of every line
awk '{field=$NF} END{print field}' file   #print the last field of the last line
awk 'NF &amp;gt; 4' file                         #print lines with more than 4 fields
awk '{sub(/^[ \t]+/, &quot;&quot;);print}' file     #delete white spaces at the beggining of a line
awk '{sub(/[ \t]+$/, &quot;&quot;);print}' file     #delete white spaces at the end of a line
awk '{gsub(/^[ \t]+|[ \t]+$/, &quot;&quot;);print}' #delete white spaces at the beggining and end of a line
awk '{$2=&quot;&quot;; print}'  file                #delete the 2nd field of every line
awk '/AAA|BBB|CCC/'   file                #search and print &quot;AAA&quot;, &quot;BBB&quot; or &quot;CCC&quot;
awk '/AAA.*BBB.*CCC/' file                #search and print &quot;AAA&quot;, &quot;BBB&quot; and &quot;CCC&quot; in that order
&lt;/pre&gt;

&lt;p&gt;References&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://awk.info&quot;&gt;http://awk.info&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_toc.html&quot;&gt;http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_toc.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.grymoire.com/Unix/Awk.html&quot;&gt;http://www.grymoire.com/Unix/Awk.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.bignerdranch.com/3799-a-crash-course-in-awk/&quot;&gt;http://blog.bignerdranch.com/3799-a-crash-course-in-awk/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/public/books/The_AWK_Programming_Language.pdf&quot;&gt;The Awk Programming Language (1988) [pdf]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>unstressed direct, indirect pronouns in Spanish</title>
   <link href="http://javier.io/blog/en/2014/02/21/unstressed-object-pronouns-in-spanish.html"/>
   <updated>2014-02-21T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/02/21/unstressed-object-pronouns-in-spanish</id>
   <content type="html">&lt;h2 id=&quot;unstressed-direct-indirect-pronouns-in-spanish&quot;&gt;unstressed direct, indirect pronouns in Spanish&lt;/h2&gt;

&lt;h6 id=&quot;21-feb-2014&quot;&gt;21 Feb 2014&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/92.png&quot;&gt;&lt;img src=&quot;/assets/img/92.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes I help friends with Spanish grammar, I‚Äôm not an expert but I remember I wasn‚Äôt that bad on my Spanish classes neither. It‚Äôs also a good chance to practice my English, though. Anyway, last time I explained what were unstressed pronouns (pron√≥mbres √°tonos) and I though it would be cool to start writing about it.&lt;/p&gt;

&lt;p&gt;Unstressed object pronouns are used in Spanish to replace direct and indirect objects with pronouns, it‚Äôs one of the trickiest Spanish structures and even native speakers can misuse them, so they should be studied carefully. They can be translated sometimes as: me, you, him, her, it, us and them. However people should be aware that they don‚Äôt have exactly the same meaning.&lt;/p&gt;

&lt;p&gt;To use correctly unstressed object pronouns, you should be able to recognize with ease when a phrase contain either a direct or indirect object. Let me wrap it up, A direct object is the part of the sentence which receives the action of the main verb, it can be discovered by asking what? and whom? to the verb.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example:&lt;/h2&gt;

&lt;pre&gt;
Pepe eats fish / Pepe come pescado (what does Pepe eat?)
do(direct object) = fish = pescado
&lt;/pre&gt;

&lt;h2 id=&quot;exercises-find-the-direct-object-in-the-following-sentences&quot;&gt;Exercises: Find the direct object in the following sentences&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Juan Loves Mar√≠a / Juan ama a Mar√≠a&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Carlos fixes computers / Carlos arregla computadoras&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The policeman saw the thieves / El policia vio a los ladrones&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The indirect object in the other hand is whom receives the action of the direct object, and it can be discovered by asking, to whom?, for whom?.&lt;/p&gt;

&lt;h2 id=&quot;example-1&quot;&gt;Example:&lt;/h2&gt;

&lt;pre&gt;
Lucas buys a watermelon for Sandra / Lucas compra una sand√≠a para Sandra
do (direct object) = a watermelon = una sand√≠a
io(indirect object) = for Sandra = para Sandra
&lt;/pre&gt;

&lt;h2 id=&quot;exercises-find-the-direct-and-indirect-object-of-the-following-phrases&quot;&gt;Exercises: Find the direct and indirect object of the following phrases&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Margarita made coffee for Marcos / Margarita hizo caf√© para Marcos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alba gave some tips to her son / Alba dio unos consejos a su hijo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The told the workers to arrive earlier / El jef√© dij√≥ a los trabajadores que llegaran m√°s temprano&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you‚Äôre able to identify the existence of an direct/indirect object in a phrase you‚Äôll be able to use the appropriate pronoun. Take a look at the table in the header of this posts.&lt;/p&gt;

&lt;h2 id=&quot;example-2&quot;&gt;Example:&lt;/h2&gt;

&lt;pre&gt;
Pepe eats fish / Pepe come pescado
do=fish=pescado, pescado refers to an animal in third person singular (he, the fish)
&lt;/pre&gt;

&lt;p&gt;It must be replaced with ‚Äòlo‚Äô:&lt;/p&gt;

&lt;pre&gt;
Pepe *lo* come (it should be placed by general rule before the main verb)
&lt;/pre&gt;

&lt;p&gt;Let‚Äôs review other example:&lt;/p&gt;

&lt;pre&gt;
Juan loves Maria / Juan ama a Mar√≠a
do=a Maria, Maria refers to a person in third person singular (she, Maria)
&lt;/pre&gt;

&lt;p&gt;On this case, ‚Äòa Maria‚Äô must be replaced with ‚Äòla‚Äô (it‚Äôs female):&lt;/p&gt;

&lt;pre&gt;
Juan *la* ama
&lt;/pre&gt;

&lt;h2 id=&quot;exercises-replace-the-direct-object-with-the-appropriate-pronoun&quot;&gt;Exercises: Replace the direct object with the appropriate pronoun&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did you find your mother‚Äôs ring? / ¬øHas encontrado el anillo de tu madre?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Roberto paid a lot of money for his new car / Roberto pag√≥ mucho dinero por su nuevo carro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;A friend will translate the book / Un amigo traducir√° el libro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The same technique can be used to replace indirect objects.&lt;/p&gt;

&lt;h2 id=&quot;example-3&quot;&gt;Example:&lt;/h2&gt;

&lt;pre&gt;
Lucas buys a watermelon for Sandra / Lucas compra una sand√≠a para Sandra
od=a watermelon=una sand√≠a
id=for Sandra=para Sandra
&lt;/pre&gt;

&lt;p&gt;Sandra refers to a third person in singular (she, Sandra) and it can be replaced with ‚Äòle‚Äô because of being an indirect object. If it were a direct object it would be replaced with ‚Äòla‚Äô.&lt;/p&gt;

&lt;pre&gt;
Lucas *le* compra una sand√≠a
&lt;/pre&gt;

&lt;h2 id=&quot;exercises-replace-the-indirect-object-with-the-appropriate-pronoun&quot;&gt;Exercises: Replace the indirect object with the appropriate pronoun&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tomorrow I‚Äôll give the money to Eduardo / Ma√±ana entregar√© el dinero a Eduardo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I bought a gift for you / Compr√© un regalo para ti&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;The donations will be given back to the contributers this year&lt;/td&gt;
        &lt;td&gt;Los donativos de este a√±o ser√°n devueltos a los contribuyentes&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Both can be replaced at the same time, the direct and the indirect objects, however when doing it, a new rule applies, whenever a ‚Äòlo‚Äô and ‚Äòle‚Äô gets together, the second one must be replaced with ‚Äòse‚Äô (indirect object).&lt;/p&gt;

&lt;h2 id=&quot;example-4&quot;&gt;Example:&lt;/h2&gt;

&lt;pre&gt;
Lucas buys a watermelon for Sandra / Lucas compra una sand√≠a para Sandra
od=a watermelon=una sand√≠a
id=for Sandra=para Sandra

Lucas la compra para Sandra (replacing the direct object)
Lucas le compra una sand√≠a (replacing the indirect object)
Lucas se la compra (replacing both) 
&lt;/pre&gt;

&lt;p&gt;Pay attention to the &lt;em&gt;‚Äòse‚Äô&lt;/em&gt; which replaces &lt;em&gt;‚Äòle‚Äô&lt;/em&gt; for the indirect object&lt;/p&gt;

&lt;h2 id=&quot;exercises-replace-the-directindirect-objects-with-the-appropriate-pronouns&quot;&gt;Exercises: Replace the direct/indirect objects with the appropriate pronouns&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;I told the girls the reasons of my decision / Les dije a las chicas las razones de mi decisi√≥n&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did you get back the chair to the neighbor (female)?  / ¬øDevolviste la silla a la vecina?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Diana wrote a letter to Hugo / Diana escribio una carta para Hugo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That‚Äôs it&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;keywords, palabras clave:&lt;/strong&gt; &lt;em&gt;leismo, laismo, loismo, objeto directo, objeto indirecto&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=N_3flr9ni0s&quot;&gt;http://www.youtube.com/watch?v=N_3flr9ni0s&lt;/a&gt; (direct object / objeto directo)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=jMzAQ2bQEx0&quot;&gt;http://www.youtube.com/watch?v=jMzAQ2bQEx0&lt;/a&gt; (indirect object / objeto indirecto)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.appstate.edu/~fountainca/1050/unidad2/pronombresatonos.html&quot;&gt;http://www.appstate.edu/~fountainca/1050/unidad2/pronombresatonos.html&lt;/a&gt; (unstressed pronouns / pronombres √°tonos)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>nossa inf√¢ncia</title>
   <link href="http://javier.io/blog/pt/2014/02/12/nossa-infanca.html"/>
   <updated>2014-02-12T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2014/02/12/nossa-infanca</id>
   <content type="html">&lt;h2 id=&quot;nossa-inf√¢ncia&quot;&gt;nossa inf√¢ncia&lt;/h2&gt;

&lt;h6 id=&quot;12-feb-2014&quot;&gt;12 Feb 2014&lt;/h6&gt;

&lt;pre class=&quot;lyric&quot;&gt;
Nossa inf√¢ncia √© s√≥ uma lembran√ßa
demasiado vaga
longe ficou aquela nossa terra
a terra que nos viu crescer

Partiram nossos primeiros suspiros
sem nos dar tempo de madurar
ainda nos despertamos
e j√° somos homens
e j√° somos pais
sem nos dar tempo de olhar ao futuro

N√£o jogaremos mais
embora nossa mente siga brincando
j√° somos pais
o tempo n√£o d√° tr√©gua para pensar
encontramo-nos, desmaia-nos
o tempo n√£o d√° tr√©gua para curar

Nossos sonhos j√° n√£o existem em c√©u nenhum
nossos primeiros suspiros partiram ontem
e j√° somos pais
n√£o temos tempo de madurar, n√£o temos

Juan Gregorio Regino / Nuestra infancia (Nga kam√° xixi√≠)
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>por que n√£o est√° vivendo seus sonhos?</title>
   <link href="http://javier.io/blog/pt/2014/02/05/por-que-nao-vive-seus-sonhos.html"/>
   <updated>2014-02-05T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2014/02/05/por-que-nao-vive-seus-sonhos</id>
   <content type="html">&lt;h2 id=&quot;por-que-n√£o-est√°-vivendo-seus-sonhos&quot;&gt;por que n√£o est√° vivendo seus sonhos?&lt;/h2&gt;

&lt;h6 id=&quot;05-feb-2014&quot;&gt;05 Feb 2014&lt;/h6&gt;

&lt;p&gt;√â uma pergunta interessante, pois poucas pessoas os tornam realidade.&lt;/p&gt;

&lt;p&gt;Todos n√≥s gostamos de sonhar, o fazemos na ducha, durante o trajeto no √¥nibus, enquanto esperamos na fila do supermercado, por√©m, a maioria desses sonhos contiuam sonhos. A vida √© curta e cada ano o tempo passa depressa (√© normal, nossos c√©rebros e nervos transmitem a informa√ß√£o &lt;a href=&quot;http://deepblue.lib.umich.edu/bitstream/handle/2027.42/50152/880151007_ftp.pdf?sequence=1&quot;&gt;mais lentamente&lt;/a&gt; cada ano). Voc√™ tem menos tempo do que acha.&lt;/p&gt;

&lt;p&gt;N√£o espere mais, pois mesmo se come√ßar agora, voc√™ j√° consumiu quase todo o seu tempo. Levanta-se e torne seus sonhos realidade!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>introduction to drupal 7 installation profiles</title>
   <link href="http://javier.io/blog/en/2014/01/26/introduction-to-drupal-7-installation-profiles.html"/>
   <updated>2014-01-26T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/01/26/introduction-to-drupal-7-installation-profiles</id>
   <content type="html">&lt;h2 id=&quot;introduction-to-drupal-7-installation-profiles&quot;&gt;introduction to drupal 7 installation profiles&lt;/h2&gt;

&lt;h6 id=&quot;26-jan-2014&quot;&gt;26 Jan 2014&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/91.gif&quot;&gt;&lt;img src=&quot;/assets/img/91.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last weekend I worked on a Drupal site and it was not fun =( mostly due to incomplete and inaccurate documentation. My goal was to create a distributable bundle for &lt;a href=&quot;https://github.com/javier-lopez/ubuntu-mx-www&quot;&gt;Spanish Ubuntu&lt;/a&gt; local teams. I already had a base theme and didn‚Äôt though it could be that hard, however what started as a simple task ended as a very long weekend. On this post I‚Äôll try to document what issues I found and how they were worked out.&lt;/p&gt;

&lt;p&gt;For the record, I must say I‚Äôm not a web developer, I find all the technologies related quite difficult to understand, I also didn‚Äôt have any previous experience with drupal internals.&lt;/p&gt;

&lt;p&gt;Since the beginning I though any work should be automatized as much as possible, ideally an administrator would be able to download the bundle, throw it away on the file system, run the web installer and start creating content. The result happily is quite similar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download and place the bundle in a directory read by a web server (eg, apache)&lt;/li&gt;
  &lt;li&gt;Go to the server ip&lt;/li&gt;
  &lt;li&gt;Select the ‚ÄòUbuntu-mx‚Äô profile&lt;/li&gt;
  &lt;li&gt;On a Spanish translated interface, input the database settings&lt;/li&gt;
  &lt;li&gt;Configure the administrator credentials&lt;/li&gt;
  &lt;li&gt;Create content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The resulting site would be translated to spanish, will enable a bunch of modules (l10n_update, admin_menu, smtp, ckeditor), an Ubuntu theme, search permissions and menu links.&lt;/p&gt;

&lt;p&gt;For this to work, I used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://drupal.org/node/1022020&quot;&gt;installation profiles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://drupal.org/project/features&quot;&gt;feature modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation-profiles&quot;&gt;Installation profiles&lt;/h2&gt;

&lt;p&gt;Installation profiles are special modules who allow you to declare which modules, languages and themes to load by default, they can also be used to modify the installer to add or remove steps.&lt;/p&gt;

&lt;p&gt;They must have a &lt;a href=&quot;https://drupal.org/taxonomy/term/33388&quot;&gt;.info&lt;/a&gt;, &lt;a href=&quot;https://api.drupal.org/api/drupal/modules!profile!profile.module/7&quot;&gt;.profile&lt;/a&gt; and &lt;a href=&quot;https://api.drupal.org/api/drupal/includes!install.core.inc/function/install_tasks/7&quot;&gt;.install&lt;/a&gt; files at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/profiles/profile_name/&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I named my module &lt;strong&gt;‚Äòumx‚Äô&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;info&quot;&gt;.info&lt;/h3&gt;

&lt;p&gt;This file contains name, description, drupal version and dependencies (modules enabled by default):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;declaring only core modules as dependencies&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The content of my &lt;strong&gt;/profiles/umx/umx.info&lt;/strong&gt; file was:&lt;/p&gt;

&lt;pre class=&quot;sh_properties&quot;&gt;
name        = Ubuntu-mx
description = Install Ubuntu-mx modules, language (es) and configuration
version     = 0.1
core        = 7.x

dependencies[] = block
dependencies[] = color
dependencies[] = comment
dependencies[] = contextual
dependencies[] = dashboard
dependencies[] = help
dependencies[] = image
dependencies[] = list
dependencies[] = number
dependencies[] = options
dependencies[] = path
dependencies[] = taxonomy
dependencies[] = dblog
dependencies[] = shortcut
dependencies[] = overlay
dependencies[] = field_ui
dependencies[] = file
dependencies[] = rdf

dependencies[] = umx_conf
&lt;/pre&gt;

&lt;p&gt;I found much more comfortable to declare only core modules as dependencies and carry on the rest of the configuration in a separate module (generated by the features module). This way I can keep using the same unmodified profile and alter the resulting site by regenerating the umx_conf module when necessary.&lt;/p&gt;

&lt;h3 id=&quot;profile&quot;&gt;.profile&lt;/h3&gt;

&lt;p&gt;On the &lt;strong&gt;.profile&lt;/strong&gt; and &lt;strong&gt;.install&lt;/strong&gt; files can be written functions to override/define hooks, I used &lt;strong&gt;/profile/umx/umx.profile&lt;/strong&gt; to configure the default language to spanish (as a result the language dialogue is skipped):&lt;/p&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_profile_details() {
    $details['language'] = &quot;es&quot;;
    return $details;
}
&lt;/pre&gt;

&lt;p&gt;The default language can also be configured in a feature module (on this example, &lt;strong&gt;umx_conf&lt;/strong&gt;) however if doing so, the installation process itself will run in English, and if it‚Äôs double declared (here and in a feature module), the installation will return a sql duplication key error.&lt;/p&gt;

&lt;p&gt;It‚Äôs not optimal, but it‚Äôs the best I could do. I located the es.po file at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/profiles/umx/translations/es.po&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The localize.drupal.org server has po files with a drupal version prefix, if downloaded from there, you should rename them. Eg&lt;/p&gt;

&lt;pre&gt;
    drupal-7.26.es.po -&amp;gt; es.po
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://drupal.org/node/1326106&quot;&gt;https://drupal.org/node/1326106&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;install&quot;&gt;.install&lt;/h3&gt;

&lt;p&gt;Here you can override install, update and uninstall functions. Since the feature modules doesn‚Äôt support theme settings (something who could be really useful) I declared the default theme on this file (&lt;strong&gt;/profile/umx/umx.install&lt;/strong&gt;):&lt;/p&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_install() {
    db_update('system')
        -&amp;gt;fields(array('status' =&amp;gt; 1))
        -&amp;gt;condition('type', 'theme')
        -&amp;gt;condition('name', 'umxtheme')
        -&amp;gt;execute();
    variable_set('theme_default', 'umxtheme');
}
&lt;/pre&gt;

&lt;p&gt;According to the documentation, theme settings should be declared in &lt;strong&gt;profile_themes_enabled()&lt;/strong&gt; with the &lt;strong&gt;theme_enable()&lt;/strong&gt; function, however I was unable to make to work any of them.&lt;/p&gt;

&lt;p&gt;Snippets which did &lt;strong&gt;NOT&lt;/strong&gt; work (drupal 7.26):&lt;/p&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_themes_enabled() {
    //any code;
}
&lt;/pre&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_install_finished() {
    //any code;
}
&lt;/pre&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_update_N() {
    //any code;
}
&lt;/pre&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_install() {
    variable_set('theme_default','umxtheme');
}
&lt;/pre&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_install() {
    $list_themes = list_themes(TRUE);
    $major_version = (int)VERSION;

    $theme_default = isset($list_themes['umxtheme']) ? 'umxtheme' : 'garland';
    $admin_theme   = isset($list_themes['seven']) ? 'seven' : 'garland';

    variable_set('theme_default', $theme_default);
    theme_enable($theme_default);
    theme_disable(array('bartik'));

    if($affect_admin_theme){
        variable_set('admin_theme', $admin_theme);
    }

    if (module_exists('switchtheme')) {
        if (empty($_GET['theme']) || $_GET['theme'] !== $theme_default) {
            $query = array(
                'theme' =&amp;gt; $theme_default
            ); 
            if($major_version &amp;lt; 7){
                $options = $query;
            }
            else{
                $options = array('query' =&amp;gt; $query);
            }

            drupal_goto($_GET['q'], $options);
        }
    }
}
&lt;/pre&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_install() {
    $enable = array(
        'theme_default' =&amp;gt; 'umxtheme',
        'admin_theme'   =&amp;gt; 'seven',
    );
    theme_enable($enable);

    foreach ($enable as $var =&amp;gt; $theme) {
        if (!is_numeric($var)) {
            variable_set($var, $theme);
        }
    }

    theme_disable(array('bartik'));
}
&lt;/pre&gt;

&lt;p&gt;Drupal themes must be placed at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/sites/all/themes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One lesson I learned was that themes should be named clearly, at the beginning I declared the theme as ‚Äòumx‚Äô (for ubuntu-mx theme) and put it in &lt;strong&gt;/sites/all/themes/umx-theme/&lt;/strong&gt;, later on while trying to configure the bundle with a default theme I got confused because the profile installation was named equal and I was not sure which one I was referring to. Name your themes with a unique string, (I finally decided to rename ‚Äòumx‚Äô to ‚Äòumxtheme‚Äô).&lt;/p&gt;

&lt;p&gt;Ignore the &lt;strong&gt;name&lt;/strong&gt; field written in the &lt;em&gt;.info&lt;/em&gt; file, and prefix your hook functions with the selected drupal theme (e,g, umxtheme_footer_text())&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.computerminds.co.uk/articles/setting-default-theme-during-installation&quot;&gt;Setting default theme for Drupal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://codedrup.blogspot.mx/2012/10/setting-different-default-theme-by.html&quot;&gt;Setting a different default theme by default in an install profile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.isaacsukin.com/news/2011/01/10/how-write-drupal-7-installation-profile&quot;&gt;how to write a drupal 7 installation profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;feature-modules&quot;&gt;Feature modules&lt;/h2&gt;

&lt;p&gt;Feature modules are good for bundling configurations, permissions and dependencies on non default modules. I created &lt;strong&gt;umx_conf&lt;/strong&gt; to iterate faster. Using feature modules you can modify drupal settings through a browser and then export the result to code from the feature menu.&lt;/p&gt;

&lt;p&gt;Autogenerated features modules can contain:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;.info&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.module&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.feature.submodule.inc&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Very few times you would need to modify them directly. In my experience (a weekend) the autogenerated files will sometimes contain mistakes, therefore I modified them slightly to feet my needs:&lt;/p&gt;

&lt;h3 id=&quot;info-1&quot;&gt;.info&lt;/h3&gt;

&lt;p&gt;On this file, dependencies are declared, the generator makes a quite clever job adding recursively all the dependencies your configurations depend on.&lt;/p&gt;

&lt;pre class=&quot;sh_properties&quot;&gt;
name        = umx conf
description = Common settings for the Ubuntu-mx local portal.
core        = 7.x
package     = Features
version     = 7.x-0.1
project     = umx_conf

dependencies[] = admin_menu
dependencies[] = admin_menu_toolbar
dependencies[] = ckeditor
dependencies[] = features
dependencies[] = l10n_update
dependencies[] = locale
dependencies[] = menu
dependencies[] = search
dependencies[] = smtp

features[ckeditor_profile][] = Advanced
features[ckeditor_profile][] = CKEditor Global Profile
features[ckeditor_profile][] = Full

features[features_api][]     = api:2
features[user_permission][]  = search content
features[user_permission][]  = use advanced search

features[menu_custom][] = main-menu
features[menu_links][]  = main-menu_portada:&amp;lt;front&amp;gt;
features[menu_links][]  = main-menu_foros:http://google.com
features[menu_links][]  = main-menu_preguntas:http://ubuntu.shapado.com
features[menu_links][]  = main-menu_wiki:https://wiki.ubuntu.com/UbuntuMxTeam
features[menu_links][]  = main-menu_chat:http://google.com
features[menu_links][]  = main-menu_descargar-ubuntu:http://google.com
&lt;/pre&gt;

&lt;h3 id=&quot;module&quot;&gt;.module&lt;/h3&gt;

&lt;p&gt;On this file, you can override hook functions, I leave it blank&lt;/p&gt;

&lt;h3 id=&quot;featuresubmoduleinc&quot;&gt;.feature.submodule.inc&lt;/h3&gt;

&lt;p&gt;On these files per module configurations are saved, in my case, I had to modify &lt;strong&gt;/sites/all/modules/umx_conf/umx_conf.features.menu_links.inc&lt;/strong&gt; because some links weren‚Äôt exported.&lt;/p&gt;

&lt;pre class=&quot;sh_php&quot;&gt;
function umx_conf_menu_default_menu_links() {
  $menu_links = array();
  $menu_links['main-menu_portada:&amp;lt;front&amp;gt;'] = array(
    'menu_name' =&amp;gt; 'main-menu',
    'link_path' =&amp;gt; '&amp;lt;front&amp;gt;',
    'router_path' =&amp;gt; '',
    'link_title' =&amp;gt; 'Portada',
    'options' =&amp;gt; array(
      'attributes' =&amp;gt; array(
        'title' =&amp;gt; '',
      ),
      'identifier' =&amp;gt; 'main-menu_portada:&amp;lt;front&amp;gt;',
    ),
    'module' =&amp;gt; 'menu',
    'hidden' =&amp;gt; 0,
    'external' =&amp;gt; 1,
    'has_children' =&amp;gt; 0,
    'expanded' =&amp;gt; 0,
    'weight' =&amp;gt; 0,
    'customized' =&amp;gt; 1,
  );

  ...
&lt;/pre&gt;

&lt;p&gt;I had to adjust mostly the &lt;strong&gt;weight&lt;/strong&gt; parameter and add missing links. Not difficult if you follow the syntax (even if you don‚Äôt know php).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=DxRBEaD9JCA&quot;&gt;Introduction to drupal module features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extra&quot;&gt;Extra&lt;/h2&gt;

&lt;p&gt;If you had problems with the above description, a probably better and more up-to-date approach to profile Drupal installation is described at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://salsadigital.com.au/news/drupal-installation-profile-and-distributions&quot;&gt;http://salsadigital.com.au/news/drupal-installation-profile-and-distributions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That‚Äôs it, I hope this information can save some time to someone, have fun!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>multicursor in ubuntu</title>
   <link href="http://javier.io/blog/en/2014/01/06/multicursor-in-ubuntu.html"/>
   <updated>2014-01-06T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2014/01/06/multicursor-in-ubuntu</id>
   <content type="html">&lt;h2 id=&quot;multicursor-in-ubuntu&quot;&gt;multicursor in ubuntu&lt;/h2&gt;

&lt;h6 id=&quot;06-jan-2014&quot;&gt;06 Jan 2014&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/88.png&quot;&gt;&lt;img src=&quot;/assets/img/88.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During my last holidays I found myself into a position where I had to share my laptop with other persons. I knew it was possible to use different keyboards/mice with Linux but never had tried.., till now üòè&lt;/p&gt;

&lt;p&gt;On this scenario, I had an extra monitor and an extra mouse, so the first thing I did was to enable the monitor, since I use &lt;a href=&quot;http://i3wm.org/&quot;&gt;i3&lt;/a&gt; as my window manager I use raw xrandr to extend my visual setup.&lt;/p&gt;

&lt;pre&gt;
$ xrandr --output VGA1 --mode 1680x1050 --right-of LVDS1
&lt;/pre&gt;

&lt;p&gt;Pretty simple, I just love this kind of tools. Next item, enable mouse. For this device to work I used &lt;a href=&quot;http://cgit.freedesktop.org/xorg/app/xinput/&quot;&gt;xinput&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;
$ xinput create-master Auxiliary
$ xinput list #get the mouse id
$ xinput reattach 10 &quot;Auxiliary pointer&quot; #use the id to set it as auxiliar pointer
&lt;/pre&gt;

&lt;p&gt;After applying these changes, the xinput configuration looked like this:&lt;/p&gt;

&lt;pre&gt;
xinput list
‚é° Virtual core pointer                    	id=2	[master pointer  (3)]
‚éú   ‚Ü≥ Virtual core XTEST pointer              	id=4	[slave  pointer  (2)]
‚éú   ‚Ü≥ Microsoft Microsoft¬Æ Nano Transceiver v1.0	id=11	[slave  pointer  (2)]
‚éú   ‚Ü≥ SynPS/2 Synaptics TouchPad              	id=14	[slave  pointer  (2)]
‚éú   ‚Ü≥ TPPS/2 IBM TrackPoint                   	id=15	[slave  pointer  (2)]
‚é£ Virtual core keyboard                   	id=3	[master keyboard (2)]
    ‚Ü≥ Virtual core XTEST keyboard             	id=5	[slave  keyboard (3)]
    ‚Ü≥ Power Button                            	id=6	[slave  keyboard (3)]
    ‚Ü≥ Video Bus                               	id=7	[slave  keyboard (3)]
    ‚Ü≥ Power Button                            	id=8	[slave  keyboard (3)]
    ‚Ü≥ Microsoft Microsoft¬Æ Nano Transceiver v1.0	id=9	[slave  keyboard (3)]
    ‚Ü≥ Integrated Camera                       	id=12	[slave  keyboard (3)]
    ‚Ü≥ AT Translated Set 2 keyboard            	id=13	[slave  keyboard (3)]
    ‚Ü≥ ThinkPad Extra Buttons                  	id=16	[slave  keyboard (3)]
‚é° Auxiliary pointer                       	id=17	[master pointer  (18)]
‚éú   ‚Ü≥ Microsoft Microsoft¬Æ Nano Transceiver v1.0	id=10	[slave  pointer  (17)]
‚éú   ‚Ü≥ Auxiliary XTEST pointer                 	id=19	[slave  pointer  (17)]
‚é£ Auxiliary keyboard                      	id=18	[master keyboard (17)]
    ‚Ü≥ Auxiliary XTEST keyboard                	id=20	[slave  keyboard (18)]
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, the experience wasn‚Äôt really bad, i3 reacts correctly most of the time and although there were confusion, it is manageable üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Multi-pointer_X&quot;&gt;https://wiki.archlinux.org/index.php/Multi-pointer_X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>ssh captcha</title>
   <link href="http://javier.io/blog/en/2013/12/17/ssh-captcha.html"/>
   <updated>2013-12-17T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/12/17/ssh-captcha</id>
   <content type="html">&lt;h2 id=&quot;ssh-captcha&quot;&gt;ssh captcha&lt;/h2&gt;

&lt;h6 id=&quot;17-dec-2013&quot;&gt;17 Dec 2013&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/javier-lopez/pam_captcha&quot;&gt;&lt;img src=&quot;/assets/img/pam_captcha.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/53a85bc1b41c096c83130&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;&lt;/p&gt;

&lt;p&gt;Some days ago while I was reviewing some data I noticed a spammer in one of my remote machines. Since I was mostly using the box for running experiments I decided to rebuild it. Upon completion, I decided to improve my default ssh settings. I just liked too much to use a single password for all my ssh needs üòû&lt;/p&gt;

&lt;p&gt;I know some ways to improve security, I could change the password to a really difficult one, change the default port, filter by ip, by tries (fail2ban), disable completely password login and allow only key based logins, etc.&lt;/p&gt;

&lt;p&gt;At the end however I decided to just add a captcha protection, why?, most of the ssh attacks are automatized, people run scripts who tests thousand of passwords and run certain commands on success, these scritps won‚Äôt be able to recognized the slighly modification in the login process (they‚Äôre really dumb). In the other hand, I don‚Äôt need over complicated solutions, or more systems to administer. Ssh key based login is great but sometimes I just need access from third party machines.&lt;/p&gt;

&lt;p&gt;Lastly some other popular solutions have come up but for one or other reason I couldn‚Äôt feel comfortable with them:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.google.com/p/google-authenticator/&quot;&gt;google authenticator&lt;/a&gt; (my cellphone is most of the time lost, turn off or without battery, do I live under a rock?, not at all!, but I don‚Äôt get the always online hype.)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://barada.sourceforge.net/&quot;&gt;barada&lt;/a&gt; (see above reason)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/otpw.html&quot;&gt;otpw&lt;/a&gt; (printing and carrying passwords with me?, you must be kidding)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=1891356&quot;&gt;otp&lt;/a&gt; (I may try this one)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrishunt/github-auth&quot;&gt;github auth&lt;/a&gt; (unrelated but it‚Äôs a nice way to do pair programming fast)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.authy.com/two-factor-ssh-in-thirty-seconds&quot;&gt;authy&lt;/a&gt; (people seems to really like cellphones)&lt;/li&gt;
  &lt;li&gt;any other method who involves &lt;a href=&quot;https://www.duosecurity.com/&quot;&gt;ForceCommand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;pre&gt;
$ sudo add-apt-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install libpam-captcha
&lt;/pre&gt;

&lt;p&gt;Be aware than the previous steps will only work in supported Ubuntu LTS versions.&lt;/p&gt;

&lt;h3 id=&quot;extra&quot;&gt;Extra&lt;/h3&gt;

&lt;h2 id=&quot;sentry&quot;&gt;Sentry&lt;/h2&gt;

&lt;p&gt;If additional security is desired consider using &lt;a href=&quot;https://www.tnpi.net/wiki/Sentry&quot;&gt;sentry&lt;/a&gt; over fail2ban, denyhosts, sshblacklist, etc, really.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget http://www.tnpi.net/internet/sentry.pl
$ sudo perl sentry.pl
$ echo &quot;sshd : /var/db/sentry/hosts.deny : deny&quot; &amp;gt; hosts
$ echo &quot;sshd : ALL : spawn /var/db/sentry/sentry.pl -c --ip=%a : allowsendmail: all&quot; &amp;gt;&amp;gt; hosts
$ cat hosts /etc/hosts.allow &amp;gt; hosts.allow
$ sudo mv hosts.allow /etc/ &amp;amp;&amp;amp; rm hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;fail2ban&quot;&gt;Fail2ban&lt;/h2&gt;

&lt;p&gt;The next fail2ban regex will match the ssh captcha generated messages&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#/etc/fail2ban/filter.d/sshd.conf
^%(__prefix_line)s(?:error: PAM: )?Permission denied for .* from &amp;lt;HOST&amp;gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks Jordan! üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.semicomplete.com/projects/pam_captcha/&quot;&gt;http://www.semicomplete.com/projects/pam_captcha/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minos-org/libpam-captcha&quot;&gt;https://github.com/minos-org/libpam-captcha&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minos-org/libpam-captcha-deb&quot;&gt;https://github.com/minos-org/libpam-captcha-deb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>simple pxe setup</title>
   <link href="http://javier.io/blog/en/2013/11/19/simple-pxe-setup.html"/>
   <updated>2013-11-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/11/19/simple-pxe-setup</id>
   <content type="html">&lt;h2 id=&quot;simple-pxe-setup&quot;&gt;simple pxe setup&lt;/h2&gt;

&lt;h6 id=&quot;19-nov-2013&quot;&gt;19 Nov 2013&lt;/h6&gt;

&lt;p&gt;There are several ways to setup a &lt;a href=&quot;http://es.wikipedia.org/wiki/Preboot_Execution_Environment&quot;&gt;pxe&lt;/a&gt; (which are useful mostly for massive installations), this is my personal method. A preboot execution environment in 68KB with batteries included, pxelinux, dhcpd, tftp, and hands-free installation.&lt;/p&gt;

&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/f2ac25e4df1e7ad5e989a&quot; width=&quot;640&quot; height=&quot;300&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;
&lt;!--**[![](/assets/img/87.jpg)](/assets/img/87.jpg)**--&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sh &amp;lt;(wget -qO- https://raw.githubusercontent.com/javier-lopez/learn/master/sh/tools/pxe)
[+] setting pxe environment in ./pxe_setup ...
  - creating ./pxe_setup/menu.c32 ...
  - creating ./pxe_setup/pxelinux.0 ...
  - creating ./pxe_setup/simple-dhcpd ...
  - creating ./pxe_setup/simple-tftpd ...
  - creating ./pxe_setup/pxelinux.cfg/default ...
  - creating ./pxe_setup/ubuntu/ubuntu.menu ...
  - creating ./pxe_setup/pxe/fedora/fedora.menu ...
  - creating ./pxe_setup/tools/tools.menu ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above command is the heart of the system, a script who creates a directory structure with all the tools and menus required to boot at least ubuntu/fedora (it can personalized to boot other distros). After executing the script, you‚Äôll need to download two extra files; an initrd installer and a linux kernel.&lt;/p&gt;

&lt;p&gt;As an example I‚Äôll download the Ubuntu 12.04 amd64 corresponding files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/precise-updates/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux&quot;&gt;linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/precise-updates/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz&quot;&gt;initrd.gz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget http://archive.ubuntu.com/.../amd64/initrd.gz -O pxe_setup/ubuntu/1204/amd64/initrd.gz
$ wget http://archive.ubuntu.com/.../amd64/linux     -O pxe_setup/ubuntu/1204/amd64/linux
&lt;/pre&gt;

&lt;h2 id=&quot;pxe-enabled-router&quot;&gt;Pxe enabled router&lt;/h2&gt;

&lt;p&gt;Some routers can forward pxe petitions, you can configure them to point all pxe request to the machine running the tftp server (who will provide the pxelinux.0 and other required files) to boot other systems. In this scenarios the ip assigned to the host where this setup was done needs to be entered in the router with the &lt;strong&gt;pxelinux.0&lt;/strong&gt; string as path.&lt;/p&gt;

&lt;p&gt;And start the tftp daemon in the source machine:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cd pxe_setup &amp;amp;&amp;amp; sudo python ./simple-tftpd
&lt;/pre&gt;

&lt;h2 id=&quot;computer-with-at-least-2-network-interfaces&quot;&gt;Computer with at least 2 network interfaces&lt;/h2&gt;

&lt;p&gt;If the router cannot forward pxe requests or you don‚Äôt have the permissions to do so, you can run a local dhcpd and connect to the target machines through a second network interface (the first one will be used to connect to Internet to download the installation files).&lt;/p&gt;

&lt;p&gt;Let‚Äôs imagine wlan0 and eth0 are the wireless and wired interfaces of a laptop, the first one is connected to Internet and the second one to other machines through a switch/router or directly. The first step on this scenario is to allow wlan0 to act as a bridge between the target computers and Internet:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
$ echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
&lt;/pre&gt;

&lt;p&gt;And assign a local ip to the wired interface (eth0):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ while :; do sudo ifconfig eth0 10.99.88.1; sleep 3; done
&lt;/pre&gt;

&lt;p&gt;NOTE: In systems governed by &lt;a href=&quot;https://wiki.gnome.org/Projects/NetworkManager&quot;&gt;NetworkManager&lt;/a&gt; it‚Äôs better to use its infrastructure or disable it completely before running the above command.&lt;/p&gt;

&lt;p&gt;Finally, the dhcp and tftp daemons can be launched:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cd pxe_setup &amp;amp;&amp;amp; sudo python ./simple-dhcpd -i eth0 -a 10.99.88.1
$ cd pxe_setup &amp;amp;&amp;amp; sudo python ./simple-tftpd
&lt;/pre&gt;

&lt;p&gt;Upon booting the target machines will print a menu asking for a which system to install (ubuntu or fedora), sweet n_n/&lt;/p&gt;

&lt;h2 id=&quot;extra-hands-free&quot;&gt;extra, hands-free&lt;/h2&gt;

&lt;p&gt;Most popular distributions support completely automated installations through preseed, kickstart, etc. This setup is no exception, it‚Äôs been configured to provide a hands-free installation for Ubuntu. The preseed file used can be retrieved at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://people.ubuntu.com/~javier-lopez/conf/preseed/minimal.preseed&quot;&gt;http://people.ubuntu.com/~javier-lopez/conf/preseed/minimal.preseed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It supports two extra boot parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;proxy=http://url&lt;/strong&gt;, for using a proxy who doesn‚Äôt break the installation process&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;user=joe&lt;/strong&gt;, for setting a default user (admin by default)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uninstallation&quot;&gt;uninstallation&lt;/h2&gt;

&lt;p&gt;When the installation process ends, the pxe environmente can be easily removed with:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ rm -rf pxe_setup
&lt;/pre&gt;

&lt;p&gt;Simple! üòè&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Idea&lt;/strong&gt;: Create a vm with 2 network interfaces, the first one in &lt;em&gt;bridge&lt;/em&gt; mode assigned to wlan0, and the second one in &lt;em&gt;bridge&lt;/em&gt; / &lt;em&gt;internal network&lt;/em&gt; assigned to eth0, configure this setup and take an snapshot for an instant pxe installer experience.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/psychomario/PyPXE&quot;&gt;https://github.com/psychomario/PyPXE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://javier.io/blog/es/2010/12/14/compartir-conexion-pc-a-pc.html&quot;&gt;http://javier.io/blog/es/2010/12/14/compartir-conexion-pc-a-pc.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>shundle</title>
   <link href="http://javier.io/blog/en/2013/11/15/shundle.html"/>
   <updated>2013-11-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/11/15/shundle</id>
   <content type="html">&lt;h2 id=&quot;shundle&quot;&gt;shundle&lt;/h2&gt;

&lt;h6 id=&quot;15-nov-2013&quot;&gt;15 Nov 2013&lt;/h6&gt;

&lt;!--&lt;iframe src=&quot;http://showterm.io/64f9418e5bc5320d39d40&quot; width=&quot;640&quot; height=&quot;350&quot; style=&quot;display:block; margin: 0 auto;&quot;&gt;&amp;nbsp;&lt;/iframe&gt; --&gt;
&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/260fe8f71ef23ccf3fd9e&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt; --&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/javier-lopez/shundle&quot;&gt;Shundle&lt;/a&gt; is a general sh plugin manager I wrote when I realized how messy my ~/.bashrc was getting. It also helped to learn more about how to write portable sh code. It‚Äôs not intend to be used by everyone, actually it could scare a lot of people =)&lt;/p&gt;

&lt;p&gt;However if you feel brave enough to test it, go ahead, it‚Äôs free software!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/shundle-2.gif&quot;&gt;&lt;img src=&quot;/assets/img/shundle-2.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve created few plugins around it; &lt;a href=&quot;https://github.com/javier-lopez/shundle-plugins/tree/master/colorize&quot;&gt;colorize&lt;/a&gt;, &lt;a href=&quot;https://github.com/javier-lopez/shundle-plugins/tree/master/aliazator&quot;&gt;aliazator&lt;/a&gt;, &lt;a href=&quot;https://github.com/javier-lopez/shundle-plugins/tree/master/eternalize&quot;&gt;eternalize&lt;/a&gt;, the idea is that shundle loads/unloads as many as the user wishes, righ now it adds 0m0.110 seconds with all the plugins enabled and 0m0.048s without any to the average bash startup time (working in getting more shells supported). Note: I tested it in a dual core cpu.&lt;/p&gt;

&lt;p&gt;Plugins are enabled by placing a &lt;strong&gt;Bundle=&lt;/strong&gt; directive in the shell profile file (~/.bashrc in bash), eg. enabling eternalize:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
Bundle='javier-lopez/shundle-plugins/aliazator.git'
&lt;/pre&gt;

&lt;p&gt;After doing it, shundle requires to be downloaded:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ git clone --depth=1 https://github.com/javier-lopez/shundle ~/.shundle/bundle/shundle
&lt;/pre&gt;

&lt;p&gt;Then, shundle will setup everything else, (a new tab will require to be open, or the shell profile requires to be sourced):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ . ~/.bashrc #source your .zshrc or the shell initialization file you use
$ shundle install
&lt;/pre&gt;

&lt;p&gt;Shundle will install the desired plugins and after reloading the session (or openning another tab) a new theme with several commands will be available (aliazator, eternalize, etc). How is different to downloading scripts and placing them in /usr/local/bin or in $PATH?, well, the idea is that eventually only the shell profile file gets tracked to replicate an unique (cli) environment anywhere.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>public cloud services (digitalocean, aws) and vagrant</title>
   <link href="http://javier.io/blog/en/2013/11/07/public-cloud-services-and-vagrant.html"/>
   <updated>2013-11-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/11/07/public-cloud-services-and-vagrant</id>
   <content type="html">&lt;h2 id=&quot;public-cloud-services-digitalocean-aws-and-vagrant&quot;&gt;public cloud services (digitalocean, aws) and vagrant&lt;/h2&gt;

&lt;h6 id=&quot;07-nov-2013&quot;&gt;07 Nov 2013&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/86.png&quot;&gt;&lt;img src=&quot;/assets/img/86.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/ce9681926ec6875d743f1&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;&lt;/p&gt;

&lt;p&gt;I like to keep a fast, ordered and stable computer, that‚Äôs why I use virtual machines, containers, public cloud services and other means to keep it that way, all my ram belongs to firefox üòÖ&lt;/p&gt;

&lt;p&gt;The cloud is great, I can do more with less because they usually have more resources than my laptop and plenty of bandwidth üòç. My favorite elastic cloud is &lt;a href=&quot;http://digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt; ($5/month), sometime ago also tried &lt;a href=&quot;http://aws.amazon.com/ec2/&quot;&gt;Ec2&lt;/a&gt; but its pricing scheme made me uncomfortable. Other than that, I also use &lt;a href=&quot;http://lowendbox.com/&quot;&gt;Low End Boxes&lt;/a&gt; (LEB) when running long term tasks, it‚Äôs amazing how far you can go with a $20/year box.&lt;/p&gt;

&lt;p&gt;So, getting back to the main topic, it turns out than through plugins, &lt;a href=&quot;http://www.vagrantup.com/&quot;&gt;vagrant&lt;/a&gt; is able to launch and provision to remote machines, that‚Äôs what I‚Äôm using to interact with cloud instances.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vagrant up --provider=digital_ocean
$ vagrant up --provider=aws
&lt;/pre&gt;

&lt;p&gt;It‚Äôs not perfect, vagrant takes ages just to print a help screen, but I think I can manage to use it till I find something better, recommendations are welcome.&lt;/p&gt;

&lt;h2 id=&quot;vagrant&quot;&gt;Vagrant&lt;/h2&gt;

&lt;p&gt;Vagrant installation process is a breeze, it supports OSX, Windows and Linux, in some Linux distributions it‚Äôs even included in official repositories, but such versions are commonly out of date, that‚Äôs the case with Ubuntu, so it‚Äôs better to download Vagrant from its site.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://downloads.vagrantup.com/&quot;&gt;http://downloads.vagrantup.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo dpkg -i vagrant_version.deb
$ #vagrant will be installed in /opt/vagrant/
&lt;/pre&gt;

&lt;h3 id=&quot;vagrant-digitalocean&quot;&gt;Vagrant-digitalocean&lt;/h3&gt;

&lt;p&gt;Once vagrant is onboard, it can be used to download plugins.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vagrant plugin install vagrant-digitalocean
&lt;/pre&gt;

&lt;h3 id=&quot;vagrant-aws&quot;&gt;Vagrant-aws&lt;/h3&gt;

&lt;p&gt;The vagrant-aws plugin is somekind troublesome, even when its documentation doesn‚Äôt &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/issues/163&quot;&gt;mention it&lt;/a&gt;, it requires some dependencies:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install build-essential libxslt-dev libxml2-dev zlib1g-dev
&lt;/pre&gt;

&lt;p&gt;The plugin installation isn‚Äôt that bad:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vagrant plugin install vagrant-aws
&lt;/pre&gt;

&lt;p&gt;To play well with aws, you‚Äôll need to create a new &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/issues/95&quot;&gt;default security group&lt;/a&gt; that allows inbound connections through port 22, it‚Äôs dump considering the plugin can deploy new instances but it doesn‚Äôt upload a valid security group afterwards. Don‚Äôt forget to upload your public ssh key too.&lt;/p&gt;

&lt;h3 id=&quot;vagrantfile&quot;&gt;Vagrantfile&lt;/h3&gt;

&lt;p&gt;Finally, the additional providers can be used in Vagrantfile files:&lt;/p&gt;

&lt;pre&gt;
VAGRANT_API_VERSION = &quot;2&quot;

Vagrant.configure(VAGRANT_API_VERSION) do |config|

  config.vm.provider :digital_ocean do |provider, override|
    override.ssh.private_key_path = '~/.ssh/id_rsa'
    override.ssh.username = 'admin'
    override.vm.box = 'digital_ocean'
    override.vm.box_url = &quot;https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box&quot;
    override.vm.provision &quot;shell&quot;, inline: &quot;su - #{override.ssh.username} -c \&quot;sh &amp;lt;(wget -qO- javier.io/s)\&quot;&quot;

    provider.image = 'ubuntu-12-04-x64'
    provider.region = 'nyc2'
    #provider.size = '16gb'
    #provider.size = '8gb'
    #provider.size = '4gb'
    #provider.size = '2gb'
    #provider.size = '1gb'
    provider.size = '512mb'
    provider.private_networking = 'false'
    provider.setup = 'true'
    provider.token = 'ACCESS_KEY_SECRET'
    provider.ca_path = '/etc/ssl/certs/ca-certificates.crt'
  end

  config.vm.provider :aws do |provider, override|
    #depends on: 'build-essential libxslt-dev libxml2-dev zlib1g-dev' on ubuntu
    #requires a custom security group to allow input connections to port 22

    override.ssh.private_key_path = &quot;~/.ssh/id_rsa&quot;
    override.ssh.username = &quot;ubuntu&quot;
    override.vm.box = 'dummy'
    override.vm.box_url = &quot;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&quot;
    override.vm.provision &quot;shell&quot;, inline: &quot;su - #{override.ssh.username} -c \&quot;sh &amp;lt;(wget -qO- javier.io/s)\&quot;&quot;

    provider.access_key_id = &quot;ACCESS_KEY_SECRET&quot;
    provider.secret_access_key = &quot;ACCESS_KEY_SECRET&quot;
    provider.ami = &quot;ami-a73264ce&quot;
    provider.instance_type = &quot;t1.micro&quot;
    provider.keypair_name = &quot;id_rsa&quot;
  end
end

# vi:ft=ruby:
&lt;/pre&gt;

&lt;p&gt;And used with vagrant to launch empty remote boxes:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vagrant up --provider=digital &amp;amp;&amp;amp; vagrant ssh
$ vagrant up --provider=aws     &amp;amp;&amp;amp; vagrant ssh
&lt;/pre&gt;

&lt;p&gt;Don‚Äôt forget to destroy the instances to avoid extra charges.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vagrant destroy
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, how do you launch remote environments?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>report bugs to debian from ubuntu</title>
   <link href="http://javier.io/blog/en/2013/09/28/report-debian-bugs-within-ubuntu.html"/>
   <updated>2013-09-28T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/09/28/report-debian-bugs-within-ubuntu</id>
   <content type="html">&lt;h2 id=&quot;report-bugs-to-debian-from-ubuntu&quot;&gt;report bugs to debian from ubuntu&lt;/h2&gt;

&lt;h6 id=&quot;28-sep-2013&quot;&gt;28 Sep 2013&lt;/h6&gt;

&lt;!--**[![](/assets/img/79.png)](/assets/img/79.png)**--&gt;

&lt;p&gt;I‚Äôm a normal computer user, I don‚Äôt run local mail servers and I don‚Äôt have the intention to do so, I have my email account with gmail and I review it using a web browser or &lt;a href=&quot;http://www.mutt.org/&quot;&gt;mutt&lt;/a&gt; when I‚Äôm in my own computer. This can be troublesome if you pretend to report bugs to &lt;a href=&quot;https://www.debian.org/&quot;&gt;debian&lt;/a&gt; using its &lt;a href=&quot;https://www.debian.org/Bugs/&quot;&gt;bug tracker system&lt;/a&gt; an antique system based in emails.&lt;/p&gt;

&lt;p&gt;To report a bug from within Ubuntu, people are suppose to type:&lt;/p&gt;

&lt;pre&gt;
$ reportbug -B debian package
&lt;/pre&gt;

&lt;p&gt;However it won‚Äôt work because it won‚Äôt find a local mail server (and it would let you know after you spend 15-20 min, smart programming üòí) After spending more precious time on Internet, you‚Äôll find out it actually can be configured to use an external smtp server (I‚Äôve read somewhere Debian devs are interested in upgrade BTS, and probably they will re-invent the wheel in the process because of course there are not enought bug trackers online)‚Ä¶&lt;/p&gt;

&lt;pre&gt;
$ reportbug --configure
&lt;/pre&gt;

&lt;p&gt;And you‚Äôll need to input the following data:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;smtp.gmail.com:587&lt;/li&gt;
  &lt;li&gt;user@gmail.com&lt;/li&gt;
  &lt;li&gt;check tls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After done it a new &lt;strong&gt;$HOME/.reportbugrc&lt;/strong&gt; file will be created and the original command would work.&lt;/p&gt;

&lt;pre&gt;
$ reportbug -B debian package
&lt;/pre&gt;

&lt;h3 id=&quot;extra&quot;&gt;extra&lt;/h3&gt;

&lt;p&gt;If your report contain patches, and after configuring &lt;strong&gt;reportbug&lt;/strong&gt; it may be a good idea to use &lt;strong&gt;submittodebian&lt;/strong&gt; instead:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It adds ubuntu specific &lt;a href=&quot;https://wiki.ubuntu.com/Debian/Usertagging&quot;&gt;tags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Allow patch editing before sending the report (to remove Ubuntu changes)&lt;/li&gt;
  &lt;li&gt;Use internally reportbug to send messages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;submittodebian&lt;/strong&gt; only works when you‚Äôve &lt;em&gt;.orig, .diff, .changes&lt;/em&gt; files, these files are generated by &lt;a href=&quot;http://man.he.net/man1/debuild&quot;&gt;debuild&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;examples&lt;/h3&gt;

&lt;h4 id=&quot;apt-get-source-traditional&quot;&gt;apt-get source (traditional)&lt;/h4&gt;

&lt;pre&gt;
$ apt-get source xicc
$ cd cd xicc-0.2/
$ sed -i 's/colour/color/g' debian/control
$ dch -i 'debian/control: replaced &quot;colour&quot; with &quot;color&quot;.'
$ debuild -S
$ submittodebian
&lt;/pre&gt;

&lt;h4 id=&quot;bzr-modern&quot;&gt;bzr (modern)&lt;/h4&gt;

&lt;pre&gt;
$ bzr branch lp:ubuntu/xicc
$ cd xicc
$ sed -i 's/colour/color/g' debian/control
$ dch -i 'debian/control: replaced &quot;colour&quot; with &quot;color&quot;.'
$ bzr commit -m 'replaced &quot;colour&quot; with &quot;color&quot;.'
$ bzr bd -- -S
$ submittodebian
&lt;/pre&gt;

&lt;p&gt;References&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.debian.org/Bugs/Reporting&quot;&gt;http://www.debian.org/Bugs/Reporting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/Debian/Bugs&quot;&gt;https://wiki.ubuntu.com/Debian/Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>pbuilder tips</title>
   <link href="http://javier.io/blog/en/2013/09/27/pbuilder-tips.html"/>
   <updated>2013-09-27T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/09/27/pbuilder-tips</id>
   <content type="html">&lt;h2 id=&quot;pbuilder-tips&quot;&gt;pbuilder tips&lt;/h2&gt;

&lt;h6 id=&quot;27-sep-2013&quot;&gt;27 Sep 2013&lt;/h6&gt;

&lt;p&gt;I‚Äôll write down some tips useful when dealting with pbuilder in Ubuntu, pbuilder is a builder for testing the creation of .deb packages from .dsc sources, however I often use it as a light replacement for full virtual machines.&lt;/p&gt;

&lt;h2 id=&quot;e-release-signed-by-unknown-key-key-id-8b48ad6246925553&quot;&gt;E: Release signed by unknown key (key id 8B48AD6246925553)&lt;/h2&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
I: Distribution is sid.
I: Building the build environment
I: running debootstrap
/usr/sbin/debootstrap
I: Retrieving Release
I: Retrieving Release.gpg
I: Checking Release signature
E: Release signed by unknown key (key id 8B48AD6246925553)
&lt;/pre&gt;

&lt;p&gt;This messages indicates debootstrap has not been able to verify than &lt;strong&gt;8B48AD6246925553&lt;/strong&gt; is a valid key, by default pbuilder in Ubuntu reads &lt;strong&gt;/usr/share/keyrings/ubuntu-archive-keyring.gpg&lt;/strong&gt;. This key is defined at: &lt;strong&gt;/usr/share/pbuilder/pbuilderrc&lt;/strong&gt;. It sounds logic than a Debian key is not valid in an Ubuntu setup, however sometimes it‚Äôs useful to test a package against Debian without installing a full Debian environment.&lt;/p&gt;

&lt;p&gt;This problem can be solved by adding the Debian key to the Ubuntu keys:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo gpg --no-default-keyring --keyring /usr/share/keyrings/ubuntu-archive-keyring.gpg --recv-keys 8B48AD6246925553
$ sudo DIST=sid ARCH=amd64 pbuilder create
&lt;/pre&gt;

&lt;p&gt;Or adding it to other ring and use it temporally:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ gpg --no-default-keyring --keyring /etc/apt/trusted.gpg --recv-keys 8B48AD6246925553
$ tail $HOME/.pbuilderrc
DEBOOTSTRAPOPTS=(
 '--variant=buildd'
 '--keyring' '/etc/apt/trusted.gpg'
)
$ sudo DIST=sid ARCH=amd64 pbuilder create
&lt;/pre&gt;

&lt;p&gt;If you don‚Äôt want to mess with &lt;strong&gt;~/.pbuilderrc&lt;/strong&gt; the parameter can also be set from the prompt command:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo DIST=sid ARCH=amd64 pbuilder create --debootstrapopts --keyring=/etc/apt/trusted.gpg
&lt;/pre&gt;

&lt;h2 id=&quot;run-x-apps&quot;&gt;Run X apps&lt;/h2&gt;

&lt;p&gt;Pbuilder is a nothing but a chroot + debian enchantments, you can run virtually anything, from audio/video, to cli/gui applications, etc. Running a X app is a two step process:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ xhost + #in the host environment
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
[chroot] $ export DISPLAY=:0.0
[chroot] $ app
&lt;/pre&gt;

&lt;h2 id=&quot;run-i18n-apps&quot;&gt;Run i18n apps&lt;/h2&gt;

&lt;p&gt;Running apps in other languages requires to download extra language packages and modify the LC_ALL variable:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
[chroot] $ apt-get install language-pack-es #interchange -es for the 2 letters of your own lang
[chroot] $ LC_ALL=es_ES.utf-8 app
&lt;/pre&gt;

&lt;h2 id=&quot;run-multimedia-apps&quot;&gt;Run multimedia apps&lt;/h2&gt;

&lt;p&gt;To run multimedia applications besides enabling X, you‚Äôll need to mount &lt;strong&gt;/proc&lt;/strong&gt; and &lt;strong&gt;/dev&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ printf &quot;%s\\n&quot; 'BINDMOUNTS=&quot;${BINDMOUNTS} /dev /proc' &amp;gt;&amp;gt; ~/.pbuilderrc
$ pbuilder login
&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>openfile and samba trash support</title>
   <link href="http://javier.io/blog/en/2013/09/23/openfiler-samba-trash.html"/>
   <updated>2013-09-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/09/23/openfiler-samba-trash</id>
   <content type="html">&lt;h2 id=&quot;openfile-and-samba-trash-support&quot;&gt;openfile and samba trash support&lt;/h2&gt;

&lt;h6 id=&quot;23-sep-2013&quot;&gt;23 Sep 2013&lt;/h6&gt;

&lt;p&gt;Sometimes it can useful to have trash support in samba/cifs. Sadly it‚Äôs not straighforward to do in &lt;a href=&quot;http://www.openfiler.com/&quot;&gt;openfiler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/opt/openfiler/var/www/includes/generate.inc&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In an average samba installation preferences are saved in &lt;strong&gt;/etc/samba/smb.conf&lt;/strong&gt;, in openfiler however this and many other files are constantely rebuild, so this changes won‚Äôt last if you apply them there. Modify &lt;strong&gt;/opt/openfiler/var/www/includes/generate.inc&lt;/strong&gt; instead:&lt;/p&gt;

&lt;p&gt;1588 line:&lt;/p&gt;

&lt;pre&gt;
/* enable trash support */
$ac_smb_fp-&amp;gt;AddLine( &quot;\n&quot;);
$ac_smb_fp-&amp;gt;AddLine( &quot; ; enable trash support&quot;);
$ac_smb_fp-&amp;gt;AddLine( &quot; vfs objects = audit recycle&quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: repository = /path/.trash&quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: keeptree = Yes&quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: exclude = *.tmp, *.temp, *.log, *.ldb&quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: exclude_dir = tmp &quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: versions = Yes &quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot; recycle: noversions = *.docx|*.doc|*.xls|*xlsx|*.ppt|*.odt&quot; );
$ac_smb_fp-&amp;gt;AddLine( &quot;\n&quot;);
&lt;/pre&gt;

&lt;p&gt;It may be a good idea to delete oldest files every now and then:&lt;/p&gt;

&lt;pre&gt;
0 6 * * * root find /path/.trash -type f -mtime +14 -delete &amp;gt; /dev/null
&lt;/pre&gt;

&lt;p&gt;Happy trashing üòâ&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>active extensions in firefox nightly</title>
   <link href="http://javier.io/blog/en/2013/07/31/activate-extensions-in-firefox-nightly.html"/>
   <updated>2013-07-31T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/07/31/activate-extensions-in-firefox-nightly</id>
   <content type="html">&lt;h2 id=&quot;active-extensions-in-firefox-nightly&quot;&gt;active extensions in firefox nightly&lt;/h2&gt;

&lt;h6 id=&quot;31-jul-2013&quot;&gt;31 Jul 2013&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/78.jpg&quot;&gt;&lt;img src=&quot;/assets/img/78.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Firefox nightly is the firefox version who is compiled every night. By default it will avoid loading any extension, however this behaviour can be override, to do so add the variable &lt;strong&gt;extensions.checkCompatibility.nightly&lt;/strong&gt; to its configuration:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open ‚Äòabout:config‚Äô&lt;/li&gt;
  &lt;li&gt;Write &lt;strong&gt;extensions.checkCompatibility.nightly&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select ‚ÄòNew -&amp;gt; Boolean‚Äô&lt;/li&gt;
  &lt;li&gt;Write &lt;strong&gt;extensions.checkCompatibility.nightly&lt;/strong&gt; again in ‚ÄúNew value‚Äù&lt;/li&gt;
  &lt;li&gt;Select ‚Äòfalse‚Äô as the predefined state&lt;/li&gt;
  &lt;li&gt;Reboot firefox&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;From now on &lt;strong&gt;‚Äòabout:plugins‚Äô&lt;/strong&gt; will be available as usual. This procedure is also available as a plugin in the &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/checkcompatibility/&quot;&gt;Disable Compatibility Checks Add-on&lt;/a&gt; it works in all Firefox releases, nightly and stable ones.&lt;/p&gt;

&lt;p&gt;Happy browsing üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nightly.mozilla.org/&quot;&gt;Firefox nightly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kb.mozillazine.org/Extensions.checkCompatibility&quot;&gt;Extensions.checkCompatibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>logstash + redis + elasticsearch + kibana3</title>
   <link href="http://javier.io/blog/en/2013/07/23/logstash-redis-elasticsearch-kibana.html"/>
   <updated>2013-07-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/07/23/logstash-redis-elasticsearch-kibana</id>
   <content type="html">&lt;h2 id=&quot;logstash--redis--elasticsearch--kibana3&quot;&gt;logstash + redis + elasticsearch + kibana3&lt;/h2&gt;

&lt;h6 id=&quot;23-jul-2013&quot;&gt;23 Jul 2013&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/76.jpg&quot;&gt;&lt;img src=&quot;/assets/img/76.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://logstash.net/&quot;&gt;logstash&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://elasticsearch.org/&quot;&gt;elasticsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://three.kibana.org/&quot;&gt;kibana3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://caspian.dotconf.net/menu/Software/SendEmail/&quot;&gt;sendemail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_philosophy&quot;&gt;Composition&lt;/a&gt; applied to logging has been a great sucess lately, this week I‚Äôve verified how easy is to use logstash and friends with 48 servers distributed in two datacenters, I‚Äôve created a script to deploy all programs in a single node.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ bash &amp;lt;(wget -qO- https://raw.github.com/javier-lopez/learn/master/sh/is/log-stack)
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/77.jpg&quot;&gt;&lt;img src=&quot;/assets/img/77.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you prefer using a node per service you‚Äôll need to go your own way, it shouldn‚Äôt be too difficult.&lt;/p&gt;

&lt;p&gt;##Extra, patterns&lt;/p&gt;

&lt;p&gt;To send emails when a pattern is found, I used the grep and file logstash filters:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo service logstash-shipper stop
$ sudo vi /home/logstash/shipper.conf
$ sudo service logstash-shipper start
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/home/logstash/shipper.conf&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;
filter {
  grep {
    type =&amp;gt; &quot;syslog&quot;
    match =&amp;gt; [&quot;@message&quot;,&quot;pattern&quot;]
    add_tag =&amp;gt; &quot;Alert_flood&quot;
    drop =&amp;gt; false
  }

output {
  file {
    type =&amp;gt; &quot;syslog&quot;
    tags =&amp;gt; [ &quot;Alert_flood&quot; ]
    message_format =&amp;gt; &quot;%{@message}&quot;
    path =&amp;gt; &quot;/tmp/logstash_alert&quot;
  }
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; shipper.conf doesn‚Äôt look exactly like this, these snippets must be integrated with your own files, copy and paste won‚Äôt work. If you‚Äôre not sure about the syntax, take a look at logstash &lt;a href=&quot;http://logstash.net/docs/1.1.13/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, after rebooting the service logstash will add an ‚ÄúAlert_flood‚Äù tag to all messages where the pattern is found and will copy these messages (besides sending them to redis) to &lt;strong&gt;/tmp/logstash_alert&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Finally I wrote a &lt;a href=&quot;https://gist.github.com/javier-lopez/6066888&quot;&gt;script&lt;/a&gt; to send warning messages by email to the admins:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo crontab -l
*/1 * * * * /usr/local/bin/check_alerts_logstash.sh
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cleversoft.wordpress.com/2013/04/05/887/&quot;&gt;http://cleversoft.wordpress.com/2013/04/05/887/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>lib bash</title>
   <link href="http://javier.io/blog/en/2013/06/18/bash-lib.html"/>
   <updated>2013-06-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/06/18/bash-lib</id>
   <content type="html">&lt;h2 id=&quot;lib-bash&quot;&gt;lib bash&lt;/h2&gt;

&lt;h6 id=&quot;18-jun-2013&quot;&gt;18 Jun 2013&lt;/h6&gt;

&lt;!--**![](/assets/img/75.png)**--&gt;

&lt;p&gt;I don‚Äôt consider myself a programmer but a sort of power user, I‚Äôm in love with the cli linux interface and everytime I can I automatizate repetive tasks. That‚Äôs how I ended writting &lt;a href=&quot;https://github.com/javier-lopez/learn/tree/master/sh&quot;&gt;60~ scripts&lt;/a&gt;, after a while I noticed a pattern, I used to copy and paste some parts of other scripts to finish faster so I started to write functions and put them in a lib file. After a while it has been increasing and I thought it would be a good idea to share it with others.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/lib&quot;&gt;sh/lib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can improve current functions or add new ones you are welcome (just branch and push back), be aware that current code may hurt your eyes, you‚Äôve been warned.&lt;/p&gt;

&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/43162198175c203d5a8f6&quot; width=&quot;640&quot; height=&quot;300&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Have fun üòâ&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>remote environments normalization</title>
   <link href="http://javier.io/blog/en/2013/05/28/remote-environments-normalization.html"/>
   <updated>2013-05-28T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/05/28/remote-environments-normalization</id>
   <content type="html">&lt;h2 id=&quot;remote-environments-normalization&quot;&gt;remote environments normalization&lt;/h2&gt;

&lt;h6 id=&quot;28-may-2013&quot;&gt;28 May 2013&lt;/h6&gt;

&lt;p&gt;I access a fair amount of remote environments through ssh, when I do it most of the times I end copying little bits of configuration files to make them easier to use. I do it so often than I created script to do it for me.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sh &amp;lt;(wget -qO- javier.io/s)
&lt;/pre&gt;

&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/3bfc94afe0f51e8d6411f&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

&lt;p&gt;Some of my favorite changes are:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[+] Installation of: byobu, vim-nox, curl, command-not-found, libpam-captcha, shundle and htop
[+] Removal of services: sendemail, apache, bind, etc
[+] Vim configuration
[+] Wcd as a replacement to cd
[+] +60 scripts:
    [+] pastebin,  $ cat file | pastebin
    [+] extract,   $ extract file.suffix
    [+] fu-search, $ fu-search grep
    [+] rm_,       $ rm .bashrc &amp;amp;&amp;amp; rm -u .bashrc
    [+] uimg,      $ uimg image.png #img pastebin
    [+] ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By default the script will backup(.old) any file before override it. Now all my new pristine environments are equal üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/dotfiles/&quot;&gt;dotfiles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/shundle&quot;&gt;shundle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/&quot;&gt;utils&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>access localhost with pagekite</title>
   <link href="http://javier.io/blog/en/2013/04/06/access-localhost-with-pagekite.html"/>
   <updated>2013-04-06T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/04/06/access-localhost-with-pagekite</id>
   <content type="html">&lt;h2 id=&quot;access-localhost-with-pagekite&quot;&gt;access localhost with pagekite&lt;/h2&gt;

&lt;h6 id=&quot;06-apr-2013&quot;&gt;06 Apr 2013&lt;/h6&gt;

&lt;p&gt;I ‚ô° pagekite, it allows me to connect to my laptop from anywhere, literally, it doesn‚Äôt matter if my computer is behind a nat router or if my input traffic is blocked, as long as my computer can start connections to internet I‚Äôm covered. And I don‚Äôt need to redefine anything, it will work even if I‚Äôm changing constantly networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/68.jpg&quot;&gt;&lt;img src=&quot;/assets/img/68.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why do I need to access my computer under every possible scenario?, personal portability, I prefer to travel lightly, just give me a book and some headphones and I‚Äôm ready to go to the end of the world. And even though I‚Äôve most of my stuff in servers some things somehow end in my personal laptop.&lt;/p&gt;

&lt;p&gt;So, right now I connect to home by typing:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ssh home.javier.io
&lt;/pre&gt;

&lt;p&gt;It doesn‚Äôt matter where I‚Äôm, neither where my laptop is, it will just work üòÇ&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested in setting something similar up, go and create an account in &lt;a href=&quot;http://pagekite.net&quot;&gt;http://pagekite.net&lt;/a&gt;, personal startup of &lt;a href=&quot;http://bre.klaki.net/&quot;&gt;Bjarni Einarsson&lt;/a&gt;, icelandic hacker.&lt;/p&gt;

&lt;p&gt;Once done, you‚Äôll be able to run:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ curl -s https://pagekite.net/pk/ |sudo bash #for installing pagekite in 1 line
$ pagekite.py 80 yourname.pagekite.me
&lt;/pre&gt;

&lt;p&gt;And now you‚Äôll be running your own web server available to the world, isn‚Äôt great? Now let‚Äôs talk about more interesting stuff such us using your own domain and connecting to ssh or any other protocol.&lt;/p&gt;

&lt;p&gt;This is what happens when someone uses pagekite:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ssh home.javier.io
&lt;/pre&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       192.168.1.x       home.javier.io  home.javier.pagekite.me   192.168.1.x
       :::::::::::        :::::::::::          ::::::::::::        :::::::::::::::
       | client  |   =&amp;gt;   |   dns   |    =&amp;gt;    | pagekite |     =&amp;gt; |   laptop    |
       :::::::::::        :::::::::::          ::::::::::::        :::::::::::::::
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The computer where the client is launched will connect to a dns, which in return will send it to a pagekite subdomain and from there to a reverse connection between pagekite and your server. Alloying to exchange data between client and server(laptop behind nat) through pagekite servers.&lt;/p&gt;

&lt;h3 id=&quot;dns&quot;&gt;Dns&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Cname&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this to work, home.javier.io must point to pagekite. This can be done with a CNAME entry, and it depends of your dns provider. In my case it looks like this (&lt;a href=&quot;http://iwantmyname.com&quot;&gt;http://iwantmyname.com&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/69.png&quot;&gt;&lt;img src=&quot;/assets/img/69.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pagekite.net&quot;&gt;pagekite.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Upon registration, pagekite will give you a &lt;strong&gt;nick.pagekite.me&lt;/strong&gt; subdomain for free where you can add &lt;a href=&quot;https://pagekite.net/signup/?more=free&quot;&gt;other subdomains&lt;/a&gt; to get &lt;strong&gt;subdomain.nick.pagekite.me&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/70.png&quot;&gt;&lt;img src=&quot;/assets/img/70.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;home.javier.io kite&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to &lt;a href=&quot;https://pagekite.net/signup/?more=cname#cnameForm&quot;&gt;register&lt;/a&gt; the CNAME entry in pagekite as well:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/71.png&quot;&gt;&lt;img src=&quot;/assets/img/71.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now your &lt;a href=&quot;https://pagekite.net/home/&quot;&gt;home page&lt;/a&gt; should look like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/72.png&quot;&gt;&lt;img src=&quot;/assets/img/72.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;server&quot;&gt;Server&lt;/h3&gt;

&lt;p&gt;Now it‚Äôs time to configure pagekite in the target machine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;###[ Current settings for pagekite.py v0.5.6a. ]#########
# ~/.pagekite.rc
## NOTE: This file may be rewritten/reordered by pagekite.py.
#

##[ Default kite and account details ]##
kitename = home.javier.io
kitesecret = KITESECRET_KEY

##[ Front-end settings: use pagekite.net defaults ]##
defaults

##[ Back-ends and local services ]##
service_on = http:@kitename : localhost:80 : @kitesecret
service_on = raw-22:@kitename : localhost:22 : @kitesecret

##[ Miscellaneous settings ]##
savefile = ~/.pagekite.rc

###[ End of pagekite.py configuration ]#########
END
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And launch the service:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./pagekite.py
&amp;gt;&amp;gt;&amp;gt; Hello! This is pagekite v0.5.6a.                            [CTRL+C = Stop]
    Connecting to front-end 69.164.211.158:443 ...
     - Protocols: http http2 http3 https websocket irc finger httpfinger raw
     - Protocols: minecraft
     - Ports: 79 80 443 843 2222 3000 4545 5222 5223 5269 5670 6667 8000 8080
     - Ports: 8081 9292 25565
     - Raw ports: 22 virtual
    Quota: You have 2559.74 MB, 29 days and 4 connections left.
    Connecting to front-end 173.230.155.164:443 ...
~&amp;lt;&amp;gt; Flying localhost:22 as ssh://home.javier.io:22/ (HTTP proxied)
~&amp;lt;&amp;gt; Flying localhost:80 as https://home.javier.io/
 &amp;lt;&amp;lt; pagekite.py [flying]   Kites are flying and all is well.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;client&quot;&gt;Client&lt;/h3&gt;

&lt;p&gt;To connect to your laptop you can use any web browser or complete an extra step to be able to use ssh. The &lt;strong&gt;$HOME/.ssh/config&lt;/strong&gt; file should be edited as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host home.javier.io
    CheckHostIP no
    ProxyCommand /bin/nc -X connect -x %h:443 %h %p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; the nc command must be the openbsd version, in Ubuntu it‚Äôs called &lt;strong&gt;netcat-openbsd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If everything is correct, you should now be able to login:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ssh home.javier.io
admin@home.javier.io's password:
&lt;/pre&gt;

&lt;h3 id=&quot;own-server&quot;&gt;Own Server&lt;/h3&gt;

&lt;p&gt;Pagekite is free software, both backend(client) and frontend(server). The same &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pagekite.py&lt;/code&gt; can play both roles. This is a quick summary in case you prefer going your own.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
(vps) $ pagekite --clean --isfrontend --ports=8080 --domain=*:h.javier.io:passw0rd
&amp;gt;&amp;gt;&amp;gt; Hello! This is pagekite v0.5.6a.                            [CTRL+C = Stop]
    This is a PageKite front-end server.
     - Listening on *:8080
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
(target) $ pagekite --clean --frontend=h.javier.io:8080 --service_on=http/8080:h.javier.io:localhost:8080:passw0rd
Connecting to front-end 107.161.164.253:8080 ...
     - Protocols: http http2 http3 https websocket irc finger httpfinger raw
     - Protocols: minecraft
     - Ports: 8080
~&amp;lt;&amp;gt; Flying localhost:8080 as http://h.javier.io:8080/
&lt;/pre&gt;

&lt;p&gt;And with that, your local machine will be available on Internet through your own public machine.&lt;/p&gt;

&lt;p&gt;That‚Äôs it, happy flying üòã&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pagekite/PyPagekite&quot;&gt;https://github.com/pagekite/PyPagekite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>improve boot performance in Ubuntu Precise and above</title>
   <link href="http://javier.io/blog/en/2013/03/18/improve-boot-performance-in-ubuntu-1204.html"/>
   <updated>2013-03-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2013/03/18/improve-boot-performance-in-ubuntu-1204</id>
   <content type="html">&lt;h2 id=&quot;improve-boot-performance-in-ubuntu-precise-and-above&quot;&gt;improve boot performance in Ubuntu Precise and above&lt;/h2&gt;

&lt;h6 id=&quot;18-mar-2013&quot;&gt;18 Mar 2013&lt;/h6&gt;

&lt;p&gt;The project &lt;a href=&quot;http://e4rat.sourceforge.net/&quot;&gt;e4rat&lt;/a&gt; develops tools who improve the boot process in Linux, to do so, it takes advantage of the reassignment of files in &lt;a href=&quot;http://es.wikipedia.org/wiki/Ext4&quot;&gt;ext4&lt;/a&gt; if you‚Äôre not using ext4 it won‚Äôt work. It won‚Äôt work neither if you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/Solid-state_drive&quot;&gt;solid state drives&lt;/a&gt;, for those disks &lt;a href=&quot;https://launchpad.net/ureadahead&quot;&gt;ureadahead&lt;/a&gt; (installed by default) already do a great job.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;A lot of the time who is allocated at the boot process is wasted booting and initializing hard drives (it doesn‚Äôt happen in ssds) you can see it by yourself with &lt;a href=&quot;http://www.bootchart.org/&quot;&gt;bootchart&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/66.png&quot;&gt;&lt;img src=&quot;/assets/img/66.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The red graph represent the time waiting for the hard drive and the blue one the time is cpu is being used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;e4rat&lt;/strong&gt; technique move critical files (for the booting process) alongside so these files can be loaded with minimal machinery to the hard drives. After loading them in ram, the time required to read them will drop significantly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/67.png&quot;&gt;&lt;img src=&quot;/assets/img/67.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This a graph of the same system after using &lt;em&gt;e4rat&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The process should be repeated every time a kernel upgrade is done or when non simple updates have been applied.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;e4rat&lt;/strong&gt; requires at least a 2.6.31 linux kernel, in Ubuntu such kernels are distributed since Ubuntu 11.04. Fortunately the project provides .deb packages so the installation process is quite simple, grab the appropriate version for your cpu architecture from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/e4rat/files&quot;&gt;http://sourceforge.net/projects/e4rat/files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before installing &lt;strong&gt;e4rat&lt;/strong&gt; you will need ensure &lt;strong&gt;ureadahead&lt;/strong&gt; has been completely removed, to do so in Debian/Ubuntu run:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get purge ureadahead
&lt;/pre&gt;

&lt;p&gt;The system will ask to uninstall &lt;strong&gt;ubuntu-minimal&lt;/strong&gt; too. Let it continue, ubuntu-minimal is a meta-package who doesn‚Äôt contain anything by itself, it‚Äôs useful however during the OS installation process to bring with it a bunch of packages.&lt;/p&gt;

&lt;p&gt;After removing completely ureadahead, &lt;strong&gt;e4rat&lt;/strong&gt; can be installed with dpkg:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo dpkg -i e4rat_0.2.3_amd64.deb
&lt;/pre&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;For &lt;strong&gt;e4rat&lt;/strong&gt; to work it needs to recognize which files are been used at the boot process, to do so add the &lt;strong&gt;init=/sbin/e4rat-collect&lt;/strong&gt; string to the &lt;strong&gt;kernel&lt;/strong&gt; line in &lt;strong&gt;/boot/grub/menu.lst&lt;/strong&gt; or the equivalent file for grub2, etc:&lt;/p&gt;

&lt;pre class=&quot;config&quot;&gt;
title   Ubuntu 12.04.2 LTS, kernel 3.8.2-ck1
uuid    793e9a6d-d545-46f0-ac9c-49071c450b62
kernel  ... ro init=/sbin/e4rat-collect
initrd  /boot/initrd.img-3.8.2-ck1
quiet
&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Upon rebooting launch as fast as possible your most common applications (web/file browsers?, terminal emulator?, etc), e4rat will add to its index the files loaded in memory in the first 2 minutes after booting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Review &lt;strong&gt;/var/lib/e4rat/startup.log&lt;/strong&gt; to confirm it‚Äôs such information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ file /var/lib/e4rat/startup.log
/var/lib/e4rat/startup.log: ASCII text
&lt;/pre&gt;

&lt;h3 id=&quot;file-reallocation&quot;&gt;File reallocation&lt;/h3&gt;

&lt;p&gt;To this moment &lt;strong&gt;e4rat&lt;/strong&gt; already know what files should be loaded at boot time, to relocate them reboot the system in recovery (or safe) mode.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In my system the grub entry looks like this:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&quot;config&quot;&gt;
Ubuntu 12.04.2 LTS, kernel 3.8.2-ck1 (recovery mode)
&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Once loaded execute &lt;strong&gt;e4rat-realloc&lt;/strong&gt; several times till the software indicates there are no more improvements possible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# e4rat-realloc /var/lib/e4rat/startup.log
...
...
No further improvements...
&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Replace &lt;strong&gt;init=/sbin/e4rat-collect&lt;/strong&gt; with &lt;strong&gt;init=/sbin/e4rat-preload&lt;/strong&gt;:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&quot;config&quot;&gt;
title   Ubuntu 12.04.2 LTS, kernel 3.8.2-ck1
uuid    793e9a6d-d545-46f0-ac9c-49071c450b62
kernel  ... ro plymouth:force-splash init=/sbin/e4rat-preload
initrd  /boot/initrd.img-3.8.2-ck1
quiet
&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reboot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Done, now the boot process time should be faster and smoother üòé&lt;/p&gt;

&lt;h3 id=&quot;uninstallation&quot;&gt;Uninstallation&lt;/h3&gt;

&lt;p&gt;If you find &lt;strong&gt;4rat&lt;/strong&gt; too difficult to use or buggy, you can uninstall it by following the next steps:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get purge e4rat
$ sudo apt-get install ubuntu-minimal ureadahead
$ sudo vim /boot/grub/menu.lst #and remove init=/sbin/e4rat-preload
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rafalcieslak.wordpress.com/2013/03/17/e4rat-decreasing-bootup-time-on-hdd-drives&quot;&gt;http://rafalcieslak.wordpress.com/2013/03/17/e4rat-decreasing-bootup-time-on-hdd-drives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>dmenu with xft support</title>
   <link href="http://javier.io/blog/en/2012/12/26/dmenu-xft.html"/>
   <updated>2012-12-26T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/12/26/dmenu-xft</id>
   <content type="html">&lt;h2 id=&quot;dmenu-with-xft-support&quot;&gt;dmenu with xft support&lt;/h2&gt;

&lt;h6 id=&quot;26-dec-2012&quot;&gt;26 Dec 2012&lt;/h6&gt;

&lt;p&gt;I love minimalist programs not ugly ones, dmenu is one of my favorite apps and I‚Äôve just discovered a patch for making it use pretty xft fonts. So I recompiled a personal version and put it somewhere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/65.jpg&quot;&gt;&lt;img src=&quot;/assets/img/65.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre interested in using this version, feel free to grab a copy (only Ubuntu LTS versions are supported):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-add-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install dmenu
&lt;/pre&gt;

&lt;p&gt;Upon installation, dmenu can be used with any xft font:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ dmenu_run -fn &quot;Liberation Mono-8&quot;
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/suckless-tools/+bug/1093745&quot;&gt;LP #1093745&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>git clone only the last snapshot of a project</title>
   <link href="http://javier.io/blog/en/2012/11/22/git-clone-last.html"/>
   <updated>2012-11-22T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/11/22/git-clone-last</id>
   <content type="html">&lt;h2 id=&quot;git-clone-only-the-last-snapshot-of-a-project&quot;&gt;git clone only the last snapshot of a project&lt;/h2&gt;

&lt;h6 id=&quot;22-nov-2012&quot;&gt;22 Nov 2012&lt;/h6&gt;

&lt;p&gt;Git clone by default download all the data attached to a repository, there are sometimes however when I‚Äôm only interested in getting the latest snapshot. This can be done with the &lt;strong&gt;‚Äìdepth=1&lt;/strong&gt; option:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ git clone --depth=1 git://github.com/javier-lopez/dotfiles.git
&lt;/pre&gt;

&lt;p&gt;It‚Äôs called shallow clone&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1209999/using-git-to-get-just-the-latest-revision&quot;&gt;http://stackoverflow.com/questions/1209999/using-git-to-get-just-the-latest-revision&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>dmenu for everything</title>
   <link href="http://javier.io/blog/en/2012/11/18/dmenu-for-everything.html"/>
   <updated>2012-11-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/11/18/dmenu-for-everything</id>
   <content type="html">&lt;h2 id=&quot;dmenu-for-everything&quot;&gt;dmenu for everything&lt;/h2&gt;

&lt;h6 id=&quot;18-nov-2012&quot;&gt;18 Nov 2012&lt;/h6&gt;

&lt;p&gt;I love minimalism systems and programs who focus in doing a single task very well, &lt;a href=&quot;http://tools.suckless.org/dmenu/&quot;&gt;dmenu&lt;/a&gt; is one of them, it reads input from user, matches patterns and returns results, simple! With this functionality it can (ab)used to create launchers for almost anything, let‚Äôs review how to create a virtualbox launcher‚Ä¶&lt;/p&gt;

&lt;p&gt;The first step (and the hardest) is to figure out how to create an option list to present in screen, on this example vbox machines:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ vboxmanage list vms | cut -d\&quot; -f2
&lt;/pre&gt;

&lt;p&gt;Once defined, it‚Äôs easy to come up with missing parts:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
DMENU='dmenu -p &amp;gt; -i -nb #000000 -nf #ffffff -sb #000000 -sf #3B5998'
vboxmachine=&quot;$(vboxmanage list vms | cut -d\&quot; -f2 | $DMENU)&quot;
[ -z &quot;${vboxmachine}&quot; ] &amp;amp;&amp;amp; exit 0 || vboxmanage -q startvm &quot;$vboxmachine&quot; --type gui
&lt;/pre&gt;

&lt;p&gt;Everything in 3 LOC!, this script can now be saved at &lt;strong&gt;/usr/local/bin/&lt;/strong&gt; and used as a shortcut, in my use case, I added it to &lt;strong&gt;~/.i3/config&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;
# vbox:
bindsym $Altgr+v exec dmenu_vbox
&lt;/pre&gt;

&lt;p&gt;So now I can launch vbox machines by pressing &lt;strong&gt;Altrg + v&lt;/strong&gt; and select the appropiated machine, if you liked dmenu as much as I did, I‚Äôve made a handful of scripts to control music, user sessions, apps, etc. Feel free to grab them at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/tree/master/sh/tools&quot;&gt;https://github.com/javier-lopez/learn/tree/master/sh/tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/61.png&quot;&gt;&lt;img src=&quot;/assets/img/61.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/62.png&quot;&gt;&lt;img src=&quot;/assets/img/62.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/63.png&quot;&gt;&lt;img src=&quot;/assets/img/63.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/64.png&quot;&gt;&lt;img src=&quot;/assets/img/64.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>um lugar pertinho do c√©u</title>
   <link href="http://javier.io/blog/pt/2012/11/17/um-lugar-pertinho-do-ceu.html"/>
   <updated>2012-11-17T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2012/11/17/um-lugar-pertinho-do-ceu</id>
   <content type="html">&lt;h2 id=&quot;um-lugar-pertinho-do-c√©u&quot;&gt;um lugar pertinho do c√©u&lt;/h2&gt;

&lt;h6 id=&quot;17-nov-2012&quot;&gt;17 Nov 2012&lt;/h6&gt;

&lt;p&gt;A √©poca de ouro do cinema mexicano consagrou uma das figuras mais importantes do M√©xico, o imortal Pedro Infante.&lt;/p&gt;

&lt;p&gt;Pedro Infante foi um ator e cantor mexicano, nasceu em Sinaloa, hoje um dos estados mais perigosos do pais, e morreu em um acidente de avia√ß√£o aos 39 anos de idade.&lt;/p&gt;

&lt;p&gt;Em um lugar pertinho do c√©u, Pedro Infante atua no papel de Pedro Gonz√°les, uma coisa curiosa dos filmes daqueles tempos √© que os nomes fict√≠cios pareciam-se muito com os verdadeiros, um imigrante que chega √† cidade com muitas esperan√ßas de conseguir um bom trabalho, mas que fica preso nas garras do sistema moderno.&lt;/p&gt;

&lt;p&gt;Um excelente filme, em caso voc√™ n√£o seja sens√≠vel demais&lt;/p&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/LtpCUf_Spu0?version=3&amp;amp;hl=en_US&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/LtpCUf_Spu0?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>dez coisas do que eu gosto</title>
   <link href="http://javier.io/blog/pt/2012/10/18/dez-coisas-do-que-eu-gosto.html"/>
   <updated>2012-10-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2012/10/18/dez-coisas-do-que-eu-gosto</id>
   <content type="html">&lt;h2 id=&quot;dez-coisas-do-que-eu-gosto&quot;&gt;dez coisas do que eu gosto&lt;/h2&gt;

&lt;h6 id=&quot;18-oct-2012&quot;&gt;18 Oct 2012&lt;/h6&gt;

&lt;p&gt;Uma lista nao extensiva:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dormir o dia todo&lt;/li&gt;
  &lt;li&gt;Comer pepinos&lt;/li&gt;
  &lt;li&gt;Jogar com minhas orelhas&lt;/li&gt;
  &lt;li&gt;Tomar banho at√© que os meus dedos fiquem enrugados&lt;/li&gt;
  &lt;li&gt;Ler um livro de contos&lt;/li&gt;
  &lt;li&gt;Jogar xadrex ou futebol&lt;/li&gt;
  &lt;li&gt;Recever presentes&lt;/li&gt;
  &lt;li&gt;Ficar sozinho em um lugar que nao conheca&lt;/li&gt;
  &lt;li&gt;Navegar na Internet&lt;/li&gt;
  &lt;li&gt;Beijar garotas&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>tropa de elite</title>
   <link href="http://javier.io/blog/pt/2012/08/19/tropa-de-elite.html"/>
   <updated>2012-08-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2012/08/19/tropa-de-elite</id>
   <content type="html">&lt;h2 id=&quot;tropa-de-elite&quot;&gt;tropa de elite&lt;/h2&gt;

&lt;h6 id=&quot;19-aug-2012&quot;&gt;19 Aug 2012&lt;/h6&gt;

&lt;p&gt;A alguns meses assisti a um filme chamado tropa de elite. √â a historia de um homem que lidera um grupo fortemente armado e que sobe aos morros para matar os narcotraficantes. Gostei do filme, porque acredito que as pessoas podem olhar o outro lado da pol√≠cia, os homens honestos e com vontade de melhorar as coisas.&lt;/p&gt;

&lt;p&gt;O filme tambem faz um retrato interessante da sociedade do estado do Rio de Janeiro, acredito que como no Mexico, l√° a profissao precisa ser mais valorizada e os policiais melhor treinados. Da segunda parte quase nao gostei, tem tintes politicos e o capitao Nascimiento ja nao √© um homem normal, mais √© como um superman. Quais sao os seus filmes favoritos?&lt;/p&gt;

&lt;h3 id=&quot;tropa-de-elite-1&quot;&gt;Tropa de elite 1&lt;/h3&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Jz2DadDoRjg?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/Jz2DadDoRjg?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;h3 id=&quot;tropa-de-elite-2&quot;&gt;Tropa de elite 2&lt;/h3&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/XL3ybRR1oE0?version=3&amp;amp;hl=en_US&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/XL3ybRR1oE0?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>kernel -ck for ubuntu precise</title>
   <link href="http://javier.io/blog/en/2012/07/03/kernel-ck-for-ubuntu-1204.html"/>
   <updated>2012-07-03T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/07/03/kernel-ck-for-ubuntu-1204</id>
   <content type="html">&lt;h2 id=&quot;kernel--ck-for-ubuntu-precise&quot;&gt;kernel -ck for ubuntu precise&lt;/h2&gt;

&lt;h6 id=&quot;03-jul-2012&quot;&gt;03 Jul 2012&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;UPDATE: 16/Jul/2014, the script was updated to compile the 3.15.5 kernel version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://ck-hack.blogspot.mx/&quot;&gt;ck&lt;/a&gt;&lt;/strong&gt; is the name for the Con Kolivas patchet which main purpose is to increment the performance for Linux in PC‚Äôs and laptops. Traditionally the kernel comes with a lot of things for enterprise environments, that‚Äôs why this patchset have some relative popularity with people who wants to improve their machine for games, multimedia and tradicional work (browsing the web, editing texts, im, etc).&lt;/p&gt;

&lt;p&gt;The steps to compile a kernel with these modifications are:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Download the vanilla kernel
Download and apply the: -bfq, -ck patchsets
Configure the kernel
Compile
Install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fortunately some users at ubuntu-br.org have been following the -ck branch, close enough to create a script that automatize the process:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Kernel Omnislash (Unofficial) ‚Äì Aprendendo a voar sem segredos!!! (learning to fly without secrets)
http://sourceforge.net/projects/scriptkernel/files/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After check it out, I‚Äôve edited it (to avoid some errors and to add some bells and whistles) and I‚Äôve put the result in: https://github.com/javier-lopez/learn/blob/master/sh/is/kernel-ck-ubuntu
The idea is that from time to time I check the script to see that it compiles the last -ck patchset version for the last Ubuntu LTS version. If you want to try it, run the following commands:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget https://raw.github.com/javier-lopez/learn/master/sh/is/kernel-ck-ubuntu
$ time sh kernel-ck-ubuntu
$ sudo dpkg -i ./linux-*.deb
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/59.png&quot;&gt;&lt;img src=&quot;/assets/img/59.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And reboot your system, if you don‚Äôt want to compile it yourself, I‚Äôve build some .deb packages for amd64 and x86 üòá&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3.4.5&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.4.5-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.4.5-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.7.1&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.7.1-ck-i386.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.7.1-ck-amd64.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.8.2&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.8.2-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.8.2-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.9.2&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.9.2-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.9.2-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.11.7&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.11.7-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.11.7-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.12.1&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.12.1-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.12.1-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.13.7&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.13.7-ck-i386.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.13.7-ck-amd64.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.14.4&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.14.4-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.14.4-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;3.15.5&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.15.5-ck-amd64.tar.bz2&quot;&gt;amd64&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://f.javier.io/rep/deb/3.15.5-ck-i386.tar.bz2&quot;&gt;x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>latex and me</title>
   <link href="http://javier.io/blog/en/2012/05/15/latex-and-me.html"/>
   <updated>2012-05-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/05/15/latex-and-me</id>
   <content type="html">&lt;h2 id=&quot;latex-and-me&quot;&gt;latex and me&lt;/h2&gt;

&lt;h6 id=&quot;15-may-2012&quot;&gt;15 May 2012&lt;/h6&gt;

&lt;p&gt;I maintain my CV in latex because it can easily generate different outputs, it‚Äôs easy to modify and I think it gives extra geeky points. In the other hand not always is easy to compile.., so I‚Äôll write down the process to not forget it and do it faster next time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sharepdfbooks.com/ZZKLWWMPNYPU/template_banking_black.pdf.html&quot;&gt;&lt;img src=&quot;/assets/img/47.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ apt-get install texlive-latex-base texlive-latex-extra latex-xcolor texlive-fonts-recommended
$ wget http://mirror.ctan.org/macros/latex/contrib/moderncv.zip
$ unzip moderncv.zip
$ sudo mv moderncv /usr/share/texmf-texlive/tex/latex/
$ sudo mktexlsr
&lt;/pre&gt;

&lt;p&gt;After installing the dependencies and latex itself, the compilation process can be triggered as follows:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ latex cv.tex
&lt;/pre&gt;

&lt;p&gt;The resulting .dvi file can then be converted to a pdf file:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ dvipdfm cv.dvi
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/2704079&quot;&gt;&lt;img src=&quot;/assets/img/48.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If it seems like too much work, it can also be compiled &lt;a href=&quot;https://www.sharelatex.com&quot;&gt;online&lt;/a&gt; üòÅ&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>rm wrapper</title>
   <link href="http://javier.io/blog/en/2012/03/19/rm-wrapper.html"/>
   <updated>2012-03-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/03/19/rm-wrapper</id>
   <content type="html">&lt;h2 id=&quot;rm-wrapper&quot;&gt;rm wrapper&lt;/h2&gt;

&lt;h6 id=&quot;19-mar-2012&quot;&gt;19 Mar 2012&lt;/h6&gt;

&lt;p&gt;Sometimes when I run:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ rm foo
&lt;/pre&gt;

&lt;p&gt;I realize I didn‚Äôt mean it, so with this in my mind I made a little &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/trash&quot;&gt;wrapper&lt;/a&gt; around rm, now, when I remove files, they‚Äôre send them to the trash bin, it‚Äôs compatible with nautilus/pcmanfm.&lt;/p&gt;

&lt;p&gt;Example: If I run from a terminal &lt;strong&gt;$ rm img.png&lt;/strong&gt; I can then go to the Trash carpet in Nautilus and restore it. If I delete an item with Nautilus (by pressing the &lt;strong&gt;Supr&lt;/strong&gt; button) I can open a terminal and type &lt;strong&gt;$ rm -u img.png&lt;/strong&gt; and get back my stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/53.png&quot;&gt;&lt;img src=&quot;/assets/img/53.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want use the script, download and move it to &lt;strong&gt;/usr/local/bin&lt;/strong&gt;, then you can use as &lt;strong&gt;rm_&lt;/strong&gt; or even override rm through and alias defined in the &lt;strong&gt;~/.bashrc&lt;/strong&gt; file:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ alias rm='trash'
&lt;/pre&gt;

&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/0a5b334fd24f82bd5ede1&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt; --&gt;

&lt;p&gt;üòà&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>online partners</title>
   <link href="http://javier.io/blog/en/2012/03/11/online-partners.html"/>
   <updated>2012-03-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/03/11/online-partners</id>
   <content type="html">&lt;h2 id=&quot;online-partners&quot;&gt;online partners&lt;/h2&gt;

&lt;h6 id=&quot;11-mar-2012&quot;&gt;11 Mar 2012&lt;/h6&gt;

&lt;p&gt;For one reason or another I find more reliable remote people, I mean, whatever I make a new friendship it‚Äôs almost always the case that if I made it online it will last more time and will often of better quality, I suppose that‚Äôs because when you‚Äôre behind a screen, your acts are premeditated, you think better what you say and how to react to what people say to you. There are no ‚ÄúI‚Äôm moving somewhere else‚Äù, because there is no place without Internet!, and depending on your Internet addiction you can even end talking more with them than with other local people.&lt;/p&gt;

&lt;p&gt;Nothing, I appreciate online partners üòå&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>out of office</title>
   <link href="http://javier.io/blog/en/2012/03/03/out-of-office.html"/>
   <updated>2012-03-03T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/03/03/out-of-office</id>
   <content type="html">&lt;h2 id=&quot;out-of-office&quot;&gt;out of office&lt;/h2&gt;

&lt;h6 id=&quot;03-mar-2012&quot;&gt;03 Mar 2012&lt;/h6&gt;

&lt;p&gt;I‚Äôve just finished some &lt;a href=&quot;http://www.youtube.com/user/ugjmexico&quot;&gt;videos&lt;/a&gt; for the UGJ, I spend almost all my day walking in Mexico city downtown looking at buildings and buying stuff, I took a cup of coffe with &lt;a href=&quot;http://xakemix.wordpress.com/&quot;&gt;Akemi&lt;/a&gt; and shaved my beard before going to bed üò¢&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>with good luck!</title>
   <link href="http://javier.io/blog/en/2012/02/24/with-good-luck.html"/>
   <updated>2012-02-24T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/02/24/with-good-luck</id>
   <content type="html">&lt;h2 id=&quot;with-good-luck&quot;&gt;with good luck!&lt;/h2&gt;

&lt;h6 id=&quot;24-feb-2012&quot;&gt;24 Feb 2012&lt;/h6&gt;

&lt;p&gt;I hate banks!, today I lost my morning trying to use paypal through my &lt;a href=&quot;http://www.banorte.com/&quot;&gt;banorte&lt;/a&gt; account, however at the end I was able to buy my gift for &lt;a href=&quot;http://mwkdoll.blogspot.com/&quot;&gt;Mwkdoll&lt;/a&gt; =)! (a domain name) I hope she like it, she is one of the smartest girls I know‚Ä¶, I‚Äôve also found a little jewel ‚Äú&lt;a href=&quot;http://www.estantevirtual.com.br/formaseletras/Hans-Staden-Meu-Cativeiro-Entre-os-Selvagens-do-Brasil-48243284&quot;&gt;meu cativeiro entre os selvagens do brasil&lt;/a&gt;‚Äù (my captivity among the savages of Brazil) from ‚Äúhans staden‚Äù, I‚Äôve looked at most of the biggest libraries here and I‚Äôve only found 2 portuguese books, this one in the street for only 1 dollar!! yeeei.&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>clipboard synchronization between X11 and gnome apps</title>
   <link href="http://javier.io/blog/en/2012/02/20/clipboard-synchronization-x-gnome.html"/>
   <updated>2012-02-20T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/02/20/clipboard-synchronization-x-gnome</id>
   <content type="html">&lt;h2 id=&quot;clipboard-synchronization-between-x11-and-gnome-apps&quot;&gt;clipboard synchronization between X11 and gnome apps&lt;/h2&gt;

&lt;h6 id=&quot;20-feb-2012&quot;&gt;20 Feb 2012&lt;/h6&gt;

&lt;p&gt;By default X11 powered systems have at least &lt;a href=&quot;http://en.wikipedia.org/wiki/X_Window_selection#Clipboard&quot;&gt;two different clipboards&lt;/a&gt; which may cause confusion sometimes üòñ&lt;/p&gt;

&lt;p&gt;There is no way to disable/delete them, so the next best solution is to synchronizate them. &lt;a href=&quot;http://www.nongnu.org/autocutsel/&quot;&gt;Autocutsel&lt;/a&gt; is a free cli utility who can do this. It works by adding it to the &lt;strong&gt;~/.xsession&lt;/strong&gt; file or any other initialization file your windows system execute:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ autocutsel -fork #sync between X and Gnome apps
$ autocutsel -selection PRIMARY -fork #sync between Gnome apps and X
&lt;/pre&gt;

&lt;p&gt;Happy copy/pasting ‚òª&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>bash autocompletion</title>
   <link href="http://javier.io/blog/en/2012/01/01/bash-autocompletion.html"/>
   <updated>2012-01-01T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2012/01/01/bash-autocompletion</id>
   <content type="html">&lt;h2 id=&quot;bash-autocompletion&quot;&gt;bash autocompletion&lt;/h2&gt;

&lt;h6 id=&quot;01-jan-2012&quot;&gt;01 Jan 2012&lt;/h6&gt;

&lt;!--**[![](/assets/img/54.jpg)](/assets/img/54.jpg)**--&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It‚Äôs highly recommended to upgrade &lt;a href=&quot;https://viajemotu.wordpress.com/2013/10/16/upgrade-to-bash-completion-2-0/&quot;&gt;bash-completion&lt;/a&gt; to version &amp;gt;= 2.0 for an improved performance.&lt;/p&gt;

&lt;p&gt;I really like minimalism systems (and cli apps), they are faster, more stable and easier to control. I think it‚Äôs pretty cool to be able to write a command and get without hesitation a result (I‚Äôm aware I‚Äôm probably already deprecated, in a world where touch and gui applications are the norm, who would still prefer text based systems?). Sadly many of these commands are not specially user friendly, they contain tons of options and sometimes these options are quite hard to write correctly, when you download scripts from Internet it gets worse, all options must be written by hand because the lack autocompletion.&lt;/p&gt;

&lt;p&gt;Many people don‚Äôt realize this autocompletion magic work by programming simple bash scripts, so I decided to write a few notes about the process.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Bash triage autocompletion every time an user press &lt;strong&gt;&amp;lt;Tab&amp;gt;&amp;lt;Tab&amp;gt;&lt;/strong&gt;, for most simple commands a single call to &lt;strong&gt;complete&lt;/strong&gt; would be enough to generate correct alternatives. Let‚Äôs suppose &lt;strong&gt;foo&lt;/strong&gt; is a command who only take directories as arguments, the autocompletion logic can be described as:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ complete -o plusdirs foo
&lt;/pre&gt;

&lt;p&gt;From then on &lt;strong&gt;$ foo &amp;lt;Tab&amp;gt;&amp;lt;Tab&amp;gt;&lt;/strong&gt; will return a directory list, that one was easy üòâ Now, let‚Äôs give more examples:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ complete -A user bar #will autocomplete bar with a list of system users
$ complete -W &quot;-v --verbose -h&quot; wop #will autocomplete wop with &quot;-v&quot;, &quot;--verbose&quot; and &quot;-h&quot;
$ complete -f -X '!*.[pP][dD][fF]' evince foo #will autocomplete evince and foo with all pdf files
&lt;/pre&gt;

&lt;p&gt;The full syntax for &lt;strong&gt;complete&lt;/strong&gt; can be reviewed in the bash help, &lt;strong&gt;$ man bash&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;function-based&quot;&gt;Function based&lt;/h3&gt;

&lt;p&gt;One of the options &lt;strong&gt;complete&lt;/strong&gt; accept is &lt;strong&gt;-F&lt;/strong&gt; who calls a function, this function can be programmed at any length ‚úå e.g:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ source file_where_pump_function_is_defined
$ complete -F \_pump pump
&lt;/pre&gt;

&lt;p&gt;Now whenever pump is typed followed by &amp;lt;Tab&amp;gt;&amp;lt;Tab&amp;gt; &lt;strong&gt;_primp()&lt;/strong&gt; will be called and will require to fill the &lt;a href=&quot;http://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html&quot;&gt;COMPREPLY&lt;/a&gt; array.&lt;/p&gt;

&lt;p&gt;Most of the files who contain these functions live in &lt;strong&gt;/etc/bash_completion.d/&lt;/strong&gt; and in recent years in &lt;strong&gt;/usr/share/bash-completion/completions/&lt;/strong&gt; (in Debian/Ubuntu systems), let‚Äôs suppose we‚Äôve the following hand made script:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ fix -h
Usage: fix module
   -h  or --help     List available arguments and usage (this message).
   -v  or --version  print version.
   apache            poves /etc/init.d/apache2.1 to apache2.
   ipw2200           restart the ipw2200 module.
   wl                restart the wl module.
   iwlagn            restart the iwlagn module.
   mpd               restart mpd.
&lt;/pre&gt;

&lt;p&gt;The autocompletion logic can be defined in two ways, the easiest one would be to dump the following line in &lt;strong&gt;/etc/bash_completion.d/fix.autocp&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ complete -W &quot;-h --help -v --version apache ipw2200 wl iwlagn mpd&quot; fix
&lt;/pre&gt;

&lt;p&gt;After doing, it would be necessary to reload the environment:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ source $HOME/.bashrc
&lt;/pre&gt;

&lt;p&gt;WARNING: autocompletion will only work if it‚Äôs initialized in &lt;strong&gt;$HOME/.bashrc&lt;/strong&gt; or other files read by bash (it also must be installed $ sudo apt-get install bash-completion):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
fi
&lt;/pre&gt;

&lt;p&gt;The more elaborated case would involve defining a function, let‚Äôs replace the &lt;strong&gt;/etc/bash_completion.d/fix.autocp&lt;/strong&gt; content with this:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
\_fix()
{

    if ! command -v &quot;fix&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
        return
    fi

    #defining local vars
    local cur prev words cword
    _init_completion || return #comment this line for bash-completion &amp;lt;2.0

    cur=&quot;${COMP_WORDS[COMP_CWORD]}&quot;
    prev=&quot;${COMP_WORDS[COMP_CWORD-1]}&quot;

    COMPREPLY=() #clean out last completions, important!

    COMMANDS=&quot;apache ipw2200 wl iwlagn mpd&quot;
    OPTS=&quot;-h --help -v --version&quot;

    case &quot;${cur}&quot; in #if the current word have a '-' at the beginning..
        -*) completions=&quot;${OPTS}&quot;     ;;
        *)  completions=&quot;${COMMANDS}&quot; ;;
    esac
    COMPREPLY=($(compgen -W &quot;${completions}&quot; -- ${cur}))
    return 0
}
complete -F \_fix fix
&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;$cur&lt;/strong&gt; variable is important, parameters would be compared against it, in more complex examples, &lt;strong&gt;$prev&lt;/strong&gt; and even &lt;strong&gt;$prev_prev&lt;/strong&gt; can be compared.&lt;/p&gt;

&lt;p&gt;To generate option lists, &lt;strong&gt;compgen&lt;/strong&gt; is used regularly, this command compare and return matched results as a list, to wrap it up, here are some examples:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ compgen -W &quot;-v --verbose -h --help&quot; -- &quot;-v&quot;
-v
$ compgen -W &quot;-v --verbose -h --help&quot; -- &quot;--&quot;
--verbose
--help
$ compgen -W &quot;apache ipw2200 iwlagn mpd wl&quot; -- &quot;ap&quot;
apache
$ compgen -W &quot;apache ipw2200 iwlagn mpd wl&quot; -- &quot;i&quot;
ipw2200
iwlagn
&lt;/pre&gt;

&lt;p&gt;Once this two step process is understood it‚Äôs easy to see how most autocomplation scripts work. I‚Äôll review a more complex example, &lt;strong&gt;android&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ android -h
  Usage: android [global options] action [action options]
  Global options:
      -v --verbose  Verbose mode: errors, warnings and informational messages are printed.
      -h --help     Help on a specific command.
      -s --silent   Silent mode: only errors are printed out.
  Valid actions are composed of a verb and an optional direct object:
      -   list
      -   list avd
      -   list target
      - create avd
      -   move avd
      - delete avd
      - update avd
      - create project
      - update project
      - create test-project
      - update test-project
      - create lib-project
      - update lib-project
      - update adb
      - update sdk
&lt;/pre&gt;

&lt;p&gt;As it can be noted most options depend of a previous command, ‚Äúavd‚Äù should only be returned when list is used as an action:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ android list[Tab][Tab]
&lt;/pre&gt;

&lt;p&gt;And &lt;strong&gt;avd&lt;/strong&gt;/&lt;strong&gt;target&lt;/strong&gt; should be returned when no substring is present after list&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ android create[Tab][Tab]
&lt;/pre&gt;

&lt;p&gt;Should return &lt;strong&gt;avd&lt;/strong&gt;, &lt;strong&gt;project&lt;/strong&gt;, &lt;strong&gt;test-project&lt;/strong&gt; and &lt;strong&gt;lib-project&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ android create avd[Tab][Tab]
&lt;/pre&gt;

&lt;p&gt;And &lt;strong&gt;-a&lt;/strong&gt;, &lt;strong&gt;-c&lt;/strong&gt;, &lt;strong&gt;-f&lt;/strong&gt;, etc, should be returned when avd and create are the first parameters. The full autocompletion file for this example is located in &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/autocp/completions/android&quot;&gt;github&lt;/a&gt;, I‚Äôll explain now the more important parts:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
\_android()
{
    if ! command -v &quot;android&quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
        return
    fi
    COMPREPLY=() #clean out last completions, important!
    cur=&quot;${COMP_WORDS[COMP_CWORD]}&quot;
    prev=&quot;${COMP_WORDS[COMP_CWORD-1]}&quot;
    number_of_words=${#COMP_WORDS[@]}

    if [ &quot;${number_of_words}&quot; -gt &quot;2&quot; ]]; then
        prev_prev=&quot;${COMP_WORDS[COMP_CWORD-2]}&quot;
    fi
&lt;/pre&gt;

&lt;p&gt;A &lt;strong&gt;prev_prev&lt;/strong&gt; variable is declared only when two or more arguments are written in the prompt.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
#=======================================================
#                  General options
#=======================================================
COMMANDS=&quot;list create move delete update&quot;
#COMMANDS=`android -h | grep '^-' | sed -r 's/: .*//' \
           | awk '{print $2}' | sort | uniq 2&amp;gt; /dev/null`
&lt;/pre&gt;

&lt;p&gt;List options can be declared fixed or generated at run time by parsing help screens, depending of the command you can use whenever method feels more comfortable.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
OPTS=&quot;-h --help -v --verbose -s --silent&quot;
#=======================================================
#                   Nested options [1st layer]
#=======================================================
list_opts=&quot;avd target&quot;
create_opts=&quot;avd project test-project lib-project&quot;
move_opts=&quot;avd&quot;...
&lt;/pre&gt;

&lt;p&gt;The same can be set for subcommands&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
#=======================================================
#                   Nested options [2nd layer]
#=======================================================
create_avd_opts=&quot;-c --sdcard -t --target -n --name -a \
                 --snapshot -p --path -f -s --skin&quot;
create_project_opts=&quot;-n --name -t --target -p --path -k \
                     --package -a --activity&quot;
create_test-project_opts=&quot;-p --path -m --main -n --name&quot;
create_lib-project_opts=&quot;-n --name -p --path -t --target \
                         -k --package&quot;...
&lt;/pre&gt;

&lt;p&gt;And subcommand options‚Ä¶&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if [ -n &quot;${prev_prev}&quot; ]; then
#2nd layer
case &quot;${prev_prev}&quot; in
  create)
    case &quot;${prev}&quot; in
      avd)
         COMPREPLY=($(compgen -W &quot;${create_avd_opts}&quot; -- ${cur}))
         return 0
         ;;
      project)
         COMPREPLY=($(compgen -W &quot;${create_project_opts}&quot; -- ${cur}))
         return 0
         ;;
         ...
 esac
&lt;/pre&gt;

&lt;p&gt;Depending in &lt;strong&gt;$prev_prev&lt;/strong&gt;, &lt;strong&gt;$prev&lt;/strong&gt; and &lt;strong&gt;$cur&lt;/strong&gt; the correct list will be return, &lt;strong&gt;$ android subcomand option incomplete_option#CURSOR#&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
case &quot;${prev}&quot; in
    ##1st layer
    list)
        COMPREPLY=($(compgen -W &quot;${list_opts}&quot; -- ${cur}))
        return 0
        ;;
    create)
        COMPREPLY=($(compgen -W &quot;${create_opts}&quot; -- ${cur}))
        return 0
        ;;
    ...
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;$ android subcommand incomplete_option#CURSOR#&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
      #general options
      case &quot;${cur}&quot; in
         -*)
             COMPREPLY=($(compgen -W &quot;${OPTS}&quot; -- ${cur}))
             ;;
         *)
             COMPREPLY=($(compgen -W &quot;${COMMANDS}&quot; -- ${cur}))
             ;;
      esac
}
complete -F \_android android
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;$ android incomplete_subcommand#CURSOR#&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;extra&quot;&gt;Extra&lt;/h3&gt;

&lt;h4 id=&quot;available-functions&quot;&gt;Available functions&lt;/h4&gt;

&lt;p&gt;There exist plenty of available functions who can be used to autocomplete commonly used options, for example, if a command accepts a &lt;strong&gt;-f&lt;/strong&gt; option for file arguments, the &lt;strong&gt;_filedir&lt;/strong&gt; function can be used:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
-f)
    \_filedir
    return 0
    ;;
&lt;/pre&gt;

&lt;p&gt;Other pre-defined functions can be found at: &lt;a href=&quot;http://anonscm.debian.org/gitweb/?p=bash-completion/bash-completion.git;a=blob;f=bash_completion&quot;&gt;http://anonscm.debian.org/gitweb/?p=bash-completion/bash-completion.git;a=blob;f=bash_completion&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;debug&quot;&gt;Debug&lt;/h3&gt;

&lt;p&gt;Bash autocompletion scripts are easy to create, however eventually (specially with larger cli commands) there are chances things doesn‚Äôt work as expected, in those cases enabling bash verbose mode is the easiest and faster method to debug such scripts:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ set -x
$ source ~/.bashrc #reload the environment
$ command opc[Tab][Tab] #testing the autocompletion
...
...
... verbose output
&lt;/pre&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;p&gt;There are many bash completion scripts in &lt;a href=&quot;http://anonscm.debian.org/gitweb/?p=bash-completion/bash-completion.git;a=tree;f=completions&quot;&gt;Internet&lt;/a&gt; and &lt;a href=&quot;https://github.com/javier-lopez/learn/tree/master/autocp/completions&quot;&gt;some others&lt;/a&gt; in my personal repository. Looking at examples is probably the easiest way to learn the harder details.&lt;/p&gt;

&lt;h3 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h3&gt;

&lt;p&gt;Bash autocompletion may seems scary at the beginning but once several examples are read a clear pattern can be dazzled, depending on your system usage they can save you a lot of time/typing, so next time you find yourself writing to much give them a shot and let the computer do the job for you üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://bash-completion.alioth.debian.org/&quot;&gt;http://bash-completion.alioth.debian.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>soporte t√©cnico de steren</title>
   <link href="http://javier.io/blog/es/2011/12/11/soporte-tecnico-steren.html"/>
   <updated>2011-12-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2011/12/11/soporte-tecnico-steren</id>
   <content type="html">&lt;h2 id=&quot;soporte-t√©cnico-de-steren&quot;&gt;soporte t√©cnico de steren&lt;/h2&gt;

&lt;h6 id=&quot;11-dec-2011&quot;&gt;11 Dec 2011&lt;/h6&gt;

&lt;p&gt;Nada, hace tiempo que leo el blog de Manuel Micheline (&lt;a href=&quot;http://la-morsa.blogspot.com/&quot;&gt;La morsa&lt;/a&gt;) un catedr√°tico de la facultad de ciencias de la UNAM / maestro FIDE en ajedrez y programador amateur, y me ha dado por crear una entrada imitando un poco su estilo.&lt;/p&gt;

&lt;p&gt;Hoy por la ma√±ana me llego un router Steren (&lt;a href=&quot;http://www.steren.com.mx/_files/search.asp?s=COM-840\&quot;&gt;COM-840)&lt;/a&gt; que ser√° usado para extender la se√±al de la red en las instalaciones donde trabajo, cuando lo vi me sorprend√≠ porque no tenia idea que los comercializaban, en fin, estuve leyendo su instructivo y encontr√© un error en el manual que imped√≠a entrar a la interfaz web, esto era debido a una mala traducci√≥n t√©cnica, debo aclarar que no le√≠ todo el manual, me limit√© a terminar de configurar el equipo y met√≠ las cosas en su lugar, sin embargo al hacer esto not√© que en la parte trasera del manual ten√≠a una leyenda que rezaba: &lt;strong&gt;‚ÄúEste instructivo puede mejorar con tu ayuda, llamanos a XXX-XXX-XXX-XXX‚Äù&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As√≠ que cog√≠ el tel√©fono y marqu√©, la espera fue m√≠nima y me atendi√≥ una se√±orita de soporte t√©cnico, le comente el caso y tomo la correcci√≥n en menos de 5 min. Nada, me pareci√≥ profesional la manera en la que manejaron el suceso, y aunque no tengo mucha esperanza en el router, espero que tambi√©n me sorprenda.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>print through the ldp protocol in a cups less environment</title>
   <link href="http://javier.io/blog/en/2011/12/01/ldp-printer-cups-less.html"/>
   <updated>2011-12-01T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/12/01/ldp-printer-cups-less</id>
   <content type="html">&lt;h2 id=&quot;print-through-the-ldp-protocol-in-a-cups-less-environment&quot;&gt;print through the ldp protocol in a cups less environment&lt;/h2&gt;

&lt;h6 id=&quot;01-dec-2011&quot;&gt;01 Dec 2011&lt;/h6&gt;

&lt;p&gt;I‚Äôve just discovered it‚Äôs possible to print through the &lt;a href=&quot;http://en.wikipedia.org/wiki/Line_Printer_Daemon_protocol&quot;&gt;LDP protocol&lt;/a&gt; without &lt;a href=&quot;http://www.cups.org/&quot;&gt;CUPS&lt;/a&gt; (cups-ldp in Ubuntu).&lt;/p&gt;

&lt;p&gt;For a unkown reason I had always though that all linux systems required to have CUPS installed to talk to any printer, which is not the case. LPD can be used perfectly to print to remote printers.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ rlpr -h -Plp -HIP_OF_THE_PRINTER_LDP_SERVER_HERE  file.[ps|pdf]
&lt;/pre&gt;

&lt;p&gt;In 2011 most Linux application can print to pdf/ps files, so you can skip &lt;strong&gt;cups-pdf&lt;/strong&gt; as well üòä. To print images, &lt;strong&gt;convert&lt;/strong&gt; (part of the &lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot;&gt;imagemagick&lt;/a&gt; suit) can do the job:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ convert image.jpg  file.ps
&lt;/pre&gt;

&lt;p&gt;And for plain text files, vim shines:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
:hardcopy &amp;gt; file.ps
&lt;/pre&gt;

&lt;p&gt;Aliases can help in case you find yourself typing the ip too often, eg &lt;strong&gt;alias print.192.168.1.11=‚Äôrlpr -h -Plp -H192.168.1.11‚Äô&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ print.192.168.1.11  file[.ps|pdf]
&lt;/pre&gt;

&lt;p&gt;All my requirements are covered üòé&lt;/p&gt;

&lt;p&gt;The printer/copier referenced on this post is the &lt;a href=&quot;http://usa.canon.com/cusa/support/office/b_w_imagerunner_copiers/imagerunner_5050_5055_5065_5070_5075_5570_6570/imagerunner_6570&quot;&gt;Canon ImageRunner 6570&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mail-archive.com/misc@openbsd.org/msg56753.html&quot;&gt;http://www.mail-archive.com/misc@openbsd.org/msg56753.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/a2ps&quot;&gt;http://www.gnu.org/software/a2ps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.wizards.de/~frank/pstill.html&quot;&gt;http://www.wizards.de/~frank/pstill.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ghostscript.com/&quot;&gt;http://www.ghostscript.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>deb package cache</title>
   <link href="http://javier.io/blog/en/2011/11/18/deb-packages-cache.html"/>
   <updated>2011-11-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/11/18/deb-packages-cache</id>
   <content type="html">&lt;h2 id=&quot;deb-package-cache&quot;&gt;deb package cache&lt;/h2&gt;

&lt;h6 id=&quot;18-nov-2011&quot;&gt;18 Nov 2011&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I created a &lt;a href=&quot;https://raw.github.com/javier-lopez/learn/master/sh/is/apt-proxy&quot;&gt;script&lt;/a&gt; who automate the process described in this post.&lt;/p&gt;

&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/cfdfdda6da61dad9d9d5e&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;apt-cacher-ng is a kind of deb repository proxy, it caches deb packages &lt;strong&gt;on demand&lt;/strong&gt; between the computer who share the cache, it‚Äôs a great alternative for small environments. There are other alternatives, such as apt-cacher, apt-proxy and debmirror but those solutions can take more space or be harder to setup, so I won‚Äôt talk about them.&lt;/p&gt;

&lt;p&gt;In the client side, there exist mainly two ways of taking advantage of such services, &lt;a href=&quot;https://launchpad.net/squid-deb-proxy&quot;&gt;squid-deb-proxy&lt;/a&gt; and manual configuration. The first one uses &lt;a href=&quot;http://avahi.org/&quot;&gt;zeroconf&lt;/a&gt; to detect and use deb proxies whenever they‚Äôre available and the second one, well, is manual and works by adding a string to &lt;strong&gt;/etc/apt/apt.conf.d/01apt-cache&lt;/strong&gt; describing the proxy url. On this post I‚Äôll talk about squid-deb-proxy.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;[+] In the server side (which can be client at the same time):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install apt-cacher-ng squid-deb-proxy-client
$ sudo wget http://javier.io/mirror/apt-cacher-ng.service -O /etc/avahi/services/apt-cacher-ng.service
$ sudo service apt-cacher-ng restart
&lt;/pre&gt;

&lt;p&gt;[+] In the client side:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install squid-deb-proxy-client
&lt;/pre&gt;

&lt;p&gt;After executing these commands the apt-cacher-ng server will announce itself to all computers in the local network, and clients machines will be able to autoconfigure their apt preferences depending of whether they see an apt-cacher-ng server or not. Pretty cool üòä&lt;/p&gt;

&lt;h3 id=&quot;extra&quot;&gt;Extra&lt;/h3&gt;

&lt;h4 id=&quot;import-packages&quot;&gt;Import packages&lt;/h4&gt;

&lt;p&gt;Old packages (downloaded before setting up apt-cacher-ng) can be imported by executing:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo mkdir -pv -m 2755 /var/cache/apt-cacher-ng/_import
$ sudo mv -vuf /var/cache/apt/archives/*.deb /var/cache/apt-cacher-ng/_import/
$ sudo chown -R apt-cacher-ng:apt-cacher-ng /var/cache/apt-cacher-ng/_import
$ sudo apt-get update
&lt;/pre&gt;

&lt;p&gt;And going to &lt;a href=&quot;http://localhost:3142/acng-report.html&quot;&gt;http://localhost:3142/acng-report.html&lt;/a&gt; where a ‚Äò&lt;strong&gt;Start import&lt;/strong&gt;‚Äô button will show up:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/57.png&quot;&gt;&lt;img src=&quot;/assets/img/57.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;delete-apt-cacher-ng&quot;&gt;Delete apt-cacher-ng&lt;/h4&gt;

&lt;p&gt;This setup can be destroyed at any time by running:&lt;/p&gt;

&lt;p&gt;[+] In the server:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get remove apt-cacher-ng squid-deb-proxy-client
$ sudo rm -rf /var/cache/apt-cacher-ng
&lt;/pre&gt;

&lt;p&gt;[+] In the clients:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get remove squid-deb-proxy-client
&lt;/pre&gt;

&lt;p&gt;Happy caching üòè&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>you just got kernelroll'd ;)</title>
   <link href="http://javier.io/blog/en/2011/11/09/you-just-got-kernelrolled.html"/>
   <updated>2011-11-09T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/11/09/you-just-got-kernelrolled</id>
   <content type="html">&lt;h2 id=&quot;you-just-got-kernelrolld-&quot;&gt;you just got kernelroll‚Äôd ;)&lt;/h2&gt;

&lt;h6 id=&quot;09-nov-2011&quot;&gt;09 Nov 2011&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/56.png&quot;&gt;&lt;img src=&quot;/assets/img/56.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rickrollin in kernel space ‚ò∫, this hack will intercept any system call to open multimedia files and replace them with rickrolling.mp3 üòâ&lt;/p&gt;

&lt;p&gt;To set it up in Ubuntu 10.04 you‚Äôll need systemtap:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install systemtap
&lt;/pre&gt;

&lt;p&gt;Systemtap requires the kernel &lt;a href=&quot;http://en.wikipedia.org/wiki/Debug_symbol&quot;&gt;debug symbols&lt;/a&gt; who &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/linux/+bug/289087&quot;&gt;cannot be installed&lt;/a&gt; from the repositories in &lt;strong&gt;lucid&lt;/strong&gt;, although they can be installed from &lt;a href=&quot;http://ddebs.ubuntu.com/pool/main/l/linux/&quot;&gt;http://ddebs.ubuntu.com/pool/main/l/linux/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this particular case I‚Äôve installed the 2.6.32 kernel:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo dpkg -l|grep linux-image
  ii  linux-image-2.6.32-34-generic
$ uname -m
  x86_64
&lt;/pre&gt;

&lt;p&gt;Therefore I‚Äôll download the following files(~450MB):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget http://ddebs.ubuntu.com/pool/main/l/linux/linux-image-2.6.32-34-generic-dbgsym_2.6.32-34.77_amd64.ddeb
$ sudo dpkg -i linux-image-2.6.32-34-generic-dbgsym_2.6.32-34.77_amd64.ddeb
&lt;/pre&gt;

&lt;p&gt;Upon completion, the hack can be enabled this way:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo stap -e 'probe kernel.function(&quot;do_filp_open&quot;)\
 { p = kernel_string($pathname); l=strlen(p); \
 ext = substr(p, l - 4, l); if (ext == &quot;.mp3&quot; || ext == &quot;.ogg&quot; \
 || ext == &quot;.mp4&quot;) { system(&quot;mplayer /path/to/rirckroll.mp3&quot;); }}'
&lt;/pre&gt;

&lt;p&gt;If you‚Äôre curious about other stap user cases, take a look at the documentation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sources.redhat.com/systemtap/&quot;&gt;http://sources.redhat.com/systemtap/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>compile software in pristine environments with pbuilder</title>
   <link href="http://javier.io/blog/en/2011/11/09/compile-software-in-pristine-environments-with-pbuilder.html"/>
   <updated>2011-11-09T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/11/09/compile-software-in-pristine-environments-with-pbuilder</id>
   <content type="html">&lt;h2 id=&quot;compile-software-in-pristine-environments-with-pbuilder&quot;&gt;compile software in pristine environments with pbuilder&lt;/h2&gt;

&lt;h6 id=&quot;09-nov-2011&quot;&gt;09 Nov 2011&lt;/h6&gt;

&lt;p&gt;I‚Äôm a paranoid of the order (at least in my system), every time I have to install software which is not included in the Ubuntu repositories I create .deb packages for such programs, sometimes it‚Äôs easy enough to do it manually (if the program doesn‚Äôt envolve a lot of dependencies), other times I rely on &lt;a href=&quot;http://asic-linux.com.mx/%7Eizto/checkinstall/&quot;&gt;checkinstall&lt;/a&gt; or &lt;a href=&quot;https://github.com/jordansissel/fpm&quot;&gt;fpm&lt;/a&gt; to do the job. Some persons wonder why I do still create hand made packages if fpm and checkinstall are available, well I do it because both tools can only create .deb packages but not .dsc definitions (a kind of .deb source package), these .dsc files can be upload to a ppa in &lt;a href=&quot;http://launchpad.net/&quot;&gt;launchpad.net&lt;/a&gt; where they‚Äôll be compiled and saved. You want to do that because then you can use the url of your ppa to get automatic dependency resolution and good download speeds.&lt;/p&gt;

&lt;p&gt;When creating such packages (using any method) you‚Äôll still need to download (at least temporally) build dependencies. As an order obsessed person I avoid doing it directly in my system and use chroot environments instead, these chroot boxes are way cheaper than virtualization solutions and faster to setup. Since I already use &lt;a href=&quot;https://viajemotu.wordpress.com/2010/08/10/notas-sobre-pbuilder&quot;&gt;pbuilder&lt;/a&gt; and it has a very nice &lt;strong&gt;‚Äìlogin&lt;/strong&gt; option, I use it to create temporal environments and destroy them on exit.&lt;/p&gt;

&lt;p&gt;Let‚Äôs suppose a new ffmpeg version has just been released and you want to try it on your stable Ubuntu system, these would be the steps necessary to compile, package and install it in your host system.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get -y remove ffmpeg x264 libx264-dev libmp3lame-dev
$ sudo pbuilder.natty --login
[natty-chroot] # apt-get install wget
[natty-chroot] # apt-get -y install nasm build-essential git-core \
                 checkinstall yasm texi2html libfaac-dev libopencore-amrnb-dev     \
                 libopencore-amrwb-dev libsdl1.2-dev libtheora-dev libvorbis-dev   \
                 libx11-dev libxfixes-dev libxvidcore-dev zlib1g-dev
[natty-chroot] # git clone git://git.videolan.org/ffmpeg
[natty-chroot] # cd ffmpeg
[natty-chroot] # ./configure --enable-gpl --enable-version3 --enable-nonfree \
                --enable-postproc --enable-libfaac --enable-libopencore-amrnb \
                --enable-libopencore-amrwb --enable-libtheora --enable-libvorbis \
                --enable-libx264 --enable-libxvid --enable-x11grab --enable-libmp3lame
[natty-chroot] # make
[natty-chroot] # checkinstall --pkgname=ffmpeg --pkgversion=&quot;5:$(./version.sh)&quot; \
                --backup=no --deldoc=yes --default
$ cp /var/cache/pbuilder/natty-amd64/build/{number}/home/user/ffmpeg.deb ~
$ sudo dpkg -i ffmpeg_5:201111091946-git-1_amd64.deb
&lt;/pre&gt;

&lt;p&gt;Once installed, the tmp chroot environment can be destroyed by terminating the session&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
[natty-chroot] # exit
&lt;/pre&gt;

&lt;p&gt;Sweet √º&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>virtualbox and kvm sideways</title>
   <link href="http://javier.io/blog/en/2011/10/31/virtualbox-kvm-sideways.html"/>
   <updated>2011-10-31T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/10/31/virtualbox-kvm-sideways</id>
   <content type="html">&lt;h2 id=&quot;virtualbox-and-kvm-sideways&quot;&gt;virtualbox and kvm sideways&lt;/h2&gt;

&lt;h6 id=&quot;31-oct-2011&quot;&gt;31 Oct 2011&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/55.png&quot;&gt;&lt;img src=&quot;/assets/img/55.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above image contain a common error persons have whenever they try to use VirtualBox and KVM at the same time. Some forum posts suggest uninstalling kvm, however it‚Äôs quite simple to keep both solutions installed sideways.&lt;/p&gt;

&lt;p&gt;In Ubuntu, everytime VirtualBox is going to be used, KVM kernel modules should be disabled:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo service qemu-kvm stop &amp;amp;&amp;amp; sudo service vboxdrv start
&lt;/pre&gt;

&lt;p&gt;And viceversa:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo service vboxdrv stop &amp;amp;&amp;amp; sudo service qemu-kvm
&lt;/pre&gt;

&lt;p&gt;For other distributions, &lt;strong&gt;rmmod/modprobe/lsmod&lt;/strong&gt; can do the job üòâ&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>stop firefox directory autocreation</title>
   <link href="http://javier.io/blog/en/2011/10/29/stop-firefox-directory-autocreation.html"/>
   <updated>2011-10-29T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/10/29/stop-firefox-directory-autocreation</id>
   <content type="html">&lt;h2 id=&quot;stop-firefox-directory-autocreation&quot;&gt;stop firefox directory autocreation&lt;/h2&gt;

&lt;h6 id=&quot;29-oct-2011&quot;&gt;29 Oct 2011&lt;/h6&gt;

&lt;p&gt;By default Firefox creates a &lt;strong&gt;Desktop&lt;/strong&gt; and &lt;strong&gt;Download&lt;/strong&gt; directories in &lt;strong&gt;$HOME&lt;/strong&gt; accordying to &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/xdg-user-dirs&quot;&gt;freedesktop policies&lt;/a&gt;. This feature can be annoying for some persons (including me). IMO nobody should force you to use a pre-fixed directory layout.&lt;/p&gt;

&lt;p&gt;To disable this feature the &lt;strong&gt;$HOME/.config/user-dirs.dirs&lt;/strong&gt; file should be edited as follows:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat $HOME/.config/user-dirs.dirs
XDG_DESKTOP_DIR=&quot;$HOME/./&quot;
XDG_DOWNLOAD_DIR=&quot;$HOME/./&quot;
XDG_TEMPLATES_DIR=&quot;$HOME/./&quot;
&lt;/pre&gt;

&lt;p&gt;The Linux desktop specifications are pretty dumb üòî&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>proxy ssh + socks</title>
   <link href="http://javier.io/blog/en/2011/10/06/proxy-ssh-socks.html"/>
   <updated>2011-10-06T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/10/06/proxy-ssh-socks</id>
   <content type="html">&lt;h2 id=&quot;proxy-ssh--socks&quot;&gt;proxy ssh + socks&lt;/h2&gt;

&lt;h6 id=&quot;06-oct-2011&quot;&gt;06 Oct 2011&lt;/h6&gt;

&lt;h4 id=&quot;problem&quot;&gt;Problem&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Facebook, Twitter, Youtube, etc are blocked.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;solution&quot;&gt;Solution&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Route traffic through ssh tunnels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ingredients&quot;&gt;Ingredients&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Unix account in an external host, eg; &lt;a href=&quot;http://cjb.net&quot;&gt;cjb.net&lt;/a&gt;, vps, etc&lt;/li&gt;
  &lt;li&gt;Ssh client&lt;/li&gt;
  &lt;li&gt;Traffic allowed through the 22 port (or any other port)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;procedure&quot;&gt;Procedure:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Create an ssh tunnel:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
[local]$ ssh -C2qTnN -D 9090 username@remote.machine
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Configure firefox to use the tunnel:
    &lt;ul&gt;
      &lt;li&gt;Edit ‚ûÆ Preferences ‚ûÆ Advanced ‚ûÆ Network ‚ûÆ Settings ‚ûÆ Manual proxy configuration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SOCKS Proxy 127.0.0.1 Port 9090&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;extra&quot;&gt;Extra&lt;/h3&gt;

&lt;p&gt;To get extra security connections can go through N nodes:&lt;/p&gt;
&lt;pre&gt;
Firefox (local) &amp;#10143;  host-1 &amp;#10143;  host-2 &amp;#10143;  host-n -&amp;gt; Internet
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
[local]$  ssh -C2qTnN username@host-1 -L 9090:localhost:9090
[host1]$  ssh -C2qTnN username@host-2 -L 9090:localhost:9090
...
...
[hostn-1]$ ssh -C2qTnN -D 9090 username@host-n
&lt;/pre&gt;

&lt;p&gt;Happy hacking üòà&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>a lenda da cuca</title>
   <link href="http://javier.io/blog/pt/2011/09/29/a-lenda-da-cuca.html"/>
   <updated>2011-09-29T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2011/09/29/a-lenda-da-cuca</id>
   <content type="html">&lt;h2 id=&quot;a-lenda-da-cuca&quot;&gt;a lenda da cuca&lt;/h2&gt;

&lt;h6 id=&quot;29-sep-2011&quot;&gt;29 Sep 2011&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/74.jpg&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A gente fala de uma mulher muito feia com a forma de jacar√©, ela rouba as crian√ßas que n√£o obedecem a seus pias. A cuca n√£o pode dormir e √© por isso que vai andando pelas noites. Quando ela fica brava d√° um berro que d√° pra ouvir √† 10 l√©guas de dist√¢ncia.&lt;/p&gt;

&lt;p&gt;Os meninos que n√£o queiram ser roubados ter que dormi-se a boa hora.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>xperia mini pro - custom roms</title>
   <link href="http://javier.io/blog/es/2011/08/21/xperia-mini-pro-custom-roms.html"/>
   <updated>2011-08-21T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2011/08/21/xperia-mini-pro-custom-roms</id>
   <content type="html">&lt;h2 id=&quot;xperia-mini-pro---custom-roms&quot;&gt;xperia mini pro - custom roms&lt;/h2&gt;

&lt;h6 id=&quot;21-aug-2011&quot;&gt;21 Aug 2011&lt;/h6&gt;

&lt;p&gt;Nada, hace poco me he hecho de un xperia mini pro (por $2800), despu√©s de haber perdido un xperia mini =(, y este fin de semana he experimentado hasta dejarlo con una configuraci√≥n aceptable (a mi gusto), as√≠ que dejo un breve resumen de los pasos que segu√≠ para ayudarme en el futuro.&lt;/p&gt;

&lt;p&gt;Este tutorial no deber√≠a seguirse a menos que se tenga exactamente el mismo tel√©fono y se desee obtener el mismo resultado.&lt;/p&gt;

&lt;p&gt;ANTES&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Android &lt;strong&gt;1.6&lt;/strong&gt; (SonyEricson) / &lt;strong&gt;Donut&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;versi√≥n de banda base &lt;strong&gt;M76XX-TSNCJOLYM-53404006&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Modelo: u20a&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/41.png&quot;&gt;&lt;img src=&quot;/assets/img/41.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/42.jpeg&quot;&gt;&lt;img src=&quot;/assets/img/42.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/43.png&quot;&gt;&lt;img src=&quot;/assets/img/43.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DESPU√âS&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Android &lt;strong&gt;2.3.5&lt;/strong&gt; (GinTonic.Se 1.3) / &lt;strong&gt;Gingerbread&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;versi√≥n de banda base &lt;strong&gt;M76XX-TSNCJOLYM-53404015&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Modelo: u20i&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/44.png&quot;&gt;&lt;img src=&quot;/assets/img/44.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/45.png&quot;&gt;&lt;img src=&quot;/assets/img/45.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/46.png&quot;&gt;&lt;img src=&quot;/assets/img/46.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Descarga:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;build.prop&lt;/strong&gt; (√∫til para cambiar la banda &lt;strong&gt;53404006&lt;/strong&gt; -&amp;gt; &lt;strong&gt;53404015&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;root-xrecovery_x10miniPro.exe&lt;/strong&gt; (rootea e instala xrecovery, requiere Windows)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;mybackupPro.apk&lt;/strong&gt; (backup de contactos, sms, apps)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.multiupload.com/4W2VJ6URER&quot;&gt;http://www.multiupload.com/4W2VJ6URER&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;faq&quot;&gt;FAQ&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;¬øQu√© es android?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Android es un sistema operativo enfocado a tel√©fonos y tabletas, principal competencia del sistema operativo que viene en los iphone, esta basado en linux, aunque modifica muchas partes esenciales del mismo. Tiene miles de aplicaciones, gps, reconocimiento de voz, skype, twitter, facebook, youtube, angrybirds, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQu√© es un custom rom?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un custom rom es un sistema operativo modificado que reemplaza el que Sony Ericson/Telcel han puesto en tu tel√©fono.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øC√∫al es la ventaja de un custom rom?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En primer lugar que corre una versi√≥n m√°s reciente de android, adquiriendo un aumento en el rendimiento, por ejemplo android 2.2 es dos veces m√°s rapido que android 2.1, y android 2.3 es 25% m√°s rapido que la versi√≥n 2.2. Tambi√©n puede hacer otras cosas, por ejemplo mover las aplicaciones a la memoria externa (app2sd) o compartir internet a otros dispositivos a trav√©s de usb/wifi (requiere plan de datos).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øCu√°les son los requerimientos?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tener instalado xrecovery y haber ‚Äòrooteado‚Äô el tel√©fono, adicionalmente se puede tener a la mano PC Companion o SEUS (sony ericson update service) para regresar el tel√©fono a su instalaci√≥n de fabrica.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQu√© es ‚Äòrootear‚Äô?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rootear se refiere a obtener permisos de administrador, por defecto los tel√©fonos traen medidas de seguridad que evitan, por ejemplo, eliminar aplicaciones que vienen por defecto (muestras de juegos, ideas telcel, etc). Con un tel√©fono rooteado es posible eliminarlas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQu√© es xrecovery?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Xrecovery es un programa que se utiliza para instalar custom roms, se accede a el presionando la flecha &amp;lt;- al arranque del movil (cuando aparece la leyenda ‚Äòsony ericson‚Äô)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øC√≥mo se instala un custom rom?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Los custom rom se distribuyen como archivos zip (1 archivo zip por rom), y se instalan con xrecovery&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬øQu√© implicaciones legales conlleva instalar un custom rom?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se pierde la garant√≠a, sin embargo el proceso puede ser revertido si es que en alg√∫n momento se requiere reinstalar la versi√≥n con la que ven√≠a el tel√©fono.&lt;/p&gt;

&lt;h3 id=&quot;backup&quot;&gt;Backup&lt;/h3&gt;

&lt;p&gt;Si el tel√©fono ya estaba siendo utilizado con anterioridad, es probable que haya datos que no se deseen perder, en el market existen aplicaciones que ayudan a hacer esto, adicionalmente de los datos que se sincronizan con la cuenta de google que se definio en el tel√©fono.&lt;/p&gt;

&lt;p&gt;Personalmente utilice &lt;strong&gt;mybackup pro&lt;/strong&gt; (sms‚Äôs) y &lt;strong&gt;titanium backup&lt;/strong&gt; (aplicaciones), mybackup pro viene incluido en el link de descarga, titanium puede adquirirse desde el market.&lt;/p&gt;

&lt;p&gt;Para instalar aplicaciones fuera del market, hay que habilitar &lt;strong&gt;‚ÄòOrigenes Desconocidos‚Äô&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ajustes/Aplicaciones/Origenes Desconocidos&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rootear-e-instalar-xrecovery&quot;&gt;Rootear e instalar xrecovery&lt;/h3&gt;

&lt;p&gt;Existen m√©todos y aplicaciones que otorgan permisos e instalan xrecovery, pero el m√°s simple que encontr√© fue usar 1click:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;root-xrecovery_x10miniPro.exe (viene incluido en el zip)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para usarlo se siguen los siguientes pasos:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Preparar el tel√©fono, habilitar la ‚Äúdepuraci√≥n USB‚Äù en &lt;strong&gt;ajustes/aplicaciones/desarrollo&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Extraer el archivo (yo lo hice con WindRar)&lt;/li&gt;
  &lt;li&gt;Conectar el tel√©fono a la computadora&lt;/li&gt;
  &lt;li&gt;Abrir oneclickroot&lt;/li&gt;
  &lt;li&gt;Hacer click en ‚Äòroot‚Äô y esperar que finalice (no debe demorar mas de 2 min)&lt;/li&gt;
  &lt;li&gt;Hacer click en ‚Äòxrecover‚Äô y esperar otro par de minutos&lt;/li&gt;
  &lt;li&gt;Reiniciar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ahora el tel√©fono deber√≠a estar rooteado y tener xrecovery (se puede probar presionando la flecha al arranque - aparecer√° un men√∫)&lt;/p&gt;

&lt;h3 id=&quot;cambiar-banda-base&quot;&gt;Cambiar banda base&lt;/h3&gt;

&lt;p&gt;Muchos de los custom roms solo son compatibles con la versi√≥n 53404015, por lo que se tiene que actualizar a esa versi√≥n antes de volcar los roms, de lo contrario el tel√©fono entrar√° en un ciclo de reinicio infinito.&lt;/p&gt;

&lt;p&gt;Para eso se copia&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;build.prop&lt;/strong&gt; a &lt;strong&gt;/system&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo que requiere un navegador de archivos con permisos de administrador, se puede usar &lt;strong&gt;‚ÄòFile Expert‚Äô&lt;/strong&gt; (accesible a trav√©s del market), aunque por defecto no esos permisos, sin embargo se puede habilitar en:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;File Expert/menu/mas/ajustes/ajustes de explorador de archivos/&lt;strong&gt;explorador root&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se reinicia el programa y se reemplaza &lt;strong&gt;build.prop&lt;/strong&gt; por &lt;strong&gt;/system&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Despu√©s de reiniciar, se conecta a una computadora, donde este corriendo PC Companion (viene incluido en el tel√©fono), y desde ah√≠ se reestablece al setup de f√°brica, el tiempo aproximado dependiendo de la conexi√≥n es de 40min (a 100kb/s).&lt;/p&gt;

&lt;p&gt;Despu√©s de reiniciar el tel√©fono la banda base deber√≠a ser la &lt;strong&gt;53404015&lt;/strong&gt;. Si es as√≠ se siguen los pasos de ‚Äú&lt;strong&gt;Rootear e instalar xrecovery&lt;/strong&gt;‚Äù para reinstalar los componentes necesarios.&lt;/p&gt;

&lt;h3 id=&quot;instalar-custom-roms&quot;&gt;Instalar custom roms&lt;/h3&gt;

&lt;p&gt;Es recomendable hacer un backup del rom de f√°brica, de esta manera si no convence el custom rom, se puede recuperar el sistema original, para probar con otro.&lt;/p&gt;

&lt;p&gt;Para crear un backup se reinicia el tel√©fono, y se presiona la tecla que tiene una flecha, aparecer√° un men√∫, ah√≠ se selecciona (se mueve con las teclas de vol√∫men, y se selecciona con la tecla de en medio)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;backup and restore/&lt;strong&gt;Backup&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eso crear√° una copia de seguridad en &lt;strong&gt;/sdcard/xrecovery&lt;/strong&gt;, para recuperarla se selecciona:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;backup and restore/&lt;strong&gt;restore&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algunos de los custom roms disponibles para el xperia mini pro, estan listados aqu√≠:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tinyurl.com/3smura5&quot;&gt;http://tinyurl.com/3smura5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Despu√©s de probar algunos, he decidido usar de forma continua **GinTonic.SE&lt;/td&gt;
      &lt;td&gt;v1.3** (120MB~), disponible en:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://forum.xda-developers.com/showthread.php?t=1207740&quot;&gt;http://forum.xda-developers.com/showthread.php?t=1207740&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La instalaci√≥n de este y de otros, pasa por:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reiniciar el telefono&lt;/li&gt;
  &lt;li&gt;Entrar en xrecovery (presionar varias veces la tecla de la fecla derecha&lt;/li&gt;
  &lt;li&gt;Ir a &lt;strong&gt;install zip from sdcard/choose zip from sdcard&lt;/strong&gt; y seleccionar el archivo zip&lt;/li&gt;
  &lt;li&gt;Esperar la instalaci√≥n&lt;/li&gt;
  &lt;li&gt;Ir a &lt;strong&gt;wipe data/factory reset&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Reiniciar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Con eso, arrancar√° el nuevo SO, se llenar√° el perfil (cuenta de gmail), se instalar√° mybackupPro/titanium y se recuperaran los datos/aplicaciones.&lt;/p&gt;

&lt;p&gt;Estos custom roms ya viene rooteados y con xrecovery, as√≠ que no es necesario volver a correr 1click por tercera vez.&lt;/p&gt;

&lt;h3 id=&quot;extra-intermedio&quot;&gt;EXTRA (intermedio)&lt;/h3&gt;

&lt;p&gt;Instalar (desde el market)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Taskiller&lt;/li&gt;
  &lt;li&gt;AdFree&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Liberar espacio&lt;/p&gt;

&lt;p&gt;Para mover las aplicaciones a la tarjeta externa se va a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;menu/administrar aplicaciones/descargadas&lt;/strong&gt;, luego se selecciona la aplicaci√≥n y se presiona &lt;strong&gt;mover a sdcard&lt;/strong&gt;, libera aprox el 50% del tama√±o de la app.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Otro truco es eliminar &lt;strong&gt;/data/dalvik-cache&lt;/strong&gt; y reiniciar (libera 13~ MB)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O eliminar la cache de los programas en &lt;strong&gt;/data/data&lt;/strong&gt;, para saber cual app guarda m√°s datos, se puede abrir una consola (viene incluida con el rom) y se escribe:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ du -sk /data/data/* | sort -rn | head
&lt;/pre&gt;

&lt;p&gt;Y luego:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ rm -rf /data/data/some_app/cache
&lt;/pre&gt;

&lt;p&gt;Tambi√©n se puede mover las caches de algunos programas a otros lugares, para eso se hace un softlink&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ mkdir -p /sdcard/cache/market
$ cd /data/data/com.android.vending
$ rm -R cache
$ ln -s /sdcard/cache/market cache
&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>causa e efeito</title>
   <link href="http://javier.io/blog/pt/2011/07/02/causa-e-efeito.html"/>
   <updated>2011-07-02T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2011/07/02/causa-e-efeito</id>
   <content type="html">&lt;h2 id=&quot;causa-e-efeito&quot;&gt;causa e efeito&lt;/h2&gt;

&lt;h6 id=&quot;02-jul-2011&quot;&gt;02 Jul 2011&lt;/h6&gt;

&lt;p&gt;Gosto muito das cancoes de luta social&lt;/p&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/L_gcV8O5Zl8?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/L_gcV8O5Zl8?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&amp;lt;/center&amp;gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>n√£o tenho dinheiro</title>
   <link href="http://javier.io/blog/pt/2011/05/20/nao-tenho-dinheiro.html"/>
   <updated>2011-05-20T00:00:00+00:00</updated>
   <id>http://javier.io/blog/pt/2011/05/20/nao-tenho-dinheiro</id>
   <content type="html">&lt;h2 id=&quot;n√£o-tenho-dinheiro&quot;&gt;n√£o tenho dinheiro&lt;/h2&gt;

&lt;h6 id=&quot;20-may-2011&quot;&gt;20 May 2011&lt;/h6&gt;

&lt;p&gt;Eu tambem n√£o! =)&lt;/p&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/zdCF5Uknu-8?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/zdCF5Uknu-8?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
Vou, pela rua, caminhando mas pensando em meu amor
e vou, decorando coisas serias que preciso-lhe dizer
porque amo muito mas entendo que tao s√≥ de mi esperar
e eu, n√£o sou nada sou tao pobe que nao posso-me casar

N√£o tenho dinheiro nem nada que dar, eu tenho solamente
amor para amar, si ela me ama vai compreender
si n√£o para sempre vou ter esquecer

N√£o tenho dinheiro nem nada que dar, eu tenho solamente
amor para amar, si ela me ama vai compreender
si n√£o para sempre vou ter esquecer

Eu sei, que ao seu lado amo muito e me sinto tao feliz
e sei que adiz cerqui sou tao pobe seu amor j√° perdi
entao, eu queria ter de todo por o mundo a seus pes

Mas eu naci pobre e √© por isso que sempre ninguem me quer

N√£o tenho dinheiro nem nada que dar eu tenho solamente
amor para amar, si ela me ama vai compreender
si n√£o para sempre vou ter esquecer

N√£o tenho dinheiro nem nada que dar eu tenho solamente
amor para amar, si ela me ama vai compreender
si n√£o para sempre vou ter esquecer

N√£o tenho dinheiro nem nada que dar eu tenho solamente
amor para amar, si ela me ama vai compreender
si n√£o para sempre pote diz-que ser 
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>watch_battery</title>
   <link href="http://javier.io/blog/en/2011/04/07/watch-battery.html"/>
   <updated>2011-04-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/04/07/watch-battery</id>
   <content type="html">&lt;h2 id=&quot;watch_battery&quot;&gt;watch_battery&lt;/h2&gt;

&lt;h6 id=&quot;07-apr-2011&quot;&gt;07 Apr 2011&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/40.png&quot;&gt;&lt;img src=&quot;/assets/img/40.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I made a little &lt;a href=&quot;https://github.com/minos-org/minos-tools/blob/master/tools/watch-battery&quot;&gt;script&lt;/a&gt; to look after my laptop battery so it doesn‚Äôt shutdown at the middle of me working. It requieres &lt;strong&gt;notify-send&lt;/strong&gt;, &lt;strong&gt;hibernate&lt;/strong&gt; and &lt;strong&gt;acpi,&lt;/strong&gt; and targets Ubuntu:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install acpi libnotify-bin hibernate
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; For the hibernation to work the computer requires to have enough SWAP space (more than the amount of RAM)&lt;/p&gt;

&lt;p&gt;The scripts analyze the battery status and send notifications if the charge is less than 15%,10% or 7%, if the equipment reaches 5% it sends a final warning and hibernate the machine.&lt;/p&gt;

&lt;p&gt;I recommend to execute it every minute, a cron job can help:&lt;/p&gt;

&lt;pre class=&quot;sh_log&quot;&gt;
*/1 * * * * /usr/local/bin/watch_battery
&lt;/pre&gt;

&lt;p&gt;If you prefer to shutdown or suspend the equipment modify the &lt;strong&gt;$ACTION&lt;/strong&gt; variable:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# Actions
ACTION=&quot;$(command -v hibernate)&quot;
&lt;/pre&gt;

&lt;p&gt;Make sure &lt;strong&gt;sudo&lt;/strong&gt; can call the action command without requering password:&lt;/p&gt;

&lt;pre class=&quot;sh_properties&quot;&gt;
#===================================
# Cmnd alias specification
Cmnd_Alias SESSION=/usr/sbin/pm-suspend,/usr/sbin/hibernate,/sbin/shutdown

# usuario may use specific commands without passwd
user ALL=(root) NOPASSWD:SESSION
#===================================
&lt;/pre&gt;

&lt;p&gt;Special thanks to &lt;a href=&quot;http://forums.debian.net/viewtopic.php?f=8&amp;amp;t=52115#p299406&quot;&gt;smasty&lt;/a&gt; for the initial snippet.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/913004&quot;&gt;https://gist.github.com/913004&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>don't let cd slow you down, cd wrappers: wcd, commacd</title>
   <link href="http://javier.io/blog/en/2011/04/05/dont-let-cd-slow-you-down-wcd-commacd.html"/>
   <updated>2011-04-05T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/04/05/dont-let-cd-slow-you-down-wcd-commacd</id>
   <content type="html">&lt;h2 id=&quot;dont-let-cd-slow-you-down-cd-wrappers-wcd-commacd&quot;&gt;don‚Äôt let cd slow you down, cd wrappers: wcd, commacd&lt;/h2&gt;

&lt;h6 id=&quot;05-apr-2011&quot;&gt;05 Apr 2011&lt;/h6&gt;

&lt;!--&lt;iframe  class=&quot;showterm&quot; src=&quot;http://showterm.io/ae29f68bee555cd89c65d&quot; width=&quot;640&quot; height=&quot;350&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;

&lt;p&gt;Using a console interface to manage a computer has its disadvantages, some of them are specially visible when dealing with multiple files at the same time (moving/renaming/copying), typing long and crypted commands/options or moving around. On this entry I‚Äôll talk about the last one.&lt;/p&gt;

&lt;p&gt;The default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; behaviour on bash to change directories is quite strict, it requires to write full/relative paths and doesn‚Äôt recognize fuzzy search or any more complicated way of finding directories, some people use many &lt;a href=&quot;https://github.com/relevance/etc/blob/master/bash/project_aliases.sh&quot;&gt;aliases&lt;/a&gt; to workaround these issues, others change its default shell or use third party tools, eg: &lt;a href=&quot;https://github.com/clvv/fasd&quot;&gt;fasd&lt;/a&gt;, &lt;a href=&quot;https://github.com/vigneshwaranr/bd&quot;&gt;bd&lt;/a&gt;, &lt;a href=&quot;https://github.com/junegunn/fzf&quot;&gt;fzf&lt;/a&gt;, etc to create a semi automatic way of moving faster.&lt;/p&gt;

&lt;p&gt;I prefer everything as minimalist and automatic as possible, so after reviewing lots of custom scripts, alternative shells and third party hacks, I think I‚Äôve something good enough to write about and use on a daily basis.&lt;/p&gt;

&lt;p&gt;All start by enabling semi hidden bash options for autocorrecting and autocompleting directories:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ head ~/.bashrc
# http://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html
if [ &quot;${BASH_VERSINFO}&quot; -ge &quot;4&quot; ]; then
    shopt -s autocd cdspell dirspell
fi
&lt;/pre&gt;

&lt;p&gt;Now, bash can autocomplete &lt;strong&gt;1/2/3/foo&lt;/strong&gt; in the following scenarios:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cd 1/2/3/foo
$ cd 1/2/3/ofo
$ 1/2/3/foo
&lt;/pre&gt;

&lt;p&gt;Moving between important directories and parent directories can be optimized by adding some aliases:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ head ~/.alias.common
alias ..=&quot;cd ..&quot;
alias ....=&quot;cd ../..&quot;
alias important.path=&quot;cd important/path&quot;
&lt;/pre&gt;

&lt;p&gt;Now it‚Äôs time for some major improvements. An important &lt;a href=&quot;http://www.zsh.org&quot;&gt;zsh&lt;/a&gt; cd related feature is called pattern recognition, e.g. &lt;strong&gt;$ cd s&lt;em&gt;/m&lt;/em&gt;/pl&lt;/strong&gt; will become &lt;strong&gt;super/master/plan&lt;/strong&gt;, that‚Äôs sweet, unfortunately bash is unable to recognize such patterns by itself, however with some &lt;a href=&quot;http://wcd.sourceforge.net/&quot;&gt;help&lt;/a&gt; it can do it even better.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install wcd
$ head ~/.alias.common
alias cd='. wcd'
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;wcd&lt;/strong&gt; is not a binary, it‚Äôs a wrapper script around &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wcd.exec&lt;/code&gt; (available on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wcd&lt;/code&gt; package):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/wcd&quot;&gt;https://github.com/javier-lopez/learn/blob/master/sh/tools/wcd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once installed and configured, &lt;strong&gt;$ cd s&lt;em&gt;/m&lt;/em&gt;/pl&lt;/strong&gt; will take us to &lt;strong&gt;super/master/plan&lt;/strong&gt; no matter what the current is, &lt;a href=&quot;http://wcd.sourceforge.net/&quot;&gt;wcd&lt;/a&gt; works by creating an index file with all available directories and looking at it to find the best approximation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Wcd will require to regenerate the index db every now and then, a cronjob with the following content can help:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
0 23 * * *  /usr/local/bin/update-cd
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /usr/local/bin/update-cd
#!/bin/sh
#description: update wcd db if available
#usage: update-cd

if [ -f &quot;$(command -v &quot;wcd&quot;)&quot; ] &amp;amp;&amp;amp; [ -f &quot;$(command -v &quot;wcd.exec&quot;)&quot; ]; then
    mkdir &quot;${HOME}&quot;/.wcd; wcd.exec -GN -j -xf &quot;${HOME}&quot;/.ban.wcd -S &quot;${HOME}&quot;
    [ -f &quot;${HOME}&quot;/.treedata.wcd ] &amp;amp;&amp;amp; mv &quot;${HOME}&quot;/.treedata.wcd &quot;${HOME}&quot;/.wcd/
fi
&lt;/pre&gt;

&lt;p&gt;Been able to move to any directory from anywhere is really helpful, however sometimes it‚Äôs desirable to move around parents and nearby directories efficiently, that‚Äôs where &lt;a href=&quot;https://github.com/shyiko/commacd&quot;&gt;commacd&lt;/a&gt; get in. With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commacd&lt;/code&gt; several aliases (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,,&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,,,&lt;/code&gt;) are defined which can be used on the following scenarios:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ , /u/l/b #moving through multiple directories
=&amp;gt; cd /usr/local/bin
$ , d #moving through multiple directories with the same name
=&amp;gt; 1 Desktop
   2 Downloads
   : &amp;lt;type index of the directory to cd into&amp;gt;
~/code/projects/zion/src/module $ ,, #going up till a project directory is found (git/hg/svn based)
=&amp;gt; cd ~/code/projects/zion
~/code/projects/zion/src/module $ ,, pro #going into the first parent directory named pro*
=&amp;gt; cd ~/code/projects
~/code/projects/zion/src/module $ ,, zion matrix #subtituing the current path and going into the result
=&amp;gt; cd ~/code/projects/matrix/src/module
~/code/projects/zion/src/module $ ,,, matrix/tests #going into a sibling directory who has the same parent directory
=&amp;gt; cd ~/code/projects/matrix/tests/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As wcd, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commacd&lt;/code&gt; is a script who can be downloaded from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/shyiko/commacd/master/commacd.bash&quot;&gt;https://raw.githubusercontent.com/shyiko/commacd/master/commacd.bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or to get my personal version:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/javier-lopez/learn/master/sh/tools/commacd&quot;&gt;https://raw.githubusercontent.com/javier-lopez/learn/master/sh/tools/commacd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Upon getting any of them, the script should be used as an alias (due to the nature of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; built-in), eg, &lt;strong&gt;~/bashrc&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
if [ -f &quot;$(command -v &quot;commacd&quot;)&quot; ]; then
    . commacd
    alias ,=_commacd_forward
    alias ,,=_commacd_backward
    alias ,,,=_commacd_backward_forward
fi
&lt;/pre&gt;

&lt;p&gt;That‚Äôs it, now moving around should feel less archaic, happy cli browsing üòÑ&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>lint</title>
   <link href="http://javier.io/blog/en/2011/02/07/lint.html"/>
   <updated>2011-02-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2011/02/07/lint</id>
   <content type="html">&lt;h2 id=&quot;lint&quot;&gt;lint&lt;/h2&gt;

&lt;h6 id=&quot;07-feb-2011&quot;&gt;07 Feb 2011&lt;/h6&gt;

&lt;p&gt;My belly button has always produced lint, it‚Äôs a white, soft, and warm guest, she lives there, sometimes at night we talk.., and I realize we like the same things, we ask the same questions and sometimes we even get the same conclusions. This make me think about the possibility of had been a little lint in the belly button of someone else in a previous life.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>share connection between personal computers</title>
   <link href="http://javier.io/blog/en/2010/12/14/share-connection-between-personal-computers.html"/>
   <updated>2010-12-14T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/12/14/share-connection-between-personal-computers</id>
   <content type="html">&lt;h2 id=&quot;share-connection-between-personal-computers&quot;&gt;share connection between personal computers&lt;/h2&gt;

&lt;h6 id=&quot;14-dec-2010&quot;&gt;14 Dec 2010&lt;/h6&gt;

&lt;h3 id=&quot;wireless-to-wired&quot;&gt;Wireless to wired&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;eth0:&lt;/strong&gt; wired link to other machine&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;eth1:&lt;/strong&gt; wireless link to internet&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo ifconfig eth0 10.0.0.1
$ sudo iptables -F
$ sudo iptables -X
$ sudo iptables -t nat -F
$ sudo iptables -t nat -X
$ sudo iptables -t mangle -F
$ sudo iptables -t mangle -X
$ sudo iptables -P INPUT ACCEPT
$ sudo iptables -P FORWARD ACCEPT
$ sudo iptables -P OUTPUT ACCEPT
$ sudo iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
$ echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
&lt;/pre&gt;

&lt;h3 id=&quot;wired-to-wireless&quot;&gt;Wired to wireless&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;eth0:&lt;/strong&gt; wired link to internet&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;eth1:&lt;/strong&gt; wireless interface as access point in ad-hoc mode&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo iwconfig wlan0 mode ad-hoc
$ sudo iwconfig wlan0 essid proxywlan
$ sudo ifconfig wlan0 10.0.0.1 up
$ sudo iptables -F
$ sudo iptables -X
$ sudo iptables -t nat -F
$ sudo iptables -t nat -X
$ sudo iptables -t mangle -F
$ sudo iptables -t mangle -X
$ sudo iptables -P INPUT ACCEPT
$ sudo iptables -P FORWARD ACCEPT
$ sudo iptables -P OUTPUT ACCEPT
$ sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
$ echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward
&lt;/pre&gt;

&lt;p&gt;After completing any of the previous steps (and if no dhcp daemon has been set up) the client machine will require to be configured manually, eg:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ip:&lt;/strong&gt; 10.0.0.2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;gateway:&lt;/strong&gt; 10.0.0.1&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dns:&lt;/strong&gt; 8.8.8.8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otherwise you can run a &lt;a href=&quot;https://raw.githubusercontent.com/javier-lopez/learn/master/python/tools/simple-dhcpd&quot;&gt;simple dhcpd&lt;/a&gt; daemon:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo simple-dhcpd -i eth0 -a 10.0.0.1
&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>wire and wireless concurrent connections with wicd</title>
   <link href="http://javier.io/blog/en/2010/12/07/wire-wireless-concurrent-connections-with-wicd.html"/>
   <updated>2010-12-07T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/12/07/wire-wireless-concurrent-connections-with-wicd</id>
   <content type="html">&lt;h2 id=&quot;wire-and-wireless-concurrent-connections-with-wicd&quot;&gt;wire and wireless concurrent connections with wicd&lt;/h2&gt;

&lt;h6 id=&quot;07-dec-2010&quot;&gt;07 Dec 2010&lt;/h6&gt;

&lt;p&gt;Even when it‚Äôs not possible to configure two concurrent connections from within &lt;a href=&quot;http://wicd.sourceforge.net&quot;&gt;wicd&lt;/a&gt; it can be tricked to do so. To do this the &lt;strong&gt;/etc/network/interfaces&lt;/strong&gt; file must be edited with the wired interface details, eg:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /etc/network/interfaces
  auto eth0
  iface eth0 inet static
          address 10.0.0.1
          netmask 255.255.255.0
          network 10.0.0.0
          broadcast 10.0.0.255
&lt;/pre&gt;

&lt;p&gt;Afterwards, the wired interface will need to be removed from wicd &lt;strong&gt;properties&lt;/strong&gt;. That‚Äôs it!, now the wireless interface can be controled from wicd and the wired one through &lt;strong&gt;ifup&lt;/strong&gt;/&lt;strong&gt;ifdown&lt;/strong&gt; üòá&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.launchpad.net/wicd/+bug/228578&quot;&gt;https://bugs.launchpad.net/wicd/+bug/228578&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>send emails from terminal</title>
   <link href="http://javier.io/blog/en/2010/11/28/send-emails-from-terminal.html"/>
   <updated>2010-11-28T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/11/28/send-emails-from-terminal</id>
   <content type="html">&lt;h2 id=&quot;send-emails-from-terminal&quot;&gt;send emails from terminal&lt;/h2&gt;

&lt;h6 id=&quot;28-nov-2010&quot;&gt;28 Nov 2010&lt;/h6&gt;

&lt;p&gt;In some systems the command &lt;strong&gt;mail&lt;/strong&gt; is installed by default and as its name
suggests it‚Äôs used to send/read emails (usually between users of the same
system), for this to work a mail server needs to be installed locally, I‚Äôm not
sure about others but it sounds like a lot of work for me. I just want a light
client from where I could send some emails. After searching on Internet I came
to &lt;a href=&quot;http://caspian.dotconf.net/menu/Software/SendEmail/&quot;&gt;Sendemail&lt;/a&gt;, a perl
script who connects to external smtp servers and use them to deliver messages:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install -y sendemail libio-socket-ssl-perl libnet-ssleay-perl
&lt;/pre&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sendemail -f from@foo.org \
  -u title -m message       \
  -t to@bar.com             \
  -s mail.foo.com:26        \
  -xu user -xp password
&lt;/pre&gt;

&lt;p&gt;Or with gmail:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sendemail -f from@foo.org \
  -u title -m message       \
  -t to@bar.com             \
  -s smtp.gmail.com:2587    \
  -o tls=yes -xu user -xp password
&lt;/pre&gt;

&lt;p&gt;Now, since gmail blocks hosts per ip, it sometimes doesn‚Äôt work when it used
from new locations, it can be very annoying. Fortunately, there are other ways
to send emails within a system, my favorite method is to use
&lt;a href=&quot;http://mailgun.com&quot;&gt;http://mailgun.com&lt;/a&gt;. When using mailgun you only need an
account in such service and &lt;strong&gt;curl&lt;/strong&gt; installed in your system. I‚Äôve created a
script who wraps the required logic and just send emails.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ wget https://raw.github.com/javier-lopez/learn/master/sh/tools/mailgun
$ sh mailgun --api xxx &quot;address@to.com&quot; &quot;message&quot;
&lt;/pre&gt;

&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/6d595bb4e5424b943e54f&quot; width=&quot;640&quot; height=&quot;300&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;

&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>calavera</title>
   <link href="http://javier.io/blog/es/2010/10/28/calavera.html"/>
   <updated>2010-10-28T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2010/10/28/calavera</id>
   <content type="html">&lt;h2 id=&quot;calavera&quot;&gt;calavera&lt;/h2&gt;

&lt;h6 id=&quot;28-oct-2010&quot;&gt;28 Oct 2010&lt;/h6&gt;

&lt;p&gt;Nada, una calavera de rimas f√°ciles para la banda extinta de #fel-clan&lt;/p&gt;

&lt;pre class=&quot;lyric&quot;&gt;
Andaba Catrina muy apurada
recorr√≠a freenode sin cesar
buscaba un grupo, uno singular
headshot al #fel-clan venia a dar

Pedradas, mon√≥logos en gringo
batallas de emoticons de a mont√≥n
waza, y soporte sin distinci√≥n

Despu√©s de muchos /joins tirar
al canal del team pudo entrar
Hrgn fue al √∫nico que encontr√≥
lanzo una granada y el susodicho
sin ENLI y sin cabeza se qued√≥

Idle entonces espero
a linuxeros, macqueros y windoceros
no importaba pues tra√≠a
paz paz para cualquiera
Chanserv le dio @ sin preguntar
uno a uno el averno iban a visitar

Thot entr√≥ y esta vez voz no le falt√≥
gritos dicen que se escucharon
cuando la Catrina desfund√≥ su arma
y los dientes le tumb√≥

Uno menos se dijo riendo
y enseguida se puso a pensar
le hubiera preguntado c√≥mo
el openBSD actualizar

La noche se acercaba
y la calaca desesperaba
uno, dos, cuatro, entraron de jal√≥n
y a todos se los despach√≥

Leoi, avento a Ceotz al frente
corri√≥, salt√≥ y dispar√≥
entonces la m√°quina se le trab√≥
y en el acto se lo llev√≥

Jackrock creyendo que la ten√≠a
disparo con furor
pero quedando out of army
la muerte del hi-skill lo elimin√≥

Centinela, al ver a todos caer
las paces intento hacer
y cuando en sus manos la ten√≠a
un disparo certero lanz√≥
mal hizo el chaval, pues la Catrina
un pase VIP al infierno le di√≥

M√°s tarde que temprano
Azimov apareci√≥
y viendo todo el tiradero
la submachine gun sac√≥

En seguida la muerte se lanz√≥
tres cartuchos descarg√≥
de pies ligeros, ni una bala lo toc√≥
y a la cuarta, un Chilicuil lo salv√≥

Chilicuil quedo tendido
ni tiempo le dio de decir OMG
el karma ya le tra√≠a ganas
y juntas, todas sus cuentas se las cobr√≥

La muerte lo intento todo
y Azimov le dio batalla
usando hacks no sab√≠a
puedes evadir hasta el lodo

M√°s en un descuido
Azimov se torci√≥ el tobillo
cayo y se enterr√≥ su cuchillo

El AA llego, Asarch y Akemi juntitos
a la muerte se le antojaron romeritos
Asarch buzo caperuzo saco el recurso
mendigo misilazo acabo con el intruso

Akemi que no se enter√≥
piedras, lanzo y lanzo
y al pobre Asarch dio muerte
la √∫nica superviviente
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ipod shuffle and rebuild_db</title>
   <link href="http://javier.io/blog/en/2010/10/18/ipod-shuffle-rebuild-db.html"/>
   <updated>2010-10-18T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/10/18/ipod-shuffle-rebuild-db</id>
   <content type="html">&lt;h2 id=&quot;ipod-shuffle-and-rebuild_db&quot;&gt;ipod shuffle and rebuild_db&lt;/h2&gt;

&lt;h6 id=&quot;18-oct-2010&quot;&gt;18 Oct 2010&lt;/h6&gt;

&lt;p&gt;Some time ago I bought an ipod shuffle and as with all apple products it turned out to be somekind difficult to use on Linux. Rythmbox and gtkpod sometimes do weird stuff, so I keept testing projects till I found &lt;a href=&quot;http://shuffle-db.sourceforge.net/&quot;&gt;rebuild_db&lt;/a&gt;, a minimalist program who just get the job done ‚òÉ&lt;/p&gt;

&lt;p&gt;After connecting and mounting the device (it only works with shuffle models) you can create any directory (I call it ‚Äòmusic‚Äô) and copy there all your tracks. At the end before unmounting just execute the program and it would rearrange the files and will create the expected structure. I‚Äôm now a happy ipod shuffle user üòé&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>i3 and xinerama</title>
   <link href="http://javier.io/blog/en/2010/07/23/i3-xinerama.html"/>
   <updated>2010-07-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/07/23/i3-xinerama</id>
   <content type="html">&lt;h2 id=&quot;i3-and-xinerama&quot;&gt;i3 and xinerama&lt;/h2&gt;

&lt;h6 id=&quot;23-jul-2010&quot;&gt;23 Jul 2010&lt;/h6&gt;

&lt;p&gt;**Update Feb/2014: ** I‚Äôve created a &lt;a href=&quot;https://github.com/minos-org/minos-tools/blob/master/tools/dmenu-xrandr&quot;&gt;dmenu script&lt;/a&gt; who lists and configures automatically available monitors.&lt;/p&gt;

&lt;p&gt;One of the main reasons I decided to stick with &lt;a href=&quot;http://i3-wm.org&quot;&gt;i3-wm&lt;/a&gt; over &lt;a href=&quot;http://wmii.suckless.org/&quot;&gt;wmii&lt;/a&gt; was the improved &lt;a href=&quot;http://en.wikipedia.org/wiki/Xinerama&quot;&gt;xinerama&lt;/a&gt; support, that is the hability to use several screens at the same time, can you believe there are some window managers who don‚Äôt do it?, me neither üò≥&lt;/p&gt;

&lt;p&gt;For example, if I were to clone the video output from my laptop screen to a video projector I could use:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ xrandr --output VGA1 --mode 1024x768 --same-as LVDS1
&lt;/pre&gt;

&lt;p&gt;Or if were to extend my virtual work place, I could execute:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ xrandr --output VGA1 --mode 1024x768 --right-of LVDS1
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;xrandr&lt;/strong&gt; accepts plenty of options, refer to the man page for more details.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.ubuntu.com/X/Config/Resolution&quot;&gt;https://wiki.ubuntu.com/X/Config/Resolution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>gtk and java</title>
   <link href="http://javier.io/blog/en/2010/07/13/gtk-java.html"/>
   <updated>2010-07-13T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/07/13/gtk-java</id>
   <content type="html">&lt;h2 id=&quot;gtk-and-java&quot;&gt;gtk and java&lt;/h2&gt;

&lt;h6 id=&quot;13-jul-2010&quot;&gt;13 Jul 2010&lt;/h6&gt;

&lt;p&gt;One of the main reasons I don‚Äôt like java is how their applications looks, whenever I open a java program I‚Äôve the sensation I‚Äôve gone back to the past 10-15 years. Nevertheless some of those applications can be forced to use gtk when available:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
export _JAVA_OPTIONS=&quot;-Dawt.useSystemAAFontSettings=on -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel&quot;
&lt;/pre&gt;

&lt;p&gt;It can also be permanently set by copying it to &lt;strong&gt;~/.bashrc&lt;/strong&gt; or your favorite shell configuration file.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogs.sun.com/netbeansphp/entry/how_to_change_look_and&quot;&gt;http://blogs.sun.com/netbeansphp/entry/how_to_change_look_and&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>fu-search</title>
   <link href="http://javier.io/blog/en/2010/07/11/fu-search.html"/>
   <updated>2010-07-11T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/07/11/fu-search</id>
   <content type="html">&lt;h2 id=&quot;fu-search&quot;&gt;fu-search&lt;/h2&gt;

&lt;h6 id=&quot;11-jul-2010&quot;&gt;11 Jul 2010&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://commandlinefu.com&quot;&gt;commandlinefu&lt;/a&gt; is a popular website where one-liners for unix environments are posted. It‚Äôs a nice place to learn by example, look for ideas or just to spend time. I liked so much than I decided to build my own client:&lt;/p&gt;

&lt;!--**[![](/assets/img/37.png)](/assets/img/37.png)**--&gt;
&lt;!--**[![](/assets/img/38.png)](/assets/img/38.png)**--&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/38.png&quot;&gt;&lt;img src=&quot;/assets/img/39.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;!--&lt;iframe class=&quot;showterm&quot; src=&quot;http://showterm.io/e46d37e655b72730db834&quot; width=&quot;640&quot; height=&quot;300&quot;&gt;&amp;nbsp;&lt;/iframe&gt;--&gt;&lt;/p&gt;

&lt;p&gt;Feel free to grab it at: &lt;a href=&quot;https://github.com/javier-lopez/learn/blob/master/sh/tools/fu-search&quot;&gt;https://github.com/javier-lopez/learn/blob/master/sh/tools/fu-search&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>i3</title>
   <link href="http://javier.io/blog/en/2010/06/16/i3.html"/>
   <updated>2010-06-16T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/06/16/i3</id>
   <content type="html">&lt;h2 id=&quot;i3&quot;&gt;i3&lt;/h2&gt;

&lt;h6 id=&quot;16-jun-2010&quot;&gt;16 Jun 2010&lt;/h6&gt;

&lt;p&gt;I‚Äôve been using &lt;a href=&quot;http://i3wm.org&quot;&gt;i3-wm&lt;/a&gt; for a year, it‚Äôs fast, configurable and l33t, so I don‚Äôt have intentions to change it. Nevertheless I decided to grab a more recent version (&amp;lt; 4), add some &lt;a href=&quot;http://i3wm.org&quot;&gt;patches&lt;/a&gt; and freeze it. This version is intend to be used in all supported Ubuntu LTS versions. Feel free to install it as well.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo add-apt-repository ppa:minos-archive/main
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install i3-wm
&lt;/pre&gt;

&lt;p&gt;For completion, this is the &lt;a href=&quot;https://github.com/javier-lopez/dotfiles/blob/master/.i3/config.4&quot;&gt;~/.i3/config&lt;/a&gt; configuration file I use and how it looks&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/minos-movie.png&quot;&gt;&lt;img src=&quot;/assets/img/minos-movie.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy tiling üòä&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>synergy</title>
   <link href="http://javier.io/blog/en/2010/06/14/synergy.html"/>
   <updated>2010-06-14T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/06/14/synergy</id>
   <content type="html">&lt;h2 id=&quot;synergy&quot;&gt;synergy&lt;/h2&gt;

&lt;h6 id=&quot;14-jun-2010&quot;&gt;14 Jun 2010&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://synergy-foss.org&quot;&gt;Synergy&lt;/a&gt; is a program who unifies keyboard/mouse/clipboard between several machines (even running different OS), according to its website it supports Windows, OSX and Unix (requires x11 and xtest).&lt;/p&gt;

&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;662&quot; height=&quot;491&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/4wkJx9Ozfu8?version=3&amp;amp;hl=en_US&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/4wkJx9Ozfu8?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;662&quot; height=&quot;491&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;In Ubuntu it can be installed from the official repositories (both, client and server):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ sudo apt-get install -y synergy
&lt;/pre&gt;

&lt;p&gt;The server part bind to the &lt;strong&gt;24800&lt;/strong&gt; port, so it doesn‚Äôt require special permissions:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ synergys
&lt;/pre&gt;

&lt;p&gt;The clients can start and connect to the server ip by executing:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ synergyc --daemon server-ip
&lt;/pre&gt;

&lt;p&gt;By default, synaptics doesn‚Äôt encrypt the link, a man in the middle could review the packets and see what the clients are writing. To avoid this problem, a ssh tunnel can be deployed:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ssh -f -N -L 24800:localhost:24800 server-ip
$ synergyc --daemon localhost
&lt;/pre&gt;

&lt;p&gt;Have fun üòã&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>configure WPA/WEP in openbsd</title>
   <link href="http://javier.io/blog/en/2010/05/25/wpa-wep-obsd.html"/>
   <updated>2010-05-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/05/25/wpa-wep-obsd</id>
   <content type="html">&lt;h2 id=&quot;configure-wpawep-in-openbsd&quot;&gt;configure WPA/WEP in openbsd&lt;/h2&gt;

&lt;h6 id=&quot;25-may-2010&quot;&gt;25 May 2010&lt;/h6&gt;

&lt;h3 id=&quot;wpa---static-ip&quot;&gt;WPA - static ip&lt;/h3&gt;

&lt;p&gt;Since openbsd 4.4 (4.5 for ath0) it‚Äôs possible to connect to wpa networks, it doesn‚Äôt work with all drivers but eventually it should be viable with most of them.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ifconfig ath0 nwid ACCESS_POINT wpa wpapsk $(wpa-psk ACCESS_POINT PASSWORD)
$ ifconfig ath0 10.0.0.2 255.255.255.0 10.0.0.1  
&lt;/pre&gt;

&lt;p&gt;It can also be configured in &lt;strong&gt;/etc/hostname.ath0&lt;/strong&gt; for connecting at boot time:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /etc/hostname.ath0
  inet 10.0.0.2 255.255.255.0 10.0.0.255 nwid ACCESS_POINT wpa wpapsk \
  0xc7bd82ef64a789369e18d6df63230a3b099f72a74b999bdbe837773e6081cb54
&lt;/pre&gt;

&lt;p&gt;The last parameter is taken from &lt;strong&gt;$ wpa-psk ACCESS_POINT PASSWORD&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;wpa---dinamic-ip&quot;&gt;WPA - dinamic ip&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ifconfig ath0 nwid ACCESS_POINT wpa wpapsk $(wpa-psk ACCESS_POINT PASSWORD)
$ dhclient ath0
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/etc/hostname.ath0&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /etc/hostname.ath0
  dhcp nwid ACCESS_POINT wpa wpapsk \
  0xc7bd82ef64a789369e18d6df63230a3b099f72a74b999bdbe837773e6081cb54
&lt;/pre&gt;

&lt;h3 id=&quot;wep---static-ip&quot;&gt;WEP - static ip&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ifconfig ath0 nwid ACCESS_POINT nwkey 0xPASSWORD
$ ifconfig ath0 10.0.0.2 255.255.255.0 10.0.0.1
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/etc/hostname.ath0&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /etc/hostname.ath0
  inet 10.0.0.2 255.255.255.0 10.0.0.255 nwid ACCESS_POINT nwkey 0xPASSWORD
&lt;/pre&gt;

&lt;h3 id=&quot;wep---dinamic-ip&quot;&gt;WEP - dinamic ip&lt;/h3&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ifconfig ath0 nwid ACCESS_POINT nwkey 0xPASSWORD
$ dhclient ath0
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/etc/hostname.ath0&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ cat /etc/hostname.ath0
  dhcp nwid ACESS_POINT nwkey  0xPASSWORD
&lt;/pre&gt;

&lt;p&gt;The same commands can be used from the installer (by using ! as prefix)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>install ubuntu from the windows boot loader</title>
   <link href="http://javier.io/blog/en/2010/05/19/ubuntu-installation-from-windows-boot-loader.html"/>
   <updated>2010-05-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/05/19/ubuntu-installation-from-windows-boot-loader</id>
   <content type="html">&lt;h2 id=&quot;install-ubuntu-from-the-windows-boot-loader&quot;&gt;install ubuntu from the windows boot loader&lt;/h2&gt;

&lt;h6 id=&quot;19-may-2010&quot;&gt;19 May 2010&lt;/h6&gt;

&lt;p&gt;I got a new netbook some weeks ago, I tested it fully for a month to verify the hardware didn‚Äôt have any defects, and decided to move on with the recent Ubuntu 10.04 release.&lt;/p&gt;

&lt;p&gt;The machine came pre-installed with Windows and I didn‚Äôt have any cd/usb available so I decided to use the system itself to install Ubuntu. The first step was to download &lt;a href=&quot;http://grub4dos.sourceforge.net/&quot;&gt;grub4dos&lt;/a&gt;, uncompress it and copy &lt;strong&gt;grldr&lt;/strong&gt; and menu.lst (grub loader) to &lt;strong&gt;C:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/26.png&quot;&gt;&lt;img src=&quot;/assets/img/26.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/27.png&quot;&gt;&lt;img src=&quot;/assets/img/27.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then I created a &lt;strong&gt;C:\boot\grub&lt;/strong&gt; directory and saved initrd (installer) and linux (kernel) in &lt;strong&gt;C:\boot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the x86 architecture, the files can be downloaded from:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-i386/current/images/netboot/ubuntu-installer/i386/initrd.gz&quot;&gt;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-i386/current/images/netboot/ubuntu-installer/i386/initrd.gz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-i386/current/images/netboot/ubuntu-installer/i386/linux&quot;&gt;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-i386/current/images/netboot/ubuntu-installer/i386/linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For amd64:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz&quot;&gt;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux&quot;&gt;http://archive.ubuntu.com/ubuntu/dists/lucid/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/28.png&quot;&gt;&lt;img src=&quot;/assets/img/28.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Afterwards I copied &lt;strong&gt;C:\menu.lst&lt;/strong&gt; to &lt;strong&gt;C:\boot\grub&lt;/strong&gt; and edit it this way:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/29.png&quot;&gt;&lt;img src=&quot;/assets/img/29.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally I added the entry to the Windows loader and rebooted the system:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/30.png&quot;&gt;&lt;img src=&quot;/assets/img/30.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/31.png&quot;&gt;&lt;img src=&quot;/assets/img/31.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/32.png&quot;&gt;&lt;img src=&quot;/assets/img/32.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/33.png&quot;&gt;&lt;img src=&quot;/assets/img/33.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At startup a new entry called &lt;strong&gt;Start GRUB&lt;/strong&gt; will showed up. That‚Äôs it, it will bring up the rest of the process.&lt;/p&gt;

&lt;p&gt;WARNING: This method requires an Internet connection through a wired interface, it may work with some wifi cards but the installer won‚Äôt recognize most of them so it‚Äôs better not to rely on it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/Installation/FromWindows&quot;&gt;https://help.ubuntu.com/community/Installation/FromWindows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>deb file structure</title>
   <link href="http://javier.io/blog/en/2010/05/19/deb-file-structure.html"/>
   <updated>2010-05-19T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2010/05/19/deb-file-structure</id>
   <content type="html">&lt;h2 id=&quot;deb-file-structure&quot;&gt;deb file structure&lt;/h2&gt;

&lt;h6 id=&quot;19-may-2010&quot;&gt;19 May 2010&lt;/h6&gt;

&lt;p&gt;Deb packages are nothing but &lt;a href=&quot;http://en.wikipedia.org/wiki/Ar_%28Unix%29&quot;&gt;ar containers&lt;/a&gt;, what set them apart (besides the sufix) are the 3 blobs they always contain.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;debian-binary: package version, normally 2.0&lt;/li&gt;
  &lt;li&gt;control.tar.gz: compressed package files containing &lt;a href=&quot;http://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;checksums&lt;/a&gt;, scripts (http://www.debian.org/doc/FAQ/ch-pkg_basics.html), metadata, etc.&lt;/li&gt;
  &lt;li&gt;data.tar.gz: compressed package files containing the program itself (commonly in binary format)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;NOTE: Modifying .deb packages directly is not the right way to do it. The formal procedure is described at the Debian packaging guide:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.debian.org/HowToPackageForDebian&quot;&gt;http://wiki.debian.org/HowToPackageForDebian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On this example I required to extract some files from firefox-launchpad-plugin. I had already installed firefox from a third party source and Ubuntu wanted to install its own version as a dependency which wasn‚Äôt going to happen.&lt;/p&gt;

&lt;p&gt;To uncompress deb packages a call to ar is enough:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ar xv firefox-launchpad-plugin_0.4_all.deb
  x - debian-binary
  x - control.tar.gz
  x - data.tar.gz
&lt;/pre&gt;

&lt;p&gt;If all you want is to modify the package, you can extract the .tar.gz files, modify them and repackage them with:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ar r firefox-launchpad-plugin_0.4_all.deb debian-binary control.tar.gz data.tar.gz
  ar: creating firefox-launchpad-plugin_0.4_all.deb
&lt;/pre&gt;

&lt;p&gt;On this example however I‚Äôll only copy some files to the file system:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ tar zxvf data.tar.gz
  ./
  ./usr/
  ./usr/lib/
  ./usr/lib/firefox-addons/
  ./usr/lib/firefox-addons/searchplugins/
  ./usr/lib/firefox-addons/searchplugins/launchpad-bug-lookup.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-bugs.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-package-bugs.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-packages.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-people.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-specs.xml
  ./usr/lib/firefox-addons/searchplugins/launchpad-support.xml
$ find ~/.mozilla/ -type d  -iname searchplugins
  /home/javier/.mozilla/firefox/h5xyzl6e.default/searchplugins
$ mv ./usr/lib/firefox-addons/searchplugins/* ~/.mozilla/firefox/h5xyzl6e.default/searchplugins/
&lt;/pre&gt;

&lt;p&gt;Done!, I don‚Äôt need to mess with a dependency hell for a bunch of files üòè&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/34.png&quot;&gt;&lt;img src=&quot;/assets/img/34.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>k estas haciendo? (curl + cookies + post)</title>
   <link href="http://javier.io/blog/es/2010/03/09/k-estas-haciendo-curl.html"/>
   <updated>2010-03-09T00:00:00+00:00</updated>
   <id>http://javier.io/blog/es/2010/03/09/k-estas-haciendo-curl</id>
   <content type="html">&lt;h2 id=&quot;k-estas-haciendo-curl--cookies--post&quot;&gt;k estas haciendo? (curl + cookies + post)&lt;/h2&gt;

&lt;h6 id=&quot;09-mar-2010&quot;&gt;09 Mar 2010&lt;/h6&gt;

&lt;p&gt;En la &lt;a href=&quot;http://mononeurona.org&quot;&gt;MN&lt;/a&gt; habia una secci√≥n de chat al estilo de twitter, no tenia una API definida, pero podia ser analizada y convertida para desplegarse en la consola.&lt;/p&gt;

&lt;p&gt;El script muestra como puede usarse curl con cookies para enviar datos a trav√©s del protocolo http (post/get).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://gist.github.com/3058885&quot;&gt;&lt;img src=&quot;/assets/img/25.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>my current desktop</title>
   <link href="http://javier.io/blog/en/2009/10/15/current-desktop-setup.html"/>
   <updated>2009-10-15T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2009/10/15/current-desktop-setup</id>
   <content type="html">&lt;h2 id=&quot;my-current-desktop&quot;&gt;my current desktop&lt;/h2&gt;

&lt;h6 id=&quot;15-oct-2009&quot;&gt;15 Oct 2009&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/assets/img/5.png&quot;&gt;&lt;img src=&quot;/assets/img/5.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/6.png&quot;&gt;&lt;img src=&quot;/assets/img/6.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&quot;/assets/img/7png&quot;&gt;&lt;img src=&quot;/assets/img/7.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu 9.04 + E17 + Ecomorp&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>less is more, and even more with color</title>
   <link href="http://javier.io/blog/en/2009/06/05/less-with-color.html"/>
   <updated>2009-06-05T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2009/06/05/less-with-color</id>
   <content type="html">&lt;h2 id=&quot;less-is-more-and-even-more-with-color&quot;&gt;less is more, and even more with color&lt;/h2&gt;

&lt;h6 id=&quot;05-jun-2009&quot;&gt;05 Jun 2009&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/1.png&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve just discovered how to colorize &lt;strong&gt;less&lt;/strong&gt; output, It may seems unimportant but I really prefer to colorize my life when possible.&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ ls -la --color |less -R
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/2.png&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The colors are defined by editing the &lt;strong&gt;~/.bashrc&lt;/strong&gt; file&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/3.png&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The same trick can be used for other commands who output colorized messages (except for those who they detect when stdout is going through a pipe such as grep):&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ tree -Ca /sys/ | less -R
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;/assets/img/4.png&quot; alt=&quot;&quot; /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More color codes can be consulted at: &lt;a href=&quot;http://ascii-table.com/ansi-escape-sequences.php&quot;&gt;http://ascii-table.com/ansi-escape-sequences.php&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>geek songs</title>
   <link href="http://javier.io/blog/en/2008/12/23/geek-songs.html"/>
   <updated>2008-12-23T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2008/12/23/geek-songs</id>
   <content type="html">&lt;h2 id=&quot;geek-songs&quot;&gt;geek songs&lt;/h2&gt;

&lt;h6 id=&quot;23-dec-2008&quot;&gt;23 Dec 2008&lt;/h6&gt;

&lt;p&gt;Here are some geeky songs I was not aware of, it‚Äôs not that I spend all my day looking for them üòâ&lt;/p&gt;

&lt;h4 id=&quot;code-monkey&quot;&gt;Code monkey&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/5W_wd9Qf0IE?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/5W_wd9Qf0IE?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/4pwd&quot;&gt;Lyric&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;kill--9&quot;&gt;Kill -9&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Fow7iUaKrq4?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/Fow7iUaKrq4?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/zx2x&quot;&gt;Lyrics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;white-and-nerdy&quot;&gt;White and nerdy&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Nh9mVsBKwYs?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/Nh9mVsBKwYs?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/1ah4&quot;&gt;Lyrics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;mc-hawking--entropy&quot;&gt;Mc hawking -Entropy&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/2knWCuzcdJo?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/2knWCuzcdJo?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/43qb&quot;&gt;Lyrics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;mac-or-pc&quot;&gt;Mac or PC&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Jkrn6ecxthM?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/Jkrn6ecxthM?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/g87q&quot;&gt;Lyrics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-geeks-get-the-girls&quot;&gt;The geeks get the girls&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/pDcz43pt6r4?hl=en_US&amp;amp;version=3&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/pDcz43pt6r4?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;[+] &lt;a href=&quot;http://www.litetext.com/b4d5&quot;&gt;Lyrics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;sunny-sunny-sunday&quot;&gt;Sunny sunny sunday&lt;/h4&gt;
&lt;div id=&quot;youtube&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/B1b-oM72Pac?version=3&amp;amp;hl=en_US&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&amp;lt;/param&amp;gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&amp;lt;/param&amp;gt;&lt;embed src=&quot;http://www.youtube.com/v/B1b-oM72Pac?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&amp;lt;/embed&amp;gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;If you know more let me know, most of the tracks were grabbed from &lt;a href=&quot;http://www.catonmat.net/blog/category/musical-geek-friday/&quot;&gt;catonmat.net&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>kexec reboot</title>
   <link href="http://javier.io/blog/en/2008/11/04/kexec-reboot.html"/>
   <updated>2008-11-04T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2008/11/04/kexec-reboot</id>
   <content type="html">&lt;h2 id=&quot;kexec-reboot&quot;&gt;kexec reboot&lt;/h2&gt;

&lt;h6 id=&quot;04-nov-2008&quot;&gt;04 Nov 2008&lt;/h6&gt;

&lt;p&gt;Since the 2.6 Linux kernel version came out there is a new way to reboot quite fast. &lt;a href=&quot;http://en.wikipedia.org/wiki/Kexec&quot;&gt;Kexec&lt;/a&gt; is a new call system who replaces the running kernel with a new one without the need to go through the bios initialization process. It means than now you‚Äôre able to reboot faster, taking away 20, 30 or even 60 seconds from the boot process.&lt;/p&gt;

&lt;p&gt;To use it, the ‚Äúkexec-tools‚Äù package must be installed and the option ‚ÄúCONFIG_KEXEC‚Äù enabled, after setting up the system, kexec can be used this way:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ kexec -l /boot/vmlinuz --command-line=&quot;`cat /proc/cmdline`&quot; --initrd=/boot/initrd
$ kexec -e
&lt;/pre&gt;

&lt;p&gt;The first line loads the kernel in memory and returns the control to the user, it‚Äôs now up to you to decide when to ‚Äúreboot‚Äù the system (the second line will do it), &lt;a href=&quot;http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_MRG/1.0/html/Realtime_Tuning_Guide/sect-Realtime_Tuning_Guide-Realtime_Specific_Tuning-Using_kdump_and_kexec_with_the_RT_kernel.html&quot;&gt;some persons&lt;/a&gt; are already using this technique to load new kernels when the running one panics.&lt;/p&gt;

&lt;p&gt;In the current upstream implementation, kexec doesn‚Äôt auto unmount the plugged devices, so it‚Äôs must be done manually:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ kexec -l /boot/vmlinuz --command-line=&quot;`cat /proc/cmdline`&quot; --initrd=/boot/initrd
$ sync
$ umount -a
$ kexec -e
&lt;/pre&gt;

&lt;p&gt;Fortunately the Debian/Ubuntu maintainers had already integrated this logic on the reboot/halt scripts and therefore it‚Äôs now possible to reboot the system without unmounting anything:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ kexec -l /boot/vmlinuz --command-line=&quot;`cat /proc/cmdline`&quot; --initrd=/boot/initrd
$ shutdown -r now
&lt;/pre&gt;

&lt;p&gt;In &lt;a href=&quot;http://lizards.opensuse.org/2008/10/13/automatic-reboot-with-kexec/&amp;quot;&amp;gt;&quot;&gt;OpenSuse 11.1&lt;/a&gt; kexec may even be an opt-in. The day where I never shutdown my computer gets closer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/linux/library/l-kexec.html&quot;&gt;http://www.ibm.com/developerworks/linux/library/l-kexec.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.linux.com/feature/150202&quot;&gt;http://www.linux.com/feature/150202&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lwn.net/Articles/15468/&quot;&gt;http://lwn.net/Articles/15468/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.google.com/p/atv-bootloader/wiki/Understandingkexec&quot;&gt;http://code.google.com/p/atv-bootloader/wiki/Understandingkexec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>gentoo useflags</title>
   <link href="http://javier.io/blog/en/2008/07/25/useflags-gentoo.html"/>
   <updated>2008-07-25T00:00:00+00:00</updated>
   <id>http://javier.io/blog/en/2008/07/25/useflags-gentoo</id>
   <content type="html">&lt;h2 id=&quot;gentoo-useflags&quot;&gt;gentoo useflags&lt;/h2&gt;

&lt;h6 id=&quot;25-jul-2008&quot;&gt;25 Jul 2008&lt;/h6&gt;

&lt;p&gt;These are the flags I‚Äôm using for a pentium-m laptop.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#console USE=&quot;${USE} bash-completion gpm ncurses slang fbcon&quot;

#graphical interface USE=&quot;${USE} dbus X gnome -kde cairo libnotify &quot;

#cd/dvd USE=&quot;${USE} cdr -dvdr dvdread &quot;

#hardware USE=&quot;${USE} -3dfx -3dnow acpi -apm -altivec bluetooth hal
ieee1394 ipod lirc lm_sensors mmx hddtemp -mpi -multilib -netboot nocd pcmcia
pda ppds -scanner sse sse2 usb wifi gphoto2 opengl&quot;

#dev USE=&quot;${USE} cscope dbm doc emacs examples expat -fortran -gcj
gtk -ifc -jikes java java6 javascript -mule pcre perl php python -qt3 -qt4
readline ruby sdl spl subversion&quot;

#net USE=&quot;${USE} -aim cups -freewnn ftp -icq idn imap ipv6 jabber libgda
mime mozilla -msn -oscar samba sockets socks5 ssl vhosts -yahoo evo mailwrapper
rss&quot;

#sound USE=&quot;${USE} alsa -oss ao esd osc ladspa lame
libsamplerate pulseaudio aac -arts audiofile -cddb cdparanoia dts flac jack
lash mad matroska mikmod modplug mp3 musepack musicbrainz&amp;amp;nbsp; ogg openal
shorten sox speex vorbis &quot;

#misc formats USE=&quot;${USE} bzip2 pdf xml zlib &quot;

#images USE=&quot;${USE} imagemagick gif jbig jpeg jpeg2k lcms mng openexr png
raw svg -wmf xpm&quot;

#video USE=&quot;${USE} a52 aalib dv dvb dvd encode exif
ffmpeg gstreamer libcaca mpeg mplayer quicktime theora v4l2 vcd -win32codecs xv
xvid&quot;

#security USE=&quot;${USE} clamav cracklib crypt pam syslog &quot;

#random USE=&quot;${USE} -accessibility -bindist cdinstall -debug fam nptl
offensive -old-linux posix session source spell threads truetype unicode videos
xprint xscreensaver nls&quot;

#dangerous flags: alpha, amd64, arm, hppa, ia64, mips, ppc, ppc64
#ppc-macos, s390, sh, sparc, x86 

#*******************************************
#*******************************************
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After changing use global flags, gentoo needs to be recompiled:&lt;/p&gt;

&lt;pre class=&quot;sh_sh&quot;&gt;
$ emerge --update --deep --with-bdeps=y --newuse world
&lt;/pre&gt;
</content>
 </entry>
 

</feed>
